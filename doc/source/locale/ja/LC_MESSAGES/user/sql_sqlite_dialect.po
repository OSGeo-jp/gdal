# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-15 10:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Yoichi Kayama <yoichi.kayama@gmail.com>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/user/sql_sqlite_dialect.rst:5
msgid "SQL SQLite dialect"
msgstr "SQL SQLite方言"

#: ../../source/user/sql_sqlite_dialect.rst:9
msgid ""
"The ``SQLite`` dialect can be used as an alternate SQL dialect to the "
":ref:`ogr_sql_dialect`. This assumes that GDAL/OGR is built with support "
"for SQLite, and preferably with `Spatialite <https://www.gaia-"
"gis.it/fossil/libspatialite/index>`_ support too to benefit from spatial "
"functions."
msgstr ""
"``SQLite`` 方言は :ref:`ogr_sql_dialect` の代替SQL方言として使用できます. "
"これは, GDAL/OGRがSQLiteのサポートをビルドされていることを前提としています. "
"空間関数を利用するためには, `Spatialite <https://www.gaia-gis.it/fossil/libspatialite/index>`_ "
"のサポートも望ましいです."

#: ../../source/user/sql_sqlite_dialect.rst:14
msgid ""
"The SQLite dialect may be used with any OGR datasource, like the OGR SQL "
"dialect. The ``SQLite`` dialect can be requested with the ``SQLite`` "
"string passed as the dialect parameter of "
":cpp:func:`GDALDataset::ExecuteSQL`, or with the `-dialect` option of the"
" :ref:`ogrinfo` or :ref:`ogr2ogr` utilities."
msgstr ""
"SQLite方言はOGR SQL方言と同様に, 任意のOGRデータソースで使用できます. "
"``SQLite`` 方言は, :cpp:func:`GDALDataset::ExecuteSQL` の方言パラメータとして ``SQLite`` 文字列を渡すか, "
":ref:`ogrinfo` や :ref:`ogr2ogr` ユーティリティの `-dialect` オプションでリクエストできます."

#: ../../source/user/sql_sqlite_dialect.rst:19
msgid ""
"This is mainly aimed to execute SELECT statements, but, for datasources "
"that support update, INSERT/UPDATE/DELETE statements can also be run. "
"GDAL is internally using `the Virtual Table Mechanism of SQLite "
"<https://sqlite.org/vtab.html>`_ and therefore operations like ALTER "
"TABLE are not supported. For executing ALTER TABLE or DROP TABLE use "
":ref:`ogr_sql_dialect`"
msgstr ""
"これは主にSELECT文を実行するために使用されますが, 更新をサポートするデータソースの場合, "
"INSERT/UPDATE/DELETE文も実行できます. GDALは内部的に `SQLiteの仮想テーブルメカニズム <https://sqlite.org/vtab.html>`_ "
"を使用しているため, ALTER TABLEのような操作はサポートされていません. ALTER TABLEやDROP TABLEを実行するには, "
":ref:`ogr_sql_dialect` を使用してください."

#: ../../source/user/sql_sqlite_dialect.rst:25
msgid ""
"If the datasource is SQLite database (GeoPackage, SpatiaLite) then SQLite"
" dialect acts as native SQL dialect and Virtual Table Mechanism is not "
"used. It is possible to force GDAL to use Virtual Tables even in this "
"case by specifying \"-dialect INDIRECT_SQLITE\". This should be used only"
" when necessary, since going through the virtual table mechanism might "
"affect performance."
msgstr ""
"データソースがSQLiteデータベース(GeoPackage, SpatiaLite)の場合, SQLite方言はネイティブSQL方言として機能し, "
"仮想テーブルメカニズムは使用されません. この場合でも, \"-dialect INDIRECT_SQLITE\" を指定することでGDALに仮想テーブルを使用させることができます. "
"これは必要な場合にのみ使用するべきです. 仮想テーブルメカニズムを経由するとパフォーマンスに影響する可能性があるためです

#: ../../source/user/sql_sqlite_dialect.rst:31
msgid ""
"The syntax of the SQL statements is fully the one of the SQLite SQL "
"engine. You can refer to the following pages:"
msgstr ""
"SQLステートメントの構文は完全にSQLite SQLエンジンのものです. 以下の"
"ページを参照してください:"

#: ../../source/user/sql_sqlite_dialect.rst:34
msgid "`SELECT <http://www.sqlite.org/lang_select.html>`_"
msgstr  "`SELECT <http://www.sqlite.org/lang_select.html>`_"

#: ../../source/user/sql_sqlite_dialect.rst:35
msgid "`INSERT <http://www.sqlite.org/lang_insert.html>`_"
msgstr "`INSERT <http://www.sqlite.org/lang_insert.html>`_"

#: ../../source/user/sql_sqlite_dialect.rst:36
msgid "`UPDATE <http://www.sqlite.org/lang_update.html>`_"
msgstr  "`UPDATE <http://www.sqlite.org/lang_update.html>`_"

#: ../../source/user/sql_sqlite_dialect.rst:37
msgid "`DELETE <http://www.sqlite.org/lang_delete.html>`_"
msgstr "`DELETE <http://www.sqlite.org/lang_delete.html>`_"

#: ../../source/user/sql_sqlite_dialect.rst:40
msgid "SELECT statement"
msgstr "SELECT文"

#: ../../source/user/sql_sqlite_dialect.rst:42
msgid ""
"The SELECT statement is used to fetch layer features (analogous to table "
"rows in an RDBMS) with the result of the query represented as a temporary"
" layer of features. The layers of the datasource are analogous to tables "
"in an RDBMS and feature attributes are analogous to column values. The "
"simplest form of OGR SQLITE SELECT statement looks like this:"
msgstr ""
"SELECT文は, レイヤーの地物(データベースのテーブル行に類似)を取得するために使用されます. "
"クエリの結果は地物の一時レイヤーとして表されます. データソースのレイヤーはデータベースのテーブルに類似し, "
"地物の属性は列の値に類似します. OGR SQLITE SELECT文の最も単純な形式は次のようになります:"

#: ../../source/user/sql_sqlite_dialect.rst:52
msgid ""
"More complex statements can of course be used, including WHERE, JOIN, "
"USING, GROUP BY, ORDER BY, sub SELECT, ..."
msgstr ""
"WHERE, JOIN, USING, GROUP BY, ORDER BY, sub SELECTなどを含むより複雑なステートメント"
"を使用することもできます."

#: ../../source/user/sql_sqlite_dialect.rst:55
msgid ""
"The table names that can be used are the layer names available in the "
"datasource on which the ExecuteSQL() method is called."
msgstr ""
"使用できるテーブル名は, ExecuteSQL()メソッドが呼び出されるデータソースで利用可能な"
"レイヤー名です."

#: ../../source/user/sql_sqlite_dialect.rst:58
msgid ""
"Similarly to OGRSQL, it is also possible to refer to layers of other "
"datasources with the following syntax : "
"\"other_datasource_name\".\"layer_name\"."
msgstr ""
"OGRSQLと同様に, 他のデータソースのレイヤーを参照することも可能です. "
"次の構文を使用します: \"other_datasource_name\".\"layer_name\"."

#: ../../source/user/sql_sqlite_dialect.rst:65
msgid ""
"If the master datasource is SQLite database (GeoPackage, SpatiaLite) it "
"is necessary to use indirect SQLite dialect. Otherwise additional "
"datasources are never opened but tables to be used in joins are searched "
"from the master database."
msgstr ""
"マスターデータソースがSQLiteデータベース(GeoPackage, SpatiaLite)の場合, "
"間接的なSQLite方言を使用する必要があります. そうでない場合, 追加のデータソースは"
"決して開かれませんが, 結合に使用されるテーブルはマスターデータベースから検索されます."

#: ../../source/user/sql_sqlite_dialect.rst:74
msgid ""
"The column names that can be used in the result column list, in WHERE, "
"JOIN, ... clauses are the field names of the layers. Expressions, SQLite "
"functions, spatial functions, etc... can also be used."
msgstr ""
"結果の列リスト, WHERE, JOINなどの句で使用できる列名は, レイヤーのフィールド名です. "
"式, SQLite関数, 空間関数なども使用できます."

#: ../../source/user/sql_sqlite_dialect.rst:79
msgid ""
"The conditions on fields expressed in WHERE clauses, or in JOINs are "
"translated, as far as possible, as attribute filters that are applied on "
"the underlying OGR layers. Joins can be very expensive operations if the "
"secondary table is not indexed on the key field being used."
msgstr ""
"WHERE句やJOIN句でフィールドに対する条件が表現されると, できる限り, それらは基になるOGRレイヤーに適用される属性フィルタとして"
"変換されます. キーフィールドにインデックスがない場合, JOINは非常に重い操作になる可能性があります."

#: ../../source/user/sql_sqlite_dialect.rst:85
msgid "LIKE operator"
msgstr "LIKE演算子"

#: ../../source/user/sql_sqlite_dialect.rst:87
msgid ""
"In SQLite, the LIKE operator is case insensitive, unless ``PRAGMA "
"case_sensitive_like = 1`` has been issued."
msgstr ""
"SQLiteでは, LIKE演算子は大文字小文字を区別しません. ``PRAGMA case_sensitive_like = 1`` が発行されて"
"いない限りです."

#: ../../source/user/sql_sqlite_dialect.rst:90
msgid ""
"Starting with GDAL 3.9, GDAL installs a custom LIKE comparison, such that"
" UTF-8 characters are taken into account by ``LIKE`` and ``ILIKE`` "
"operators. For ILIKE case insensitive comparisons, this is restricted to "
"the `ASCII "
"<https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)>`__, `Latin-1 "
"Supplement <https://en.wikipedia.org/wiki/Latin-"
"1_Supplement_(Unicode_block)>`__, `Latin Extended-A "
"<https://en.wikipedia.org/wiki/Latin_Extended-A>`__, `Latin Extended-B "
"<https://en.wikipedia.org/wiki/Latin_Extended-B>`__, `Greek and Coptic "
"<https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ and `Cyrillic "
"<https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ Unicode categories."
msgstr ""
"GDAL 3.9以降, GDALはUTF-8文字を ``LIKE`` および ``ILIKE`` 演算子で考慮するカスタムLIKE比較をインストールします. "
"ILIKEの大文字小文字を区別しない比較の場合, これは `ASCII <https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)>`__, "
"`Latin-1 Supplement <https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)>`__, `Latin Extended-A <https://en.wikipedia.org/wiki/Latin_Extended-A>`__, "
"`Latin Extended-B <https://en.wikipedia.org/wiki/Latin_Extended-B>`__, `Greek and Coptic <https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ "
"および `Cyrillic <https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ Unicodeカテゴリに制限されます."

#: ../../source/user/sql_sqlite_dialect.rst:101
msgid "Delimited identifiers"
msgstr "デリミテッド識別子"

#: ../../source/user/sql_sqlite_dialect.rst:103
msgid ""
"If names of layers or attributes are reserved keywords in SQL like 'FROM'"
" or they begin with a number or underscore they must be handled as "
"\"delimited identifiers\" and enclosed between double quotation marks in "
"queries. Double quotes can be used even when they are not strictly "
"needed."
msgstr ""
"レイヤーや属性の名前がSQLの予約キーワードである場合(例: 'FROM')や, 数字やアンダースコアで始まる場合, "
"クエリで \"デリミテッド識別子\" として扱われ, ダブルクォーテーションで囲まれます. ダブルクォーテーションは, "
"厳密に必要でない場合でも使用できます."

#: ../../source/user/sql_sqlite_dialect.rst:112
msgid ""
"When SQL statements are used in the command shell and the statement "
"itself is put between double quotes, the internal double quotes must be "
"escaped with \\\\"
msgstr ""
"SQLステートメントがコマンドシェルで使用され, ステートメント自体がダブルクォーテーションで囲まれている場合, "
"内部のダブルクォーテーションは \\\\ でエスケープする必要があります."

#: ../../source/user/sql_sqlite_dialect.rst:120
msgid "Geometry field"
msgstr "ジオメトリフィールド"

#: ../../source/user/sql_sqlite_dialect.rst:122
msgid ""
"The ``GEOMETRY`` special field represents the geometry of the feature "
"returned by OGRFeature::GetGeometryRef(). It can be explicitly specified "
"in the result column list of a SELECT, and is automatically selected if "
"the * wildcard is used."
msgstr ""
"``GEOMETRY`` 特殊フィールドは, OGRFeature::GetGeometryRef() によって返される地物のジオメトリを表します. "
"SELECTの結果列リストで明示的に指定することができ, * ワイルドカードが使用されると自動的に選択されます."

#: ../../source/user/sql_sqlite_dialect.rst:127
msgid ""
"For OGR layers that have a non-empty geometry column name (generally for "
"RDBMS datasources), as returned by OGRLayer::GetGeometryColumn(), the "
"name of the geometry special field in the SQL statement will be the name "
"of the geometry column of the underlying OGR layer. If the name of the "
"geometry column in the source layer is empty, like with shapefiles etc., "
"the name to use in the SQL statement is always \"geometry\". Here we'll "
"use it case-insensitively (as all field names are in a SELECT statement):"
msgstr ""
"一般的にRDBMSデータソースの場合, OGRLayer::GetGeometryColumn() によって返されるジオメトリ列名が空でないOGRレイヤーに対して, "
"SQLステートメントのジオメトリ特殊フィールドの名前は, 基になるOGRレイヤーのジオメトリ列の名前になります. "
"ソースレイヤーのジオメトリ列の名前が空の場合, shapefileなどの場合, SQLステートメントで使用する名前は常に \"geometry\" です. "
"ここでは, 大文字小文字を区別せずに使用します(すべてのフィールド名がSELECTステートメントであるため):"

#: ../../source/user/sql_sqlite_dialect.rst:138
#: ../../source/user/sql_sqlite_dialect.rst:150
#: ../../source/user/sql_sqlite_dialect.rst:225
#: ../../source/user/sql_sqlite_dialect.rst:354
#: ../../source/user/sql_sqlite_dialect.rst:365
msgid "returns:"
msgstr "リターン:"

#: ../../source/user/sql_sqlite_dialect.rst:161
msgid "Feature id (FID)"
msgstr "地物ID (FID)"

#: ../../source/user/sql_sqlite_dialect.rst:163
msgid ""
"The feature id is a special property of a feature and not treated as an "
"attribute of the feature.  In some cases it is convenient to be able to "
"utilize the feature id in queries and result sets as a regular field.  To"
" do so use the name ``rowid``."
msgstr ""
"地物IDは地物の特別なプロパティであり, 地物の属性として扱われません. "
"場合によっては, 地物IDをクエリや結果セットで通常のフィールドとして利用できると便利です. "
"その場合は ``rowid`` という名前を使用します."

#: ../../source/user/sql_sqlite_dialect.rst:168
msgid ""
"Starting with GDAL 3.8, if the layer has a named FID column "
"(:cpp:func:`OGRLayer::GetFIDColumn` != \"\"), this name may also be used."
msgstr ""
"GDAL 3.8以降, レイヤーに名前付きFID列がある場合 (:cpp:func:`OGRLayer::GetFIDColumn` != \"\"), "
"この名前も使用できます."

#: ../../source/user/sql_sqlite_dialect.rst:171
#: ../../source/user/sql_sqlite_dialect.rst:179
msgid ""
"The field wildcard expansions will not include the feature id, but it may"
" be explicitly included using a syntax like:"
msgstr ""
"フィールドワイルドカードの展開には地物IDは含まれませんが, 次のような構文を使用して"
"明示的に含めることができます:"


#: ../../source/user/sql_sqlite_dialect.rst:186
msgid "It is of course possible to rename it:"
msgstr "これの名前を変更することも可能です:"

#: ../../source/user/sql_sqlite_dialect.rst:193
msgid "OGR_STYLE special field"
msgstr "OGR_STYLE特殊フィールド"

#: ../../source/user/sql_sqlite_dialect.rst:195
msgid ""
"The ``OGR_STYLE`` special field represents the style string of the "
"feature returned by OGRFeature::GetStyleString(). By using this field and"
" the ``LIKE`` operator the result of the query can be filtered by the "
"style. For example we can select the annotation features as:"
msgstr ""
"``OGR_STYLE`` 特殊フィールドは, OGRFeature::GetStyleString() によって返される地物のスタイル文字列を表します. "
"このフィールドと ``LIKE`` 演算子を使用することで, クエリの結果をスタイルでフィルタリングすることができます. "
"例えば, アノテーション地物を選択することができます:"

#: ../../source/user/sql_sqlite_dialect.rst:205
msgid "Statistics functions"
msgstr "統計関数"

#: ../../source/user/sql_sqlite_dialect.rst:207
msgid ""
"In addition to standard COUNT(), SUM(), AVG(), MIN(), MAX(), the "
"following aggregate functions are available:"
msgstr ""
"標準の COUNT(), SUM(), AVG(), MIN(), MAX() に加えて, 次の集計関数が"
"利用可能です:"


#: ../../source/user/sql_sqlite_dialect.rst:210
msgid "STDDEV_POP: (GDAL >= 3.10) numerical population standard deviation."
msgstr "STDDEV_POP: (GDAL >= 3.10) 数値の母集団標準偏差."

#: ../../source/user/sql_sqlite_dialect.rst:211
msgid ""
"STDDEV_SAMP: (GDAL >= 3.10) numerical `sample standard deviation "
"<https://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation>`__"
msgstr ""
"STDDEV_SAMP: (GDAL >= 3.10) 数値の "
"`標本標準偏差 <https://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation>`__"

#: ../../source/user/sql_sqlite_dialect.rst:214
msgid "Spatialite SQL functions"
msgstr "Spatialite SQL関数"

#: ../../source/user/sql_sqlite_dialect.rst:216
msgid ""
"When GDAL/OGR is build with support for the `Spatialite <https://www"
".gaia-gis.it/fossil/libspatialite/index>`_ library, a lot of `extra SQL "
"functions <http://www.gaia-gis.it/gaia-sins/spatialite-sql-"
"latest.html>`_, in particular spatial functions, can be used in results "
"column fields, WHERE clauses, etc...."
msgstr ""
"GDAL/OGRが `Spatialite <https://www.gaia-gis.it/fossil/libspatialite/index>`_ ライブラリのサポートでビルドされている場合, "
"多くの `追加のSQL関数 <http://www.gaia-gis.it/gaia-sins/spatialite-sql-latest.html>`_ が利用可能になります. "
"特に空間関数は, 結果の列フィールド, WHERE句などで使用できます."

#: ../../source/user/sql_sqlite_dialect.rst:241
msgid ""
"Note that due to the loose typing mechanism of SQLite, if a geometry "
"expression returns a NULL value for the first row, this will generally "
"cause OGR not to recognize the column as a geometry column. It might be "
"then useful to sort the results by making sure that non-null geometries "
"are returned first:"
msgstr ""
"SQLiteの緩い型付けメカニズムのため, ジオメトリ式が最初の行でNULL値を返すと,"
" 一般的にOGRはその列をジオメトリ列として認識しません. "
"そのため, 非NULLジオメトリが最初に返されるように結果をソートすることが役立つ場合があります:"

#: ../../source/user/sql_sqlite_dialect.rst:251
msgid "OGR datasource SQL functions"
msgstr "OGRデータソースSQL関数"

#: ../../source/user/sql_sqlite_dialect.rst:253
msgid ""
"The ``ogr_datasource_load_layers(datasource_name[, update_mode[, "
"prefix]])`` function can be used to automatically load all the layers of "
"a datasource as :ref:`VirtualOGR tables <vector.sqlite>`."
msgstr ""
"``ogr_datasource_load_layers(datasource_name[, update_mode[, prefix]])`` 関数は, "
"データソースのすべてのレイヤーを "
":ref:`VirtualOGR tables <vector.sqlite>` として自動的にロードするために使用できます."

#: ../../source/user/sql_sqlite_dialect.rst:269
msgid "OGR layer SQL functions"
msgstr "OGRレイヤーSQL関数"

#: ../../source/user/sql_sqlite_dialect.rst:271
msgid ""
"The following SQL functions are available and operate on a layer name : "
"``ogr_layer_Extent()``, ``ogr_layer_SRID()``, "
"``ogr_layer_GeometryType()`` and ``ogr_layer_FeatureCount()``"
msgstr ""
"次のSQL関数が利用可能で, レイヤー名に対して動作します: "
"``ogr_layer_Extent()``, ``ogr_layer_SRID()``, "
"``ogr_layer_GeometryType()`` および ``ogr_layer_FeatureCount()``"

#: ../../source/user/sql_sqlite_dialect.rst:289
msgid "OGR compression functions"
msgstr "OGR圧縮関数"

#: ../../source/user/sql_sqlite_dialect.rst:291
msgid ""
"``ogr_deflate(text_or_blob[, compression_level])`` returns a binary blob "
"compressed with the ZLib deflate algorithm. See "
":cpp:func:`CPLZLibDeflate`"
msgstr ""
"``ogr_deflate(text_or_blob[, compression_level])`` は, ZLib deflateアルゴリズムで圧縮されたバイナリblobを返します. "
":cpp:func:`CPLZLibDeflate` を参照してください."

#: ../../source/user/sql_sqlite_dialect.rst:294
msgid ""
"``ogr_inflate(compressed_blob)`` returns the decompressed binary blob, "
"from a blob compressed with the ZLib deflate algorithm. If the "
"decompressed binary is a string, use CAST(ogr_inflate(compressed_blob) AS"
" VARCHAR). See CPLZLibInflate()."
msgstr ""
"``ogr_inflate(compressed_blob)`` は, ZLib deflateアルゴリズムで圧縮されたblobから解凍されたバイナリblobを返します. "
"解凍されたバイナリが文字列の場合, CAST(ogr_inflate(compressed_blob) AS VARCHAR) を使用してください. "
"CPLZLibInflate() を参照してください."

#: ../../source/user/sql_sqlite_dialect.rst:300
msgid "Other functions"
msgstr "その他の関数"

#: ../../source/user/sql_sqlite_dialect.rst:302
msgid ""
"The ``hstore_get_value()`` function can be used to extract a value "
"associate to a key from a HSTORE string, formatted like "
"\"key=>value,other_key=>other_value,...\""
msgstr ""
"``hstore_get_value()`` 関数は, \"key=>value,other_key=>other_value,...\" の"
"ようにフォーマットされたHSTORE文字列からキーに関連付けられた値を抽出するために使用できます."

#: ../../source/user/sql_sqlite_dialect.rst:312
msgid "Raster related functions"
msgstr "ラスタ関連関数"

#: ../../source/user/sql_sqlite_dialect.rst:314
msgid ""
"The ``gdal_get_pixel_value()`` function (added in GDAL 3.7) can be used "
"to extract the value of a pixel in a GDAL dataset. It requires the "
"configuration option OGR_SQLITE_ALLOW_EXTERNAL_ACCESS to be set to YES "
"(for security reasons)."
msgstr ""
"``gdal_get_pixel_value()`` 関数 (GDAL 3.7で追加) は, GDALデータセットの"
"ピクセルの値を抽出するために使用できます. "
"セキュリティ上の理由から, OGR_SQLITE_ALLOW_EXTERNAL_ACCESS設定オプション"
"をYESに設定する必要があります."

#: ../../source/user/sql_sqlite_dialect.rst:318
msgid "It takes 5 or 6 arguments:"
msgstr "5または6つの引数が必要です:"

#: ../../source/user/sql_sqlite_dialect.rst:320
msgid "a string with the dataset name"
msgstr "データセット名の文字列"

#: ../../source/user/sql_sqlite_dialect.rst:321
msgid "a band number (numbering starting at 1)"
msgstr "バンド番号 (1から始まる番号)"

#: ../../source/user/sql_sqlite_dialect.rst:322
msgid ""
"a string being \"georef\" to indicate that subsequent values will be "
"georeferenced coordinates, or \"pixel\" to indicate that subsequent "
"values will be in column, line pixel space"
msgstr ""
"後続の値がジオリファレンス座標であることを示す \"georef\" または, "
"後続の値が列, 行ピクセル空間であることを示す \"pixel\" である文字列"

#: ../../source/user/sql_sqlite_dialect.rst:325
msgid "georeferenced X value or column number"
msgstr "ジオリファレンスされたX値または列番号"

#: ../../source/user/sql_sqlite_dialect.rst:326
msgid "georeferenced Y value or line number"
msgstr "ジオリファレンスされたY値または行番号"

#: ../../source/user/sql_sqlite_dialect.rst:327
msgid ""
"resampling method among ``nearest`` (default), ``bilinear``, ``cubic``, "
"``cubicspline``. Optional, added in GDAL 3.10"
msgstr ""
"``nearest`` (デフォルト), ``bilinear``, ``cubic``, ``cubicspline`` の中からのリサンプリング方法. "
"オプション指定, GDAL 3.10で追加"

#: ../../source/user/sql_sqlite_dialect.rst:337
msgid "OGR geocoding functions"
msgstr "OGRジオコーディング関数"

#: ../../source/user/sql_sqlite_dialect.rst:339
msgid ""
"The following SQL functions are available : ``ogr_geocode(...)`` and "
"``ogr_geocode_reverse(...)``."
msgstr ""
"次のSQL関数が利用可能です: ``ogr_geocode(...)`` および "
"``ogr_geocode_reverse(...)``."

#: ../../source/user/sql_sqlite_dialect.rst:341
msgid ""
"``ogr_geocode(name_to_geocode [, field_to_return [, option1 [, option2, "
"...]]])`` where name_to_geocode is a literal or a column name that must "
"be geocoded. field_to_return if specified can be \"geometry\" for the "
"geometry (default), or a field name of the layer returned by "
":cpp:func:`OGRGeocode`. The special field  \"raw\" can also be used to "
"return the raw response (XML string) of the geocoding service. option1, "
"option2, etc.. must be of the key=value format, and are options "
"understood by :cpp:func:`OGRGeocodeCreateSession` or OGRGeocode()."
msgstr ""
"``ogr_geocode(name_to_geocode [, field_to_return [, option1 [, option2, ...]]])`` は, "
"ジオコーディングする必要があるリテラルまたは列名です. field_to_return が指定されている場合, "
"ジオコーディングによって返されるレイヤーのフィールド名であることができます. "
"ジオメトリ(デフォルト)の場合は \"geometry\" になります. ジオコーディングサービスの生の応答(XML文字列)を返すために, "
"特別なフィールド \"raw\" も使用できます. option1, option2などは, key=value形式である必要があり, "
":cpp:func:`OGRGeocodeCreateSession` または OGRGeocode() で理解されるオプションです."

#: ../../source/user/sql_sqlite_dialect.rst:348
msgid ""
"This function internally uses the OGRGeocode() API. Refer to it for more "
"details."
msgstr ""
"この関数は内部的にOGRGeocode() APIを使用しています. 詳細については, それを参照"
"してください."

#: ../../source/user/sql_sqlite_dialect.rst:400
msgid ""
"``ogr_geocode_reverse(longitude, latitude, field_to_return [, option1 [, "
"option2, ...]])`` where longitude, latitude is the coordinate to query. "
"field_to_return must be a field name of the layer returned by "
"OGRGeocodeReverse() (for example 'display_name'). The special field  "
"\"raw\" can also be used to return the raw response (XML string) of the "
"geocoding service. option1, option2, etc.. must be of the key=value "
"format, and are options understood by OGRGeocodeCreateSession() or "
"OGRGeocodeReverse()."
msgstr ""
"``ogr_geocode_reverse(longitude, latitude, field_to_return [, option1 [, option2, ...]])`` は, "
"longitude, latitude がクエリする座標です. field_to_return は, OGRGeocodeReverse() によって返されるレイヤーのフィールド名である必要があります "
"(例: 'display_name'). ジオコーディングサービスの生の応答(XML文字列)を返すために, "
"特別なフィールド \"raw\" も使用できます. option1, option2などは, key=value形式である必要があり, "
"OGRGeocodeCreateSession() または OGRGeocodeReverse() で理解されるオプションです."

#: ../../source/user/sql_sqlite_dialect.rst:407
msgid ""
"``ogr_geocode_reverse(geometry, field_to_return [, option1 [, option2, "
"...]])`` is also accepted as an alternate syntax where geometry is a "
"(Spatialite) point geometry."
msgstr ""
"``ogr_geocode_reverse(geometry, field_to_return [, option1 [, option2, ...]])`` は, "
"geometryが(Spatialite)ポイントジオメトリである場合の代替構文としても受け入れられます."

#: ../../source/user/sql_sqlite_dialect.rst:410
msgid ""
"This function internally uses the :cpp:func:`OGRGeocodeReverse` API. "
"Refer to it for more details."
msgstr ""
"この関数は内部的に :cpp:func:`OGRGeocodeReverse` API を使用しています. "
"詳細については, それを参照してください."

#: ../../source/user/sql_sqlite_dialect.rst:413
msgid "Spatialite spatial index"
msgstr "Spatialite空間インデックス"

#: ../../source/user/sql_sqlite_dialect.rst:415
msgid ""
"Spatialite spatial index mechanism can be triggered by making sure a "
"spatial index virtual table is mentioned in the SQL (of the form "
"idx_layername_geometrycolumn), or by using the more recent SpatialIndex "
"from the VirtualSpatialIndex extension. In which case, a in-memory RTree "
"will be built to be used to speed up the spatial queries."
msgstr ""
"Spatialite空間インデックスメカニズムは, SQLに空間インデックス仮想テーブルが言及されていることを確認するか, "
"より新しいVirtualSpatialIndex拡張機能を使用することでトリガーされます. この場合, "
"空間クエリの高速化に使用するために, メモリ内のRTreeが構築されます."

#: ../../source/user/sql_sqlite_dialect.rst:420
msgid ""
"For example, a spatial intersection between 2 layers, by using a spatial "
"index on one of the layers to limit the number of actual geometry "
"intersection computations :"
msgstr ""
"例えば, 1つのレイヤーに空間インデックスを使用して実際のジオメトリ交差計算の数を制限することで, "
"2つのレイヤー間の空間交差を行う:"

#: ../../source/user/sql_sqlite_dialect.rst:432
msgid "or more elegantly :"
msgstr "またはよりエレガントな方法:"

#~ msgid "It takes 5 arguments:"
#~ msgstr ""

