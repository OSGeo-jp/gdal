# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-31 22:42+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/development/rfc/rfc102_embedded_resources.rst:5
msgid "RFC 102: Embedding resource files into libgdal"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:8
msgid "Author:"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:8
msgid "Even Rouault"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:9
msgid "Contact:"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:9
msgid "even.rouault @ spatialys.com"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:10
msgid "Started:"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:10
msgid "2024-Oct-01"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:11
msgid "Status:"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:11
msgid "Adopted, implemented"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:12
msgid "Target:"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:12
msgid "GDAL 3.11"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:16
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:18
msgid ""
"This RFC uses C23 ``#embed`` pre-processor directive, when available, to "
"be able to optionally embed GDAL resource files directly into libgdal."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:21
msgid ""
"A similar `PROJ RFC-8 <https://github.com/OSGeo/PROJ/pull/4274>`__ has "
"been submitted for PROJ to embed its :file:`proj.db` and :file:`proj.ini`"
" files."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:25
msgid "Motivation"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:27
msgid ""
"Some parts of GDAL core, mostly drivers, require external resource files "
"located in the filesystem. Locating these resource files is difficult for"
" use cases where the GDAL binaries are relocated during installation "
"time. One such case could be the GDAL embedded in Rasterio or Fiona "
"binary wheels where :config:`GDAL_DATA` must be set to the directory of "
"the resource files. Web-assembly (WASM) use cases come also to mind as "
"users of GDAL builds where resources are directly included in libgdal."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:35
msgid "Technical solution"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:37
msgid ""
"The C23 standard includes a `#embed \"filename\" "
"<https://en.cppreference.com/w/c/preprocessor/embed>`__ pre-processor "
"directive that ingests the specified filename and returns its content as "
"tokens that can be stored in a unsigned char or char array."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:41
msgid ""
"Getting the content of a file into a variable is as simple as the "
"following (which also demonstrates adding a nul-terminating character "
"when this is needed):"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:51
msgid "Compiler support"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:53
msgid ""
"Support for that directive is still very new. clang 19.1 is the first "
"compiler which has a release including it, and has an efficient "
"implementation of it, able to embed very large files with minimum RAM and"
" CPU usage."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:58
msgid ""
"The development version of GCC 15 also supports it, but in a non-"
"optimized way for now. i.e. trying to include large files, of several "
"tens of megabytes could cause significant compilation time, but without "
"impact on runtime. This is not an issue for GDAL use cases, and there is "
"intent from GCC developers to improve this in the future."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:64
msgid ""
"Embedding PROJ's :file:`proj.db` of size 9.1 MB with GCC 15dev at time of"
" writing takes 18 seconds and 1.7 GB RAM, compared to 0.4 second and 400 "
"MB RAM for clang 19, which is still reasonable (Generating "
":file:`proj.db` itself from its source .sql files takes one minute on the"
" same system)."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:69
msgid ""
"There is no timeline for Visual Studio C/C++ at time of writing (it has "
"been `requested by users <https://developercommunity.visualstudio.com/t"
"/Add-support-for-embed-as-voted-into-the/10451640>`__)"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:72
msgid ""
"To be noted that currently clang 19.1 only supports ``#embed`` in .c "
"files, not C++ ones (the C++ standard has not yet adopted this feature). "
"So embedding resources must be done in a .c file, which is obviously not "
"a problem since we can easily export symbols/functions from a .c file to "
"be available by C++."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:78
msgid "New CMake options"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:80
msgid ""
"Resources will only be embedded if the new ``EMBED_RESOURCE_FILES`` CMake"
" option is set to ``ON``. This option will default to ``ON`` for static "
"library builds and if `C23 ``#embed`` is detected to be available. Users "
"might also turn it to ON for shared library builds. A CMake error is "
"emitted if the option is turned on but the compiler lacks support for it."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:86
msgid ""
"A complementary CMake option ``USE_ONLY_EMBEDDED_RESOURCE_FILES`` will "
"also be added. It will default to ``OFF``. When set to ON, GDAL will not "
"try to locate resource files in the GDAL_DATA directory burnt at build "
"time into libgdal (``${install_prefix}/share/gdal``), or by the "
":config:`GDAL_DATA` configuration option."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:91
msgid ""
"Said otherwise, if ``EMBED_RESOURCE_FILES=ON`` but "
"``USE_ONLY_EMBEDDED_RESOURCE_FILES=OFF``, GDAL will first try to locate "
"resource files from the file system, and fallback to the embedded version"
" if not found."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:95
msgid ""
"The resource files will still be installed in "
"``${install_prefix}/share/gdal``, unless "
"``USE_ONLY_EMBEDDED_RESOURCE_FILES`` is set to ON."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:99
msgid "Impacted code"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:101
msgid "gcore: embedding LICENSE.TXT, and tms_*.json files"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:102
msgid "frmts/grib: embedding GRIB2 CSV files"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:103
msgid "frmts/hdf5: embedding bag_template.xml"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:104
msgid "frmts/nitf: embedding nitf_spec.xml"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:105
msgid "frmts/pdf: embedding pdf_composition.xml"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:106
msgid "frmts/pds: embedding pds4_template.xml and vicar.json"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:107
msgid "ogr/ogrsf_frmts/dgn: embedding seed_2d.dgn and seed_3d.dgn"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:108
msgid "ogr/ogrsf_frmts/dxf: embedding header.dxf and leader.dxf"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:109
msgid "ogr/ogrsf_frmts/gml: embedding .gfs files and gml_registry.xml"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:110
msgid "ogr/ogrsf_frmts/gmlas: embedding gmlasconf.xml"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:111
msgid "ogr/ogrsf_frmts/miramon: embedding MM_m_idofic.csv"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:112
msgid "ogr/ogrsf_frmts/osm: embedding osm_conf.ini"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:113
msgid "ogr/ogrsf_frmts/plscenes: embedding plscenesconf.json"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:114
msgid "ogr/ogrsf_frmts/s57: embedding s57*.csv files"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:115
msgid "ogr/ogrsf_frmts/sxf: embedding default.rsc"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:116
msgid "ogr/ogrsf_frmts/vdv: embedding vdv452.xml"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:119
msgid "Considered alternatives"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:121
msgid ""
"Including resource files into libraries has been a long-wished feature of"
" C/C++. Different workarounds have emerged over the years, such as the "
"use of the ``od -x`` utility, GNU ``ld`` linker ``-b`` mode, or CMake-"
"based solutions such as https://jonathanhamberg.com/post/cmake-file-"
"embedding/"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:126
msgid ""
"We could potentially use the later to address non-C23 capable compilers, "
"but we have chosen not to do that, for the sake of implementation "
"simplicity. And, if considering using the CMake trick as the only "
"solution, we should note that C23 #embed has the potential for better "
"compile time, as demonstrated by clang implementation."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:133
msgid "Backward compatibility"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:135
msgid "Fully backwards compatible."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:137
msgid "C23 is not required, unless EMBED_RESOURCE_FILES is enabled in GDAL."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:140
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:142
msgid "The 2 new CMake variables will be documented."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:145
msgid "Testing"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:147
msgid ""
"The existing fedora:rawhide continuous integration target, which has now "
"clang 19.1 available, will be modified to test the effect of the new "
"variables."
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:150
msgid ""
"Local builds using GCC 15dev builds of https://jwakely.github.io/pkg-gcc-"
"latest/ have also be successfully done during the development of the "
"candidate implementation"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:154
msgid "Related issues and PRs"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:156
msgid "https://github.com/OSGeo/gdal/issues/10780"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:158
msgid ""
"`GDAL candidate implementation "
"<https://github.com/OSGeo/gdal/pull/10972>`__"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:160
msgid ""
"`PROJ RFC-8 Embedding resource files into libproj "
"<https://proj.org/en/latest/community/rfc/rfc-8.html>`__"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:163
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc102_embedded_resources.rst:165
msgid "+1 from PSC members JukkaR, JavierJS, KurtS, HowardB and EvenR"
msgstr ""

