# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-31 22:42+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Yoichi Kayama <yoichi.kayama@gmail.com>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/development/building_from_source.rst:5
msgid "Building GDAL from source"
msgstr "GDAL のソースからのビルド"

#: ../../source/development/building_from_source.rst:10
msgid "Build requirements"
msgstr "ビルド要件"

#: ../../source/development/building_from_source.rst:12
msgid "The minimum requirements to build GDAL are:"
msgstr "GDAL をビルドするための最小要件は次のとおりです:"

#: ../../source/development/building_from_source.rst:14
msgid ""
"CMake >= 3.16, and an associated build system (make, ninja, Visual "
"Studio, etc.)"
msgstr "CMake >= 3.16, および関連するビルドシステム (make, ninja, Visual Studio, など)"

#: ../../source/development/building_from_source.rst:15
msgid "C99 compiler"
msgstr "C99 コンパイラ"

#: ../../source/development/building_from_source.rst:16
msgid "C++17 compiler since GDAL 3.9 (C++11 in previous versions)"
msgstr "GDAL 3.9 以降は C++17 コンパイラ (以前のバージョンでは C++11)"

#: ../../source/development/building_from_source.rst:17
msgid "PROJ >= 6.3.1"
msgstr "PROJ >= 6.3.1"

#: ../../source/development/building_from_source.rst:19
msgid "Additional requirements to run the GDAL test suite are:"
msgstr "GDAL テストスイートを実行するための追加要件は次のとおりです:"

#: ../../source/development/building_from_source.rst:21
msgid "SWIG >= 4, for building bindings to other programming languages"
msgstr "他のプログラミング言語へのバインディングをビルドするための SWIG >= 4"

#: ../../source/development/building_from_source.rst:22
msgid "Python >= 3.8"
msgstr "Python >= 3.8"

#: ../../source/development/building_from_source.rst:23
msgid "Python packages listed in `autotest/requirements.txt`"
msgstr "`autotest/requirements.txt` にリストされた Python パッケージ"

#: ../../source/development/building_from_source.rst:25
msgid ""
"A number of optional libraries are also strongly recommended for most "
"builds: SQLite3, expat, libcurl, zlib, libtiff, libgeotiff, libpng, "
"libjpeg, etc. Consult :ref:`raster_drivers` and :ref:`vector_drivers` "
"pages for information on dependencies of optional drivers."
msgstr ""
"多くのビルドには SQLite3, expat, libcurl, zlib, libtiff, libgeotiff, libpng, "
"libjpeg などのオプションライブラリが強く推奨されます.オプションドライバの依存関係については, :ref:`raster_drivers`"
" および :ref:`vector_drivers` ページを参照してください."

#: ../../source/development/building_from_source.rst:31
msgid "CMake (GDAL versions >= 3.5.0)"
msgstr "CMake (GDAL バージョン >= 3.5.0)"

#: ../../source/development/building_from_source.rst:33
msgid ""
"Since version 3.5.0, GDAL can be built using the CMake build system. With"
" the CMake build system you can compile and install GDAL on more or less "
"any platform. After unpacking the source distribution archive (or cloning"
" the repository) step into the source tree:"
msgstr ""
"バージョン 3.5.0 以降, GDAL は CMake ビルドシステムを使用してビルドできます.CMake ビルドシステムを使用すると, "
"ほぼすべてのプラットフォームで GDAL をコンパイルおよびインストールできます. ソース配布アーカイブを展開した後 "
"(またはリポジトリをクローンした後) ソースツリーに移動します:"

#: ../../source/development/building_from_source.rst:42
msgid "Create a build directory and step into it:"
msgstr "ビルドディレクトリを作成し, そのディレクトリに移動します:"

#: ../../source/development/building_from_source.rst:49
msgid ""
"From the build directory you can now configure CMake, build and install "
"the binaries:"
msgstr "ビルドディレクトリから CMake を設定し, バイナリをビルドおよびインストールできます:"

#: ../../source/development/building_from_source.rst:59
msgid ""
"For a minimal build, add these options to the initial ``cmake`` command: "
"``-DGDAL_BUILD_OPTIONAL_DRIVERS=OFF -DOGR_BUILD_OPTIONAL_DRIVERS=OFF``. "
"To enable specific drivers, add ``-DGDAL_ENABLE_DRIVER_<driver_name>=ON``"
" or ``-DOGR_ENABLE_DRIVER_<driver_name>=ON``. See :ref:`selection-of-"
"drivers` for more details."
msgstr ""
"最小限のビルドの場合, 初期の ``cmake`` コマンドにこれらのオプションを追加します: "
"``-DGDAL_BUILD_OPTIONAL_DRIVERS=OFF -DOGR_BUILD_OPTIONAL_DRIVERS=OFF``. "
"特定のドライバを有効にするには, ``-DGDAL_ENABLE_DRIVER_<driver_name>=ON`` または "
"``-DOGR_ENABLE_DRIVER_<driver_name>=ON`` を追加します. 詳細については, :ref"
":`selection-of-drivers` を参照してください."

#: ../../source/development/building_from_source.rst:65
msgid ""
"The ``--prefix /installation/prefix`` option of CMake (>= 3.14) is "
"supported since GDAL 3.7.0, but note that contrary to setting the "
"CMAKE_INSTALL_PREFIX at configuration time, it will not result in the "
"GDAL_DATA path to be hardcoded into the libgdal binary, and is thus not "
"recommended. It is also not supported on Windows multi-configuration "
"generator (such as VisualStudio)."
msgstr ""
"CMake (>= 3.14) の ``--prefix /installation/prefix`` オプションは GDAL 3.7.0 "
"以降でサポートされていますが, 設定時に CMAKE_INSTALL_PREFIX を設定するのとは異なり, GDAL_DATA パスが "
"libgdal バイナリにハードコードされないため, お勧めできません. また, Windows のマルチ構成ジェネレータ "
"(VisualStudio など) ではサポートされていません."

#: ../../source/development/building_from_source.rst:72
msgid ""
"If a dependency is installed in a custom location, specify the paths to "
"the include directory and the library:"
msgstr "依存関係がカスタムの場所にインストールされている場合, include ディレクトリとライブラリへのパスを指定します:"

#: ../../source/development/building_from_source.rst:79
msgid "Alternatively, a custom prefix can be specified:"
msgstr "または, カスタムプレフィックスを指定できます:"

#: ../../source/development/building_from_source.rst:85
msgid ""
"It is strongly recommended (and sometimes compulsory) to specify paths on"
" Windows using forward slashes as well, e.g.: ``c:/path/to/include``."
msgstr "Windows でのパスはスラッシュも使用することが強く推奨されます (時には強制的に), 例えば: ``c:/path/to/include``."

#: ../../source/development/building_from_source.rst:88
msgid ""
"You can unset existing cached variables, by using the -U switch of cmake,"
" for example with wildcards:"
msgstr "ワイルドカードを使用して, cmake の -U スイッチを使用して既存のキャッシュ変数を解除できます. たとえば:"

#: ../../source/development/building_from_source.rst:94
msgid ""
"You can assemble dependency settings in a file ``ConfigUser.cmake`` and "
"use it with the -C option. The file contains set() commands that use the "
"CACHE option. You can set for example a different name for the shared "
"lib, *e.g.* ``set (GDAL_LIB_OUTPUT_NAME gdal_x64 CACHE STRING \"\" "
"FORCE)``:"
msgstr ""
"依存関係の設定を ``ConfigUser.cmake`` ファイルにまとめ, -C オプションを使用してそれを使用できます. ファイルには "
"CACHE オプションを使用する set() コマンドが含まれています. たとえば, 共有ライブラリの異なる名前を設定できます. 例: ``set"
" (GDAL_LIB_OUTPUT_NAME gdal_x64 CACHE STRING \"\" FORCE)``:"

#: ../../source/development/building_from_source.rst:104
msgid ""
"When iterating to configure GDAL to add/modify/remove dependencies, some "
"cache variables can remain in CMakeCache.txt from previous runs, and "
"conflict with new settings. If strange errors appear during cmake run, "
"you may try removing CMakeCache.txt to start from a clean state."
msgstr ""
"依存関係を追加/変更/削除するために GDAL を設定する際に反復する場合, 一部のキャッシュ変数は前回の実行から CMakeCache.txt "
"に残り, 新しい設定と競合する可能性があります. cmake 実行中に奇妙なエラーが発生した場合, CMakeCache.txt "
"を削除してクリーンな状態から開始することができます."

#: ../../source/development/building_from_source.rst:109
msgid ""
"Refer to :ref:`using_gdal_in_cmake` for how to use GDAL in a CMake "
"project."
msgstr "CMake プロジェクトで GDAL を使用する方法については, :ref:`using_gdal_in_cmake` を参照してください."

#: ../../source/development/building_from_source.rst:112
msgid "Building on Windows"
msgstr "Windows でのビルド"

#: ../../source/development/building_from_source.rst:114
msgid "On Windows, one may need to specify generator:"
msgstr "Windows では, ジェネレータを指定する必要があるかもしれません:"

#: ../../source/development/building_from_source.rst:122
msgid "Building on MacOS"
msgstr "MacOS でのビルド"

#: ../../source/development/building_from_source.rst:124
msgid ""
"On MacOS, there are a couple of libraries that do not function properly "
"when the GDAL build requirements are installed using Homebrew."
msgstr "MacOS では, GDAL ビルド要件が Homebrew を使用してインストールされている場合, 正常に機能しないライブラリがいくつかあります."

#: ../../source/development/building_from_source.rst:126
msgid ""
"The `Apache Arrow <https://arrow.apache.org/docs/index.html>`_ library "
"included in the current distribution of Homebrew is broken, and causes a "
"detection issue. In order to build GDAL successfully, configure CMake to "
"not find the Arrow package:"
msgstr ""
"現在の Homebrew ディストリビューションに含まれている `Apache Arrow "
"<https://arrow.apache.org/docs/index.html>`_ ライブラリは壊れており, 検出問題を引き起こします. "
"GDAL を正常にビルドするためには, CMake を設定して Arrow パッケージを見つけないようにします:"

#: ../../source/development/building_from_source.rst:133
msgid ""
"Similarly, recent versions of Homebrew no longer bundle `Boost "
"<https://www.boost.org/>`_ with libkml, causing a failure to find Boost "
"headers. You should either install Boost manually or disable libkml when "
"building on MacOS:"
msgstr ""
"同様に, 最近の Homebrew のバージョンでは, `Boost <https://www.boost.org/>`_ が libkml "
"とバンドルされなくなり, Boost ヘッダーが見つからないため, MacOS でビルドする際に libkml を無効にするか, Boost "
"を手動でインストールする必要があります:"

#: ../../source/development/building_from_source.rst:141
msgid "CMake general configure options"
msgstr "CMake 一般的な設定オプション"

#: ../../source/development/building_from_source.rst:143
msgid ""
"Options to configure a CMake are provided using ``-D<var>=<value>``. All "
"cached entries can be viewed using ``cmake -LAH`` from a build directory."
msgstr ""
"CMake を設定するためのオプションは ``-D<var>=<value>`` を使用して提供されます. ビルドディレクトリから ``cmake"
" -LAH`` を使用してすべてのキャッシュエントリを表示できます."

#: ../../source/development/building_from_source.rst:148
msgid "Build applications. Default is ON."
msgstr "アプリケーションをビルドします. デフォルトは ON です."

#: ../../source/development/building_from_source.rst:152
msgid ""
"Build GDAL library shared. Default is ON. See also the CMake "
"documentation for `BUILD_SHARED_LIBS "
"<https://cmake.org/cmake/help/v3.10/variable/BUILD_SHARED_LIBS.html>`_."
msgstr ""
"GDAL ライブラリを共有してビルドします. デフォルトは ON です. `BUILD_SHARED_LIBS "
"<https://cmake.org/cmake/help/v3.10/variable/BUILD_SHARED_LIBS.html>`_ の "
"CMake ドキュメントも参照してください."

#: ../../source/development/building_from_source.rst:158
msgid ""
"Choose the type of build, options are: None (default), Debug, Release, "
"RelWithDebInfo, or MinSizeRel. See also the CMake documentation for "
"`CMAKE_BUILD_TYPE "
"<https://cmake.org/cmake/help/v3.10/variable/CMAKE_BUILD_TYPE.html>`_."
msgstr ""
"ビルドの種類を選択します. オプションは: None (デフォルト), Debug, Release, RelWithDebInfo, または "
"MinSizeRel です. `CMAKE_BUILD_TYPE "
"<https://cmake.org/cmake/help/v3.10/variable/CMAKE_BUILD_TYPE.html>`_ の "
"CMake ドキュメントも参照してください."

#: ../../source/development/building_from_source.rst:164
msgid ""
"A default build is not optimized without specifying "
"``-DCMAKE_BUILD_TYPE=Release`` (or similar) during configuration, or by "
"specifying ``--config Release`` with CMake multi-configuration build "
"tools (see example below)."
msgstr ""
"構成時に ``-DCMAKE_BUILD_TYPE=Release`` (または類似のもの) を指定しない場合, "
"デフォルトのビルドは最適化されません. または, CMake マルチ構成ビルドツールで ``--config Release`` "
"を指定することで最適化されます (以下の例を参照)."

#: ../../source/development/building_from_source.rst:171
msgid "C compiler. Ignored for some generators, such as Visual Studio."
msgstr "C コンパイラ. Visual Studio などの一部のジェネレータでは無視されます."

#: ../../source/development/building_from_source.rst:175
msgid ""
"Flags used by the C compiler during all build types. This is initialized "
"by the :envvar:`CFLAGS` environment variable."
msgstr ""
"すべてのビルドタイプで使用される C コンパイラによって使用されるフラグ. これは :envvar:`CFLAGS` "
"環境変数によって初期化されます."

#: ../../source/development/building_from_source.rst:180
msgid "C++ compiler. Ignored for some generators, such as Visual Studio."
msgstr "C++ コンパイラ. Visual Studio などの一部のジェネレータでは無視されます."

#: ../../source/development/building_from_source.rst:184
msgid ""
"Flags used by the C++ compiler during all build types. This is "
"initialized by the :envvar:`CXXFLAGS` environment variable."
msgstr ""
"すべてのビルドタイプで使用される C++ コンパイラによって使用されるフラグ. これは :envvar:`CXXFLAGS` "
"環境変数によって初期化されます."

#: ../../source/development/building_from_source.rst:189
msgid "Where to install the software. Default for Unix-like is ``/usr/local/``."
msgstr "ソフトウェアをインストールする場所. Unix のデフォルトは ``/usr/local/`` です."

#: ../../source/development/building_from_source.rst:194
msgid ""
"List of directories specifying installation prefixes to be searched when "
"external dependencies are looked for."
msgstr "外部依存関係を検索する際に検索されるインストールプレフィックスを指定するディレクトリのリスト."

#: ../../source/development/building_from_source.rst:197
msgid ""
"Starting with CMake 3.12, it is also possible to use a "
"``<Packagename>_ROOT`` variable to define the prefix for a particular "
"package. See "
"https://cmake.org/cmake/help/latest/release/3.12.html?highlight=root#commands"
msgstr ""
"CMake 3.12 以降, 特定のパッケージのプレフィックスを定義するために ``<Packagename>_ROOT`` "
"変数を使用することもできます. 詳細については, "
"https://cmake.org/cmake/help/latest/release/3.12.html?highlight=root#commands"
" を参照してください."

#: ../../source/development/building_from_source.rst:205
msgid ""
"Default is OFF. This can be set to ON to build GDAL using the "
"https://cmake.org/cmake/help/latest/variable/CMAKE_UNITY_BUILD.html "
"feature. This helps speeding GDAL build times. This feature is still "
"considered experimental for now, and could hide subtle bugs (we are not "
"aware of any at writing time though). We don't recommend it for mission "
"critical builds."
msgstr ""
"デフォルトは OFF です. GDAL をビルドするために "
"https://cmake.org/cmake/help/latest/variable/CMAKE_UNITY_BUILD.html "
"機能を使用するために ON に設定できます. これにより GDAL ビルド時間が短縮されます. この機能は現在も実験的なものと見なされており, "
"微妙なバグを隠している可能性があります (ただし, 現時点では私たちはそのようなバグを認識していません). "
"ミッションクリティカルなビルドにはお勧めしません."

#: ../../source/development/building_from_source.rst:214
msgid ""
"Build library using the compiler's `interprocedural optimization "
"<https://en.wikipedia.org/wiki/Interprocedural_optimization>`_ (IPO), if "
"available, default OFF."
msgstr ""
"利用可能な場合, コンパイラの `interprocedural optimization "
"<https://en.wikipedia.org/wiki/Interprocedural_optimization>`_ (IPO) "
"を使用してライブラリをビルドします. デフォルトは OFF です."

#: ../../source/development/building_from_source.rst:220
msgid ""
"Set to ON so that the rpath of installed binaries is written as a "
"relative path to the library. This option overrides the "
"`CMAKE_INSTALL_RPATH "
"<https://cmake.org/cmake/help/latest/variable/CMAKE_INSTALL_RPATH.html>`__"
" variable, and assumes that the `CMAKE_SKIP_INSTALL_RPATH "
"<https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_INSTALL_RPATH.html>`__"
" variable is not set."
msgstr ""
"インストールされたバイナリの rpath がライブラリへの相対パスとして書き込まれるように設定します. このオプションは "
"`CMAKE_INSTALL_RPATH "
"<https://cmake.org/cmake/help/latest/variable/CMAKE_INSTALL_RPATH.html>`__"
" 変数をオーバーライドし, `CMAKE_SKIP_INSTALL_RPATH "
"<https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_INSTALL_RPATH.html>`__"
" 変数が設定されていないことを前提としています."

#: ../../source/development/building_from_source.rst:228
msgid "Resource files embedding"
msgstr ""

#: ../../source/development/building_from_source.rst:230
msgid ""
"Starting with GDAL 3.11, if a C23-compatible compiler is used, such as "
"clang >= 19 or GCC >= 15, it is possible to embed resource files inside "
"the GDAL library, without relying on resource files to be available on "
"the file system (such resource files are located through an hard-coded "
"path at build time in ``${CMAKE_INSTALL_PREFIX}/share/gdal``, or at run-"
"time through the :config:`GDAL_DATA` configuration option)."
msgstr ""

#: ../../source/development/building_from_source.rst:237
msgid "The following CMake options control that behavior:"
msgstr ""

#: ../../source/development/building_from_source.rst:243
msgid ""
"Default is OFF for shared library builds (BUILD_SHARED_LIBS=ON), and ON "
"for static library builds (BUILD_SHARED_LIBS=OFF). When ON, resource "
"files needed by GDAL will be embedded into the GDAL library and/or "
"relevant plugins."
msgstr ""

#: ../../source/development/building_from_source.rst:252
msgid ""
"Even if EMBED_RESOURCE_FILES=ON, GDAL will still try to locate resource "
"files on the file system by default , and fallback to the embedded "
"version if not found. By setting USE_ONLY_EMBEDDED_RESOURCE_FILES=ON, no "
"attempt at locating resource files on the file system is made. Default is"
" OFF."
msgstr ""

#: ../../source/development/building_from_source.rst:258
msgid "CMake package dependent options"
msgstr "CMake パッケージ依存オプション"

#: ../../source/development/building_from_source.rst:262
msgid ""
"Generally speaking, packages (external dependencies) will be "
"automatically found if they are in default locations used by CMake. This "
"can be also tuned for example with the ``CMAKE_PREFIX_PATH`` variable."
msgstr ""
"一般的に, パッケージ (外部依存関係) は, CMake が使用するデフォルトの場所にある場合に自動的に見つかります. これは "
"``CMAKE_PREFIX_PATH`` 変数などで調整することもできます."

#: ../../source/development/building_from_source.rst:266
msgid ""
"Starting with CMake 3.12, it is also possible to use a "
"``<Packagename>_ROOT`` variable to define the prefix for a particular "
"package. See "
"https://cmake.org/cmake/help/latest/release/3.12.html?highlight=root#commands"
" Note that the case of the package name matters for the _ROOT, "
"_INCLUDE_DIR and _LIBRARY variables."
msgstr ""
"CMake 3.12 以降, 特定のパッケージのプレフィックスを定義するために ``<Packagename>_ROOT`` "
"変数を使用することもできます. 詳細については, "
"https://cmake.org/cmake/help/latest/release/3.12.html?highlight=root#commands"
" を参照してください. _ROOT, _INCLUDE_DIR, _LIBRARY "
"変数についてはパッケージ名の大文字と小文字が重要であることに注意してください."

#: ../../source/development/building_from_source.rst:272
msgid ""
"Most dependencies that would be found can also be disabled by setting the"
" following option:"
msgstr "見つかる依存関係のほとんどは, 次のオプションを設定することで無効にすることもできます:"

#: ../../source/development/building_from_source.rst:277
msgid "Control whether a found dependency can be used for the GDAL build."
msgstr "見つかった依存関係を GDAL ビルドに使用できるかどうかを制御します."

#: ../../source/development/building_from_source.rst:279
msgid ""
"It is also possible to ask GDAL to disable the use of any external "
"dependency (besides the required one, PROJ) by default by setting the "
"following option to OFF. Individual libraries shall then be enabled "
"explicitly with GDAL_USE_<Packagename_in_upper_case>:BOOL=ON."
msgstr ""
"次のオプションを OFF に設定することで, GDAL に対して外部依存関係 (必須の PROJ 以外のもの) "
"の使用をデフォルトで無効にすることもできます. 個々のライブラリは, "
"GDAL_USE_<Packagename_in_upper_case>:BOOL=ON で明示的に有効にする必要があります."

#: ../../source/development/building_from_source.rst:286
msgid ""
"Defaults to ON. When set to OFF, all external dependencies (but mandatory"
" ones) will be disabled, unless individually enabled with "
"GDAL_USE_<Packagename_in_upper_case>:BOOL=ON. This option should be set "
"before CMakeCache.txt is created. If it is set to OFF after "
"CMakeCache.txt is created, then cmake should be reinvoked with "
"\"-UGDAL_USE_*\" to cancel the activation of previously detected "
"libraries."
msgstr ""
"デフォルトは ON です. OFF に設定すると, GDAL_USE_<Packagename_in_upper_case>:BOOL=ON "
"で個別に有効にされていない限り, すべての外部依存関係 (ただし必須のもの) が無効になります. このオプションは CMakeCache.txt "
"が作成される前に設定する必要があります. CMakeCache.txt が作成された後に OFF に設定された場合, "
"以前に検出されたライブラリの有効化をキャンセルするために \"-UGDAL_USE_*\" で cmake を再起動する必要があります."

#: ../../source/development/building_from_source.rst:293
msgid ""
"Some of the GDAL dependencies (GEOTIFF, GIF, JPEG, JSONC, LERC, OPENCAD, "
"PNG, QHULL, TIFF, ZLIB) have a copy of their source code inside the GDAL "
"source code tree. It is possible to enable this internal copy by setting "
"the GDAL_USE_<Packagename_in_upper_case>_INTERNAL:BOOL=ON variable. When "
"set, this has precedence over the external library that may be detected. "
"The behavior can also be globally controlled with the following variable:"
msgstr ""
"GDAL の依存関係の一部 (GEOTIFF, GIF, JPEG, JSONC, LERC, OPENCAD, PNG, QHULL, "
"TIFF, ZLIB) には, GDAL ソースコードツリー内にそのソースコードのコピーが含まれています. "
"GDAL_USE_<Packagename_in_upper_case>_INTERNAL:BOOL=ON 変数を設定することで, "
"この内部コピーを有効にすることができます. 設定された場合, これは検出された外部ライブラリよりも優先されます. "
"次の変数でも動作をグローバルに制御できます:"

#: ../../source/development/building_from_source.rst:301
msgid ""
"Control how internal libraries should be used. If set to ON, they will "
"always be used. If set to OFF, they will never be used (unless "
"individually enabled with "
"GDAL_USE_<Packagename_in_upper_case>_INTERNAL:BOOL=ON) If set to "
"WHEN_NO_EXTERNAL (default value), they will be used only if no "
"corresponding external library is found and enabled. This option should "
"be set before CMakeCache.txt is created."
msgstr ""
"内部ライブラリがどのように使用されるかを制御します. ON に設定すると, それらは常に使用されます. OFF に設定すると, "
"それらは使用されません (GDAL_USE_<Packagename_in_upper_case>_INTERNAL:BOOL=ON "
"で個別に有効にされていない限り). WHEN_NO_EXTERNAL (デフォルト値) に設定すると, "
"対応する外部ライブラリが見つからず有効にされていない場合のみ使用されます. このオプションは CMakeCache.txt "
"が作成される前に設定する必要があります."

#: ../../source/development/building_from_source.rst:312
msgid ""
"Using together GDAL_USE_EXTERNAL_LIBS=OFF and GDAL_USE_INTERNAL_LIBS=OFF "
"will result in a CMake configuration failure, because the following "
"libraries (either as external dependencies or using the internal copy) "
"are at least required: ZLIB, TIFF, GEOTIFF and JSONC. Enabling them as "
"external or internal libraries is thus required."
msgstr ""
"GDAL_USE_EXTERNAL_LIBS=OFF と GDAL_USE_INTERNAL_LIBS=OFF を一緒に使用すると, "
"次のライブラリ (外部依存関係としても, 内部コピーとしても) が少なくとも必要であるため, CMake 構成エラーが発生します: ZLIB, "
"TIFF, GEOTIFF, JSONC. したがって, それらを外部または内部ライブラリとして有効にする必要があります."

#: ../../source/development/building_from_source.rst:320
msgid "Archive"
msgstr "アーカイブ"

#: ../../source/development/building_from_source.rst:322
msgid ""
"`libarchive <https://www.libarchive.org/>`_ is a library that supports a "
"variety of archive and compression formats. It might be used since GDAL "
"3.7 to enable the :ref:`/vsi7z/ <vsi7z>` virtual file system."
msgstr ""
"`libarchive <https://www.libarchive.org/>`_ は, "
"様々なアーカイブおよび圧縮形式をサポートするライブラリです. GDAL 3.7 以降, :ref:`/vsi7z/ <vsi7z>` "
"仮想ファイルシステムを有効にするために使用されるかもしれません."

#: ../../source/development/building_from_source.rst:328
msgid "Path to an include directory with the ``archive.h`` header file."
msgstr "``archive.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:332
#: ../../source/development/building_from_source.rst:393
#: ../../source/development/building_from_source.rst:435
#: ../../source/development/building_from_source.rst:589
#: ../../source/development/building_from_source.rst:644
#: ../../source/development/building_from_source.rst:737
#: ../../source/development/building_from_source.rst:760
#: ../../source/development/building_from_source.rst:779
#: ../../source/development/building_from_source.rst:892
#: ../../source/development/building_from_source.rst:1011
#: ../../source/development/building_from_source.rst:1036
#: ../../source/development/building_from_source.rst:1085
#: ../../source/development/building_from_source.rst:1106
#: ../../source/development/building_from_source.rst:1130
#: ../../source/development/building_from_source.rst:1183
#: ../../source/development/building_from_source.rst:1228
#: ../../source/development/building_from_source.rst:1417
#: ../../source/development/building_from_source.rst:1456
#: ../../source/development/building_from_source.rst:1475
#: ../../source/development/building_from_source.rst:1494
#: ../../source/development/building_from_source.rst:1525
#: ../../source/development/building_from_source.rst:1573
#: ../../source/development/building_from_source.rst:1668
#: ../../source/development/building_from_source.rst:1719
#: ../../source/development/building_from_source.rst:1815
#: ../../source/development/building_from_source.rst:1847
#: ../../source/development/building_from_source.rst:1996
#: ../../source/development/building_from_source.rst:2017
#: ../../source/development/building_from_source.rst:2068
msgid "Path to a shared or static library file."
msgstr "共有または静的ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:336
msgid ""
"Control whether to use libarchive. Defaults to ON when libarchive is "
"found."
msgstr "libarchive を使用するかどうかを制御します. libarchive が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:340
msgid "Armadillo"
msgstr "Armadillo"

#: ../../source/development/building_from_source.rst:342
msgid ""
"The `Armadillo <http://arma.sourceforge.net/>`_ C++ library is used to "
"speed up computations related to the Thin Plate Spline transformer. See "
"https://cmake.org/cmake/help/latest/module/FindArmadillo.html for "
"details. On Windows builds using Conda-Forge dependencies, the following "
"packages may also need to be installed: ``blas blas-devel libblas "
"libcblas liblapack liblapacke``"
msgstr ""
"`Armadillo <http://arma.sourceforge.net/>`_ C++ ライブラリは, Thin Plate Spline"
" 変換器に関連する計算を高速化するために使用されます. 詳細については, "
"https://cmake.org/cmake/help/latest/module/FindArmadillo.html を参照してください. "
"Conda-Forge 依存関係を使用した Windows ビルドの場合, 次のパッケージもインストールする必要があるかもしれません: "
"``blas blas-devel libblas libcblas liblapack liblapacke``"

#: ../../source/development/building_from_source.rst:350
msgid "Control whether to use Armadillo. Defaults to ON when Armadillo is found."
msgstr "Armadillo を使用するかどうかを制御します. Armadillo が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:354
msgid "Arrow"
msgstr "Arrow"

#: ../../source/development/building_from_source.rst:356
msgid ""
"The `Apache Arrow C++ <https://github.com/apache/arrow/tree/master/cpp>` "
"library is required for the :ref:`vector.arrow` and :ref:`vector.parquet`"
" drivers. Specify install prefix in the ``CMAKE_PREFIX_PATH`` variable."
msgstr ""
"`Apache Arrow C++ <https://github.com/apache/arrow/tree/master/cpp>`_ "
"ライブラリは, :ref:`vector.arrow` および :ref:`vector.parquet` ドライバに必要です. "
"``CMAKE_PREFIX_PATH`` 変数でインストールプレフィックスを指定します."

#: ../../source/development/building_from_source.rst:362
msgid "Control whether to use Arrow. Defaults to ON when Arrow is found."
msgstr "Arrow を使用するかどうかを制御します. Arrow が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:366
msgid ""
"Control whether to use statically built Arrow libraries. Defaults to OFF "
"when Arrow is found."
msgstr "静的にビルドされた Arrow ライブラリを使用するかどうかを制御します. Arrow が見つかった場合, デフォルトは OFF です."

#: ../../source/development/building_from_source.rst:369
msgid "basisu"
msgstr ""

#: ../../source/development/building_from_source.rst:371
msgid ""
"The `Basis Universal "
"<https://github.com/rouault/basis_universal/tree/cmake>` library is "
"required for the :ref:`raster.basisu` and :ref:`raster.ktx2` drivers. "
"Specify install prefix in the ``CMAKE_PREFIX_PATH`` variable or "
"``basisu_ROOT`` variable."
msgstr ""
"`Basis Universal <https://github.com/rouault/basis_universal/tree/cmake>`"
" ライブラリは, :ref:`raster.basisu` および :ref:`raster.ktx2` ドライバに必要です. "
"インストールプレフィックスを ``CMAKE_PREFIX_PATH`` 変数または ``basisu_ROOT`` 変数で指定します."

#: ../../source/development/building_from_source.rst:377
msgid "Control whether to use basisu. Defaults to ON when basisu is found."
msgstr "basisu を使用するかどうかを制御します. basisu が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:381
msgid "Blosc"
msgstr ""

#: ../../source/development/building_from_source.rst:383
msgid ""
"`Blosc <https://github.com/Blosc/c-blosc>`_ is a library which offers a "
"meta-compression, with different backends (LZ4, Snappy, Zlib, Zstd, "
"etc.). It is used by the :ref:`raster.zarr` driver."
msgstr ""
"`Blosc <https://github.com/Blosc/c-blosc>`_ は, 異なるバックエンド (LZ4, Snappy, "
"Zlib, Zstd など) を持つメタ圧縮を提供するライブラリです. :ref:`raster.zarr` ドライバで使用されます."

#: ../../source/development/building_from_source.rst:389
msgid "Path to an include directory with the ``blosc.h`` header file."
msgstr "``blosc.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:397
msgid "Control whether to use Blosc. Defaults to ON when Blosc is found."
msgstr "Blosc を使用するかどうかを制御します. Blosc が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:401
msgid "BRUNSLI"
msgstr ""

#: ../../source/development/building_from_source.rst:403
msgid ""
"The `Brunsli <https://github.com/google/brunsli>`_ JPEG repacking "
"library, used by the :ref:`raster.marfa` driver."
msgstr ""
"`Brunsli <https://github.com/google/brunsli>`_ JPEG リパッキングライブラリは, "
":ref:`raster.marfa` ドライバで使用されます."

#: ../../source/development/building_from_source.rst:408
msgid ""
"Path to an include directory with the ``brunsli/decode.h`` and "
"``brunsli\\encode.h`` header files."
msgstr ""
"``brunsli/decode.h`` および ``brunsli\\encode.h`` ヘッダーファイルを含む include "
"ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:412
msgid "Path to the brunslienc-c library file."
msgstr "brunslienc-c ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:416
msgid "Path to the brunslidec-c library file."
msgstr "brunslidec-c ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:420
msgid "Control whether to use BRUNSLI. Defaults to ON when Brunsli is found."
msgstr "BRUNSLI を使用するかどうかを制御します. Brunsli が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:424
msgid "CFITSIO"
msgstr ""

#: ../../source/development/building_from_source.rst:426
msgid ""
"The `C FITS I/O <https://heasarc.gsfc.nasa.gov/fitsio/>`_ library is "
"required for the :ref:`raster.fits` driver. It can be detected with pkg-"
"config."
msgstr ""
"`C FITS I/O <https://heasarc.gsfc.nasa.gov/fitsio/>`_ ライブラリは, "
":ref:`raster.fits` ドライバに必要です. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:431
msgid "Path to an include directory with the ``fitsio.h`` header file."
msgstr "``fitsio.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:439
msgid "Control whether to use CFITSIO. Defaults to ON when CFITSIO is found."
msgstr "CFITSIO を使用するかどうかを制御します. CFITSIO が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:443
msgid "Crnlib"
msgstr ""

#: ../../source/development/building_from_source.rst:445
msgid ""
"`Crnlib / crunch <https://github.com/rouault/crunch/tree/build_fixes>`_ "
"is required for the :ref:`raster.dds` driver."
msgstr ""
"`Crnlib / crunch <https://github.com/rouault/crunch/tree/build_fixes>`_ "
"は, :ref:`raster.dds` ドライバに必要です."

#: ../../source/development/building_from_source.rst:450
msgid "Path to Crnlib include directory with ``crunch/crnlib.h`` header."
msgstr "``crunch/crnlib.h`` ヘッダーを含む Crnlib include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:454
msgid "Path to Crnlib library to be linked."
msgstr "リンクする Crnlib ライブラリへのパス."

#: ../../source/development/building_from_source.rst:458
msgid "Control whether to use Crnlib. Defaults to ON when Crnlib is found."
msgstr "Crnlib を使用するかどうかを制御します. Crnlib が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:462
msgid "CURL"
msgstr ""

#: ../../source/development/building_from_source.rst:464
msgid ""
"`libcurl <https://curl.se/>`_ is required for all network accesses (HTTP,"
" etc.)."
msgstr "`libcurl <https://curl.se/>`_ はすべてのネットワークアクセス (HTTP など) に必要です."

#: ../../source/development/building_from_source.rst:468
msgid "Path to an include directory with the ``curl`` directory."
msgstr "``curl`` ディレクトリを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:472
msgid ""
"Path to a shared or static library file, such as ``libcurl.so``, "
"``libcurl.lib``, or other name."
msgstr "``libcurl.so``, ``libcurl.lib`` などの共有または静的ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:479
msgid "Must be set to ON when linking against a static build of Curl."
msgstr "Curl の静的ビルドにリンクする場合は, 必ず ON に設定する必要があります."

#: ../../source/development/building_from_source.rst:483
msgid "Control whether to use Curl. Defaults to ON when Curl is found."
msgstr "Curl を使用するかどうかを制御します. Curl が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:487
msgid "CryptoPP"
msgstr ""

#: ../../source/development/building_from_source.rst:489
msgid ""
"The `Crypto++ <https://github.com/weidai11/cryptopp>`_ library can be "
"used for the RSA SHA256 signing functionality used by some authentication"
" methods of Google Cloud. It might be required to use the "
":ref:`raster.eedai` images or use the :ref:`/vsigs/ <vsigs>` virtual file"
" system. It is also required for the :ref:`/vsicrypt/ <vsicrypt>` virtual"
" file system."
msgstr ""
"`Crypto++ <https://github.com/weidai11/cryptopp>`_ ライブラリは, Google Cloud "
"の一部の認証方法で使用される RSA SHA256 署名機能に使用できます. :ref:`raster.eedai` 画像を使用するか, "
":ref:`/vsigs/ <vsigs>` 仮想ファイルシステムを使用する場合に必要かもしれません. :ref:`/vsicrypt/ "
"<vsicrypt>` 仮想ファイルシステムにも必要です."

#: ../../source/development/building_from_source.rst:497
#: ../../source/development/building_from_source.rst:1144
#: ../../source/development/building_from_source.rst:1224
#: ../../source/development/building_from_source.rst:1884
#: ../../source/development/building_from_source.rst:2013
msgid "Path to the base include directory."
msgstr "ベース include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:501
msgid ""
"Path to a shared or static library file.  A similar variable "
"``CRYPTOPP_LIBRARY_DEBUG`` can also be specified to a similar library for"
" building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, ``CRYPTOPP_LIBRARY_DEBUG``"
" という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:507
msgid ""
"Defaults to OFF. Might be required to set to ON when linking against "
"cryptopp.dll"
msgstr "デフォルトは OFF です. cryptopp.dll にリンクする場合は, 必ず ON に設定する必要があるかもしれません."

#: ../../source/development/building_from_source.rst:512
msgid "Control whether to use CryptoPP. Defaults to ON when CryptoPP is found."
msgstr "CryptoPP を使用するかどうかを制御します. CryptoPP が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:516
msgid "Deflate"
msgstr ""

#: ../../source/development/building_from_source.rst:518
msgid ""
"`libdeflate <https://github.com/ebiggers/libdeflate>`_ is a compression "
"library which offers the lossless Deflate/Zip compression algorithm. It "
"offers faster performance than ZLib, but is not a full replacement for "
"it, consequently it must be used as a complement to ZLib."
msgstr ""
"`libdeflate <https://github.com/ebiggers/libdeflate>`_ は, 損失のない "
"Deflate/Zip 圧縮アルゴリズムを提供する圧縮ライブラリです. ZLib よりも高速なパフォーマンスを提供しますが, ZLib "
"の完全な置換ではないため, ZLib の補完として使用する必要があります."

#: ../../source/development/building_from_source.rst:526
msgid "Path to an include directory with the ``libdeflate.h`` header file."
msgstr "``libdeflate.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:530
msgid ""
"Path to a shared or static library file. A similar variable "
"``Deflate_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, ``Deflate_LIBRARY_DEBUG`` "
"という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:536
msgid "Control whether to use Deflate. Defaults to ON when Deflate is found."
msgstr "Deflate を使用するかどうかを制御します. Deflate が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:540
msgid "ECW"
msgstr ""

#: ../../source/development/building_from_source.rst:542
msgid ""
"The Hexagon ECW SDK (closed source/proprietary) is required for the "
":ref:`raster.ecw` driver. Currently only support for ECW SDK 3.3 and 5.5 "
"is offered."
msgstr ""
"Hexagon ECW SDK (クローズドソース/プロプライエタリ) は, :ref:`raster.ecw` ドライバに必要です. 現在, "
"ECW SDK 3.3 および 5.5 に対するサポートのみが提供されています."

#: ../../source/development/building_from_source.rst:545
msgid ""
"For ECW SDK 5.5, ECW_ROOT or CMAKE_PREFIX_PATH should point to the "
"directory into which there are include and lib subdirectories, typically "
"ending with ERDAS-ECW_JPEG_2000_SDK-5.5.0/Desktop_Read-Only."
msgstr ""
"ECW SDK 5.5 の場合, ECW_ROOT または CMAKE_PREFIX_PATH は, 通常 ERDAS-"
"ECW_JPEG_2000_SDK-5.5.0/Desktop_Read-Only で終わる include および lib "
"サブディレクトリが含まれるディレクトリを指す必要があります."

#: ../../source/development/building_from_source.rst:551
msgid "Path to the include directory with the ``NCSECWClient.h`` header file."
msgstr "``NCSECWClient.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:555
msgid "Path to library file libNCSEcw"
msgstr "libNCSEcw ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:559
msgid "Path to library file libNCSCnet (only needed for SDK 3.3)"
msgstr "libNCSCnet ライブラリファイルへのパス (SDK 3.3 のみ必要)."

#: ../../source/development/building_from_source.rst:563
msgid "Path to library file libNCSEcwC (only needed for SDK 3.3)"
msgstr "libNCSEcwC ライブラリファイルへのパス (SDK 3.3 のみ必要)."

#: ../../source/development/building_from_source.rst:567
msgid "Path to library file libNCSUtil (only needed for SDK 3.3)"
msgstr "libNCSUtil ライブラリファイルへのパス (SDK 3.3 のみ必要)."

#: ../../source/development/building_from_source.rst:571
msgid "Control whether to use ECW. Defaults to ON when ECW is found."
msgstr "ECW を使用するかどうかを制御します. ECW が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:575
msgid "EXPAT"
msgstr ""

#: ../../source/development/building_from_source.rst:577
msgid ""
"`Expat <https://github.com/libexpat/libexpat>`_ is a stream-oriented XML "
"parser library which is required to enable XML parsing capabilities in an"
" important number of OGR drivers (GML, GeoRSS, GPX, KML, LVBAG, OSM, ODS,"
" SVG, WFS, XSLX, etc.). It is strongly recommended. Other driver such as "
"ILI or GMLAS may also require the XercesC library."
msgstr ""
"`Expat <https:///github.com/libexpat/libexpat>`_ は, 多くの OGR ドライバ (GML, "
"GeoRSS, GPX, KML, LVBAG, OSM, ODS, SVG, WFS, XSLX など) で XML "
"パース機能を有効にするために必要なストリーム指向の XML パーサライブラリです. このライブラリは強く推奨されます. ILI や GMLAS "
"などの他のドライバは, XercesC ライブラリも必要とするかもしれません."

#: ../../source/development/building_from_source.rst:585
msgid "Path to the include directory with the ``expat.h`` header file."
msgstr "``expat.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:595
msgid "Must be set to ON when linking against a static build of Expat."
msgstr "Expat の静的ビルドにリンクする場合は, 必ず ON に設定する必要があります."

#: ../../source/development/building_from_source.rst:599
msgid "Control whether to use EXPAT. Defaults to ON when EXPAT is found."
msgstr "EXPAT を使用するかどうかを制御します. EXPAT が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:603
msgid "FileGDB"
msgstr ""

#: ../../source/development/building_from_source.rst:605
msgid ""
"The `FileGDB SDK <https://github.com/Esri/file-geodatabase-api>`_ (closed"
" source/proprietary) is required for the :ref:`vector.filegdb` driver "
"(not to be confused with the :ref:`vector.openfilegdb` driver that has no"
" external requirements)"
msgstr ""
"`FileGDB SDK <https://github.com/Esri/file-geodatabase-api>`_ "
"(クローズドソース/プロプライエタリ) は, :ref:`vector.filegdb` ドライバに必要です "
"(:ref:`vector.openfilegdb` ドライバとは異なり, 外部要件はありません)."

#: ../../source/development/building_from_source.rst:609
msgid ""
"FileGDB_ROOT or CMAKE_PREFIX_PATH should point to the directory of the "
"SDK."
msgstr "FileGDB_ROOT または CMAKE_PREFIX_PATH は, SDK のディレクトリを指す必要があります."

#: ../../source/development/building_from_source.rst:613
msgid "Path to the include directory with the ``FileGDBAPI.h`` header file."
msgstr "``FileGDBAPI.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:617
msgid "Path to library file"
msgstr "ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:621
msgid "Path to Release library file (only used on Windows)"
msgstr "リリースライブラリファイルへのパス (Windows のみ使用)."

#: ../../source/development/building_from_source.rst:625
msgid "Path to Debug library file (only used on Windows)"
msgstr "デバッグライブラリファイルへのパス (Windows のみ使用)."

#: ../../source/development/building_from_source.rst:629
msgid "Control whether to use FileGDB. Defaults to ON when FileGDB is found."
msgstr "FileGDB を使用するかどうかを制御します. FileGDB が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:633
msgid "FreeXL"
msgstr ""

#: ../../source/development/building_from_source.rst:635
msgid ""
"The `FreeXL <https://www.gaia-gis.it/fossil/freexl/index>`_ library is "
"required for the :ref:`vector.xls` driver."
msgstr ""
"`FreeXL <https://www.gaia-gis.it/fossil/freexl/index>`_ ライブラリは, "
":ref:`vector.xls` ドライバに必要です."

#: ../../source/development/building_from_source.rst:640
msgid "Path to an include directory with the ``freexl.h`` header file."
msgstr "``freexl.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:648
msgid "Control whether to use FreeXL. Defaults to ON when FreeXL is found."
msgstr "FreeXL を使用するかどうかを制御します. FreeXL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:652
msgid "FYBA"
msgstr ""

#: ../../source/development/building_from_source.rst:654
msgid ""
"The `OpenFyba <https://github.com/kartverket/fyba>`_ libraries are needed"
" to build the :ref:`vector.sosi` driver."
msgstr ""
"`OpenFyba <https://github.com/kartverket/fyba>`_ ライブラリは, "
":ref:`vector.sosi` ドライバをビルドするために必要です."

#: ../../source/development/building_from_source.rst:658
msgid "Path to an include directory with the ``fyba.h`` header file."
msgstr "``fyba.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:662
msgid "Path to a library file ``fyba``"
msgstr "ライブラリファイル ``fyba`` へのパス."

#: ../../source/development/building_from_source.rst:666
msgid "Path to a library file ``fygm``"
msgstr "ライブラリファイル ``fygm`` へのパス."

#: ../../source/development/building_from_source.rst:670
msgid "Path to a library file ``fyut``"
msgstr "ライブラリファイル ``fyut`` へのパス."

#: ../../source/development/building_from_source.rst:674
msgid "Control whether to use FYBA. Defaults to ON when FYBA is found."
msgstr "FYBA を使用するかどうかを制御します. FYBA が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:678
msgid "GEOTIFF"
msgstr ""

#: ../../source/development/building_from_source.rst:680
msgid ""
"It is required for the :ref:`raster.gtiff` drivers, and a few other "
"drivers. If not found, an internal copy of libgeotiff can be used."
msgstr ""
":ref:`raster.gtiff` ドライバおよび他のいくつかのドライバに必要です. 見つからない場合, libgeotiff "
"の内部コピーを使用できます."

#: ../../source/development/building_from_source.rst:685
msgid "Path to an include directory with the libgeotiff header files."
msgstr "libgeotiff ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:689
msgid ""
"Path to a shared or static library file, such as ``libgeotiff.so``, "
"``geotiff.lib``, or other name. A similar variable "
"``GEOTIFF_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"``libgeotiff.so``, ``geotiff.lib`` などの共有または静的ライブラリファイルへのパス. "
"デバッグリリース用の類似のライブラリに対しても, ``GEOTIFF_LIBRARY_DEBUG`` という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:696
msgid ""
"Control whether to use external libgeotiff. Defaults to ON when external "
"libgeotiff is found."
msgstr "外部 libgeotiff を使用するかどうかを制御します. 外部 libgeotiff が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:700
msgid ""
"Control whether to use internal libgeotiff copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_GEOTIFF=ON"
msgstr ""
"内部 libgeotiff コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. "
"ON に設定されている場合, GDAL_USE_GEOTIFF=ON より優先されます."

#: ../../source/development/building_from_source.rst:705
msgid "GEOS"
msgstr ""

#: ../../source/development/building_from_source.rst:707
msgid ""
"`GEOS <https://github.com/libgeos/geos>`_ is a C++ library for performing"
" operations on two-dimensional vector geometries. It is used as the "
"backend for most geometry processing operations available in OGR "
"(intersection, buffer, etc.). The ``geos-config`` program can be used to "
"detect it."
msgstr ""
"`GEOS <https://github.com/libgeos/geos>`_ は, 2次元ベクトルジオメトリ上での操作を実行するための "
"C++ ライブラリです. OGR で利用可能なほとんどのジオメトリ処理操作のバックエンドとして使用されます (交差, バッファなど). "
"``geos-config`` プログラムを使用して検出できます."

#: ../../source/development/building_from_source.rst:714
msgid "Path to an include directory with the ``geos_c.h`` header file."
msgstr "``geos_c.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:718
msgid "Path to a shared or static library file (libgeos_c)."
msgstr "共有または静的ライブラリファイル (libgeos_c) へのパス."

#: ../../source/development/building_from_source.rst:722
msgid "Control whether to use GEOS. Defaults to ON when GEOS is found."
msgstr "GEOS を使用するかどうかを制御します. GEOS が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:726
msgid "GIF"
msgstr ""

#: ../../source/development/building_from_source.rst:728
msgid ""
"`giflib <http://giflib.sourceforge.net/>`_ is required for the "
":ref:`raster.gif` driver. If not found, an internal copy can be used."
msgstr ""
"`giflib <http://giflib.sourceforge.net/>`_ は, :ref:`raster.gif` "
"ドライバに必要です. 見つからない場合, 内部コピーを使用できます."

#: ../../source/development/building_from_source.rst:733
msgid "Path to an include directory with the ``gif_lib.h`` header file."
msgstr "``gif_lib.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:741
msgid ""
"Control whether to use external giflib. Defaults to ON when external "
"giflib is found."
msgstr "外部 giflib を使用するかどうかを制御します. 外部 giflib が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:745
msgid ""
"Control whether to use internal giflib copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_GIF=ON"
msgstr ""
"内部 giflib コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_GIF=ON より優先されます."

#: ../../source/development/building_from_source.rst:750
msgid "GTA"
msgstr ""

#: ../../source/development/building_from_source.rst:752
msgid ""
"The `GTA <https://marlam.de/gta/>`_ library is required for the "
":ref:`raster.gta` driver."
msgstr "`GTA <https://marlam.de/gta/>`_ ライブラリは, :ref:`raster.gta` ドライバに必要です."

#: ../../source/development/building_from_source.rst:756
msgid "Path to an include directory with the ``gta/gta.h`` header file."
msgstr "``gta/gta.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:764
msgid "Control whether to use GTA. Defaults to ON when GTA is found."
msgstr "GTA を使用するかどうかを制御します. GTA が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:768
msgid "HEIF"
msgstr ""

#: ../../source/development/building_from_source.rst:770
msgid ""
"The `HEIF <https://github.com/strukturag/libheif>`_ (>= 1.1) library used"
" by the :ref:`raster.heif` driver. It can be detected with pkg-config."
msgstr ""
"`HEIF <https://github.com/strukturag/libheif>`_ (>= 1.1) ライブラリは, "
":ref:`raster.heif` ドライバで使用されます. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:775
msgid "Path to an include directory with the ``libheif/heif.h`` header file."
msgstr "``libheif/heif.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:783
msgid "Control whether to use HEIF. Defaults to ON when HEIF is found."
msgstr "HEIF を使用するかどうかを制御します. HEIF が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:786
msgid "HDF4"
msgstr ""

#: ../../source/development/building_from_source.rst:788
msgid ""
"The `HDF4 <https://support.hdfgroup.org/products/hdf4/>`_ C library is "
"needed for the :ref:`raster.hdf4` driver."
msgstr ""
"`HDF4 <https://support.hdfgroup.org/products/hdf4/>`_ C ライブラリは, "
":ref:`raster.hdf4` ドライバに必要です."

#: ../../source/development/building_from_source.rst:793
msgid "Path to an include directory with the ``hdf.h`` header file."
msgstr "``hdf.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:797
msgid ""
"Path to a shared or static ``dfalt`` or ``df`` library file. A similar "
"variable ``HDF4_df_LIBRARY_DEBUG`` can also be specified to a similar "
"library for building Debug releases."
msgstr ""
"共有または静的 ``dfalt`` または ``df`` ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, "
"``HDF4_df_LIBRARY_DEBUG`` という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:803
msgid ""
"Path to a shared or static ``mfhdfalt`` or ``mfhdf`` library file. A "
"similar variable ``HDF4_mfhdf_LIBRARY_DEBUG`` can also be specified to a "
"similar library for building Debug releases."
msgstr ""
"共有または静的 ``mfhdfalt`` または ``mfhdf`` ライブラリファイルへのパス. "
"デバッグリリース用の類似のライブラリに対しても, ``HDF4_mfhdf_LIBRARY_DEBUG`` という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:809
msgid ""
"Path to a shared or static ``xdr`` library file. A similar variable "
"``HDF4_xdr_LIBRARY_DEBUG`` can also be specified to a similar library for"
" building Debug releases. It is generally not needed for Linux builds"
msgstr ""
"共有または静的 ``xdr`` ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, "
"``HDF4_xdr_LIBRARY_DEBUG`` という類似の変数を指定できます. 通常, Linux ビルドには必要ありません."

#: ../../source/development/building_from_source.rst:816
msgid ""
"Path to a shared or static ``szip`` library file. A similar variable "
"``HDF4_szip_LIBRARY_DEBUG`` can also be specified to a similar library "
"for building Debug releases. It is generally not needed for Linux builds"
msgstr ""
"共有または静的 ``szip`` ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, "
"``HDF4_szip_LIBRARY_DEBUG`` という類似の変数を指定できます. 通常, Linux ビルドには必要ありません."

#: ../../source/development/building_from_source.rst:823
msgid ""
"The value of this option is a list which defaults to "
"``df;mfhdf;xdr;szip``. It may be customized if the linking of HDF4 "
"require different libraries, in which case "
"HDF4_{comp_name}_LIBRARY_[RELEASE/DEBUG] variables will be available to "
"configure the library file."
msgstr ""
"このオプションの値はデフォルトで ``df;mfhdf;xdr;szip`` となるリストです. HDF4 "
"のリンクに異なるライブラリが必要な場合は, HDF4_{comp_name}_LIBRARY_[RELEASE/DEBUG] "
"変数が利用可能になり, ライブラリファイルを設定できます."

#: ../../source/development/building_from_source.rst:830
msgid "Control whether to use HDF4. Defaults to ON when HDF4 is found."
msgstr "HDF4 を使用するかどうかを制御します. HDF4 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:834
msgid "HDF5"
msgstr ""

#: ../../source/development/building_from_source.rst:836
msgid ""
"The `HDF5 <https://github.com/HDFGroup/hdf5>`_ C library is needed for "
"the :ref:`raster.hdf5` and :ref:`raster.bag` drivers. The HDF5 CXX "
"library is needed for the :ref:`raster.kea` driver. The "
"https://cmake.org/cmake/help/latest/module/FindHDF5.html module is used "
"to detect the HDF5 library."
msgstr ""
"`HDF5 <https://github.com/HDFGroup/hdf5>`_ C ライブラリは, :ref:`raster.hdf5` "
"および :ref:`raster.bag` ドライバに必要です. HDF5 CXX ライブラリは, :ref:`raster.kea` "
"ドライバに必要です. HDF5 ライブラリを検出するために, "
"https://cmake.org/cmake/help/latest/module/FindHDF5.html モジュールが使用されます."

#: ../../source/development/building_from_source.rst:844
msgid "Control whether to use HDF5. Defaults to ON when HDF5 is found."
msgstr "HDF5 を使用するかどうかを制御します. HDF5 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:848
msgid ""
"Control whether to add a global lock around calls to HDF5 library. This "
"is needed if the HDF5 library is not built with thread-safety enabled and"
" if the HDF5 driver is used in a multi-threaded way. On Unix, a "
"heuristics try to detect if the HDF5 library has been built with thread-"
"safety enabled when linking against a HDF5 library. In other situations, "
"the setting must be manually set when needed."
msgstr ""
"HDF5 ライブラリの呼び出しを囲むグローバルロックを追加するかどうかを制御します. HDF5 "
"ライブラリがスレッドセーフが有効になっていない状態でビルドされており, HDF5 ドライバがマルチスレッドで使用されている場合に必要です. "
"Unix では, HDF5 ライブラリにリンクする際にスレッドセーフが有効になっているかどうかを検出するヒューリスティックがあります. "
"その他の状況では, 必要に応じて手動で設定する必要があります."

#: ../../source/development/building_from_source.rst:859
msgid "HDFS"
msgstr ""

#: ../../source/development/building_from_source.rst:861
msgid ""
"The `Hadoop File System <https://hadoop.apache.org/docs/stable/hadoop-"
"project-dist/hadoop-hdfs/LibHdfs.html>`_ native library is needed for the"
" :ref:`/vsihdfs/ <vsihdfs>` virtual file system."
msgstr ""
"`Hadoop File System <https://hadoop.apache.org/docs/stable/hadoop-"
"project-dist/hadoop-hdfs/LibHdfs.html>`_ ネイティブライブラリは, :ref:`/vsihdfs/ "
"<vsihdfs>` 仮想ファイルシステムに必要です."

#: ../../source/development/building_from_source.rst:866
msgid "Path to an include directory with the ``hdfs.h`` header file."
msgstr "``hdfs.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:870
msgid "Path to a shared or static ``hdfs`` library file."
msgstr "共有または静的 ``hdfs`` ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:874
msgid "Control whether to use HDFS. Defaults to ON when HDFS is found."
msgstr "HDFS を使用するかどうかを制御します. HDFS が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:878
msgid "Iconv"
msgstr ""

#: ../../source/development/building_from_source.rst:880
msgid ""
"The `Iconv <https://www.gnu.org/software/libiconv/>`_ library is used to "
"convert text from one encoding to another encoding. It is generally "
"available as a system library for Unix-like systems. On Windows, GDAL can"
" leverage the API of the operating system for a few base conversions, but"
" using Iconv will provide additional capabilities."
msgstr ""
"`Iconv <https://www.gnu.org/software/libiconv/>`_ ライブラリは, "
"テキストを一つのエンコーディングから別のエンコーディングに変換するために使用されます. 一般的に, Unix "
"ライクなシステムではシステムライブラリとして利用可能です. Windows では, GDAL "
"はいくつかの基本的な変換に対してオペレーティングシステムの API を利用できますが, Iconv を使用すると追加の機能が提供されます."

#: ../../source/development/building_from_source.rst:888
msgid "Path to an include directory with the ``iconv.h`` header file."
msgstr "``iconv.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:896
msgid "Control whether to use Iconv. Defaults to ON when Iconv is found."
msgstr "Iconv を使用するかどうかを制御します. Iconv が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:900
msgid "IDB"
msgstr ""

#: ../../source/development/building_from_source.rst:902
msgid ""
"The Informix DataBase Client SDK (closed source/proprietary)  is needed "
"to build the :ref:`vector.idb` driver. IDB_ROOT or CMAKE_PREFIX_PATH "
"should point to the directory of the SDK."
msgstr ""
"Informix DataBase Client SDK (クローズドソース/プロプライエタリ) は, :ref:`vector.idb` "
"ドライバをビルドするために必要です. IDB_ROOT または CMAKE_PREFIX_PATH は, SDK "
"のディレクトリを指す必要があります."

#: ../../source/development/building_from_source.rst:909
msgid ""
"Path to an include directory (typically ending with ``incl``) with the "
"``c++/it.h`` header file."
msgstr "``c++/it.h`` ヘッダーファイルを含む include ディレクトリ (通常は ``incl`` で終わる) へのパス."

#: ../../source/development/building_from_source.rst:913
msgid ""
"Path to a library file ``ifc++`` (typically in the ``lib/c++`` sub "
"directory)"
msgstr "ライブラリファイル ``ifc++`` (通常は ``lib/c++`` サブディレクトリにある) へのパス."

#: ../../source/development/building_from_source.rst:917
msgid ""
"Path to a library file ``ifdmi`` (typically in the ``lib/dmi`` sub "
"directory)"
msgstr "ライブラリファイル ``ifdmi`` (通常は ``lib/dmi`` サブディレクトリにある) へのパス."

#: ../../source/development/building_from_source.rst:921
msgid ""
"Path to a library file ``ifsql`` (typically in the ``lib/esql`` sub "
"directory)"
msgstr "ライブラリファイル ``ifsql`` (通常は ``lib/esql`` サブディレクトリにある) へのパス."

#: ../../source/development/building_from_source.rst:925
msgid ""
"Path to a library file ``ifcli`` (typically in the ``lib/cli`` sub "
"directory)"
msgstr "ライブラリファイル ``ifcli`` (通常は ``lib/cli`` サブディレクトリにある) へのパス."

#: ../../source/development/building_from_source.rst:929
msgid "Control whether to use IDB. Defaults to ON when IDB is found."
msgstr "IDB を使用するかどうかを制御します. IDB が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:933
msgid "JPEG"
msgstr ""

#: ../../source/development/building_from_source.rst:935
msgid ""
"libjpeg is required for the :ref:`raster.jpeg` driver, and may be used by"
" a few other drivers (:ref:`raster.gpkg`, :ref:`raster.marfa`, internal "
"libtiff, etc.) If not found, an internal copy of libjpeg (6b) can be "
"used. Using `libjpeg-turbo <https://github.com/libjpeg-turbo/libjpeg-"
"turbo>`_ is highly recommended to get best performance. See "
"https://cmake.org/cmake/help/latest/module/FindJPEG.html for more details"
" on how the library is detected."
msgstr ""
"libjpeg は, :ref:`raster.jpeg` ドライバに必要であり, 他のいくつかのドライバ "
"(:ref:`raster.gpkg`, :ref:`raster.marfa`, 内部 libtiff など) で使用される場合があります. "
"見つからない場合, 内部コピーの libjpeg (6b) を使用できます. 最高のパフォーマンスを得るために, `libjpeg-turbo "
"<https://github.com/libjpeg-turbo/libjpeg-turbo>`_ の使用を強くお勧めします. "
"ライブラリの検出方法についての詳細は, "
"https://cmake.org/cmake/help/latest/module/FindJPEG.html を参照してください."

#: ../../source/development/building_from_source.rst:945
msgid ""
"When using libjpeg-turbo, JPEG_LIBRARY[_RELEASE/_DEBUG] should point to a"
" library with libjpeg ABI, not TurboJPEG. See https://libjpeg-"
"turbo.org/About/TurboJPEG for the difference."
msgstr ""
"libjpeg-turbo を使用する場合, JPEG_LIBRARY[_RELEASE/_DEBUG] は, TurboJPEG ではなく "
"libjpeg ABI を持つライブラリを指す必要があります. 違いについては, https://libjpeg-"
"turbo.org/About/TurboJPEG を参照してください."

#: ../../source/development/building_from_source.rst:951
msgid "Path to an include directory with the ``jpeglib.h`` header file."
msgstr "``jpeglib.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:955
msgid ""
"Path to a shared or static library file. A similar variable "
"``JPEG_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, ``JPEG_LIBRARY_DEBUG`` "
"という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:961
msgid ""
"Control whether to use external libjpeg. Defaults to ON when external "
"libjpeg is found."
msgstr "外部 libjpeg を使用するかどうかを制御します. 外部 libjpeg が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:965
msgid ""
"Control whether to use internal libjpeg copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_JPEG=ON"
msgstr ""
"内部 libjpeg コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_JPEG=ON より優先されます."

#: ../../source/development/building_from_source.rst:970
msgid ""
"Used with external libjpeg. number is for example 80, for libjpeg 8 ABI. "
"This can be used to check a build time that the expected JPEG library is "
"the one that is included by GDAL."
msgstr ""
"外部 libjpeg と共に使用されます. たとえば, libjpeg 8 ABI の場合は 80 です. これは, ビルド時に期待される "
"JPEG ライブラリが GDAL によって含まれているかどうかをチェックするために使用できます."

#: ../../source/development/building_from_source.rst:976
msgid "JPEG12"
msgstr ""

#: ../../source/development/building_from_source.rst:978
msgid ""
"libjpeg-12 bit can be used by the :ref:`raster.jpeg`, :ref:`raster.gtiff`"
" (when using internal libtiff), :ref:`raster.jpeg`, :ref:`raster.marfa` "
"and :ref:`raster.nitf` drivers to handle JPEG images with a 12 bit depth."
" It is only supported with the internal libjpeg (6b). This can be used "
"independently of if for regular 8 bit JPEG an external or internal "
"libjpeg is used."
msgstr ""
"libjpeg-12 ビットは, 12ビットの深度を持つ JPEG 画像を処理するために, :ref:`raster.jpeg`, "
":ref:`raster.gtiff` (内部 libtiff を使用する場合), :ref:`raster.jpeg` , "
":ref:`raster.marfa` , :ref:`raster.nitf` ドライバで使用できます. これは, 内部 libjpeg "
"(6b) でのみサポートされています. 通常の 8ビット JPEG に外部または内部 libjpeg を使用するかどうかに関係なく使用できます."

#: ../../source/development/building_from_source.rst:986
msgid "Control whether to use internal libjpeg-12 copy. Defaults to ON."
msgstr "内部 libjpeg-12 コピーを使用するかどうかを制御します. デフォルトは ON です."

#: ../../source/development/building_from_source.rst:990
msgid ""
"Starting with GDAL 3.7, if using libjpeg-turbo >= 2.2, which adds native "
"support for dual 8/12-bit, using internal libjpeg-12 is no longer needed "
"to get 12-bit JPEG support in the JPEG, MRF, NITF or GeoTIFF (when built "
"with internal libtiff) drivers. If using external libtiff, libtiff >= 4.5"
" built against libjpeg-turbo >= 2.2 is needed to get 12-bit JPEG support "
"in the GeoTIFF support."
msgstr ""
"GDAL 3.7 以降, libjpeg-turbo >= 2.2 を使用している場合, ネイティブでデュアル "
"8/12ビットをサポートするために, JPEG, MRF, NITF または GeoTIFF (内部 libtiff でビルドされた場合) "
"ドライバで 12ビットJPEG サポートを得るために, 内部 libjpeg-12 を使用する必要はありません. 外部 libtiff "
"を使用している場合, GeoTIFF サポートで 12ビット JPEG サポートを得るには, libjpeg-turbo >= 2.2 "
"でビルドされた libtiff >= 4.5 が必要です."

#: ../../source/development/building_from_source.rst:998
msgid "JSON-C"
msgstr ""

#: ../../source/development/building_from_source.rst:1000
msgid ""
"The `json-c <https://github.com/json-c/json-c>`_ library is required to "
"read and write JSON content. It can be detected with pkg-config. If not "
"found, an internal copy of json-c can be used."
msgstr ""
"`json-c <https://github.com/json-c/json-c>`_ ライブラリは, JSON "
"コンテンツの読み書きに必要です. pkg-config で検出できます. 見つからない場合, json-c の内部コピーを使用できます."

#: ../../source/development/building_from_source.rst:1007
msgid "Path to an include directory with the ``json.h`` header file."
msgstr "``json.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1015
msgid "Control whether to use JSON-C. Defaults to ON when JSON-C is found."
msgstr "JSON-C を使用するかどうかを制御します. JSON-C が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1019
msgid ""
"Control whether to use internal JSON-C copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_JSONC=ON"
msgstr ""
"内部 JSON-C コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_JSONC=ON より優先されます."

#: ../../source/development/building_from_source.rst:1024
msgid "JXL"
msgstr ""

#: ../../source/development/building_from_source.rst:1026
msgid ""
"The `libjxl <https://github.com/libjxl/libjxl>` library used by the "
":ref:`raster.gtiff` driver, when built against internal libtiff. It can "
"be detected with pkg-config."
msgstr ""
"`libjxl <https://github.com/libjxl/libjxl>` ライブラリは, 内部 libtiff に対してビルドされた"
" :ref:`raster.gtiff` ドライバで使用されます. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:1032
msgid "Path to an include directory with the ``jxl/decode.h`` header file."
msgstr "``jxl/decode.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1040
msgid "Control whether to use JXL. Defaults to ON when JXL is found."
msgstr "JXL を使用するかどうかを制御します. JXL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1044
msgid "KDU"
msgstr ""

#: ../../source/development/building_from_source.rst:1046
msgid ""
"The Kakadu library (proprietary) is required for the :ref:`raster.jp2kak`"
" and :ref:`raster.jpipkak` drivers. There is no standardized installation"
" layout, nor fixed library file names, so finding Kakadu artifacts is a "
"bit challenging. Currently automatic finding of it from the KDU_ROOT "
"variable is only implemented for Linux, Mac and Windows x86_64 builds. "
"For other platforms, users need to manually specify the KDU_LIBRARY and "
"KDU_AUX_LIBRARY variable."
msgstr ""
"Kakadu ライブラリ (プロプライエタリ) は, :ref:`raster.jp2kak` および :ref:`raster.jpipkak`"
" ドライバに必要です. 標準化されたインストールレイアウトや固定されたライブラリファイル名はないため, Kakadu "
"アーティファクトを見つけるのは少し難しいです. 現在, KDU_ROOT 変数からの自動検出は Linux, Mac および Windows "
"x86_64 ビルドにのみ実装されています. 他のプラットフォームでは, ユーザーは KDU_LIBRARY および "
"KDU_AUX_LIBRARY 変数を手動で指定する必要があります."

#: ../../source/development/building_from_source.rst:1056
msgid ""
"Path to the root of the Kakadu build tree, from which the "
"``coresys/common/kdu_elementary.h`` header file should be found."
msgstr ""
"Kakadu ビルドツリーのルートへのパスで, ``coresys/common/kdu_elementary.h`` "
"ヘッダーファイルが見つかるべきです."

#: ../../source/development/building_from_source.rst:1061
msgid ""
"Path to a shared library file whose name is like libkdu_vXYR.so on Unix "
"or kdu_vXYR.lib on Windows, where X.Y is the Kakadu version."
msgstr ""
"Unix では libkdu_vXYR.so または Windows では kdu_vXYR.lib "
"のような名前の共有ライブラリファイルへのパスで, X.Y は Kakadu のバージョンです."

#: ../../source/development/building_from_source.rst:1066
msgid ""
"Path to a shared library file whose name is like libkdu_aXYR.so on Unix "
"or kdu_aXYR.lib on Windows, where X.Y is the Kakadu version."
msgstr ""
"Unix では libkdu_aXYR.so または Windows では kdu_aXYR.lib "
"のような名前の共有ライブラリファイルへのパスで, X.Y は Kakadu のバージョンです."

#: ../../source/development/building_from_source.rst:1071
msgid "Control whether to use KDU. Defaults to ON when KDU is found."
msgstr "KDU を使用するかどうかを制御します. KDU が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1074
msgid "KEA"
msgstr ""

#: ../../source/development/building_from_source.rst:1076
msgid ""
"The `KEA <http://www.kealib.org/>`_ library is required for the "
":ref:`raster.kea` driver. The HDF5 CXX library is also required."
msgstr ""
"`KEA <http://www.kealib.org/>`_ ライブラリは, :ref:`raster.kea` ドライバに必要です. HDF5"
" CXX ライブラリも必要です."

#: ../../source/development/building_from_source.rst:1081
msgid "Path to an include directory with the ``libkea/KEACommon.h`` header file."
msgstr "``libkea/KEACommon.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1089
msgid "Control whether to use KEA. Defaults to ON when KEA is found."
msgstr "KEA を使用するかどうかを制御します. KEA が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1093
msgid "LERC"
msgstr ""

#: ../../source/development/building_from_source.rst:1095
msgid ""
"`LERC <https://github.com/esri/lerc>`_ is an open-source image or raster "
"format which supports rapid encoding and decoding for any pixel type (not"
" just RGB or Byte). Users set the maximum compression error per pixel "
"while encoding, so the precision of the original input image is preserved"
" (within user defined error bounds)."
msgstr ""
"`LERC <https://github.com/esri/lerc>`_ は, 任意のピクセルタイプ (RGB または Byte だけでなく)"
" に対して高速なエンコードとデコードをサポートするオープンソースの画像またはラスタ形式です. ユーザーは, "
"エンコード時にピクセルごとの最大圧縮エラーを設定するため, 元の入力画像の精度が保存されます (ユーザー定義のエラー境界内で)."

#: ../../source/development/building_from_source.rst:1102
msgid "Path to an include directory with the ``Lerc_c_api.h`` header file."
msgstr "``Lerc_c_api.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1110
msgid "Control whether to use LERC. Defaults to ON when LERC is found."
msgstr "LERC を使用するかどうかを制御します. LERC が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1114
msgid ""
"Control whether to use the LERC internal library. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_LERC=ON"
msgstr ""
"LERC 内部ライブラリを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_LERC=ON より優先されます."

#: ../../source/development/building_from_source.rst:1118
msgid "LIBAEC"
msgstr ""

#: ../../source/development/building_from_source.rst:1120
msgid ""
"`libaec <https://gitlab.dkrz.de/k202009/libaec>`_ is a compression "
"library which offers the extended Golomb-Rice coding as defined in the "
"CCSDS recommended standard 121.0-B-3. It is used by the "
":ref:`raster.grib` driver."
msgstr ""
"`libaec <https://gitlab.dkrz.de/k202009/libaec>`_ は, CCSDS 推奨標準 121.0-B-3"
" で定義されている拡張ゴロム・ライス符号化を提供する圧縮ライブラリです. :ref:`raster.grib` ドライバで使用されます."

#: ../../source/development/building_from_source.rst:1126
msgid "Path to an include directory with the ``libaec.h`` header file."
msgstr "``libaec.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1134
msgid "Control whether to use LIBAEC. Defaults to ON when LIBAEC is found."
msgstr "LIBAEC を使用するかどうかを制御します. LIBAEC が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1137
msgid "LibKML"
msgstr ""

#: ../../source/development/building_from_source.rst:1139
msgid ""
"`LibKML <https://github.com/libkml/libkml>`_ is required for the "
":ref:`vector.libkml` driver. It can be detected with pkg-config."
msgstr ""
"`LibKML <https://github.com/libkml/libkml>`_ は, :ref:`vector.libkml` "
"ドライバに必要です. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:1148
msgid "Path to a shared or static library file for ``kmlbase``"
msgstr "共有または静的ライブラリファイル ``kmlbase`` へのパス"

#: ../../source/development/building_from_source.rst:1152
msgid "Path to a shared or static library file for ``kmldom``"
msgstr "共有または静的ライブラリファイル ``kmldom`` へのパス"

#: ../../source/development/building_from_source.rst:1156
msgid "Path to a shared or static library file for ``kmlengine``"
msgstr "共有または静的ライブラリファイル ``kmlengine`` へのパス"

#: ../../source/development/building_from_source.rst:1160
msgid "Path to a shared or static library file for ``minizip``"
msgstr "共有または静的ライブラリファイル ``minizip`` へのパス"

#: ../../source/development/building_from_source.rst:1164
msgid "Path to a shared or static library file for ``uriparser``"
msgstr "共有または静的ライブラリファイル ``uriparser`` へのパス"

#: ../../source/development/building_from_source.rst:1168
msgid "Control whether to use LibKML. Defaults to ON when LibKML is found."
msgstr "LibKML を使用するかどうかを制御します. LibKML が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1171
msgid "LibLZMA"
msgstr ""

#: ../../source/development/building_from_source.rst:1173
msgid ""
"`LibLZMA <https://tukaani.org/xz/>`_ is a compression library which "
"offers the lossless LZMA2 compression algorithm. It is used by the "
"internal libtiff library or the :ref:`raster.zarr` driver."
msgstr ""
"`LibLZMA <https://tukaani.org/xz/>`_ は, LZMA2 圧縮アルゴリズムを提供する圧縮ライブラリです. 内部 "
"libtiff ライブラリまたは :ref:`raster.zarr` ドライバで使用されます."

#: ../../source/development/building_from_source.rst:1179
msgid "Path to an include directory with the ``lzma.h`` header file."
msgstr "``lzma.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1187
msgid "Control whether to use LibLZMA. Defaults to ON when LibLZMA is found."
msgstr "LibLZMA を使用するかどうかを制御します. LibLZMA が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1191
msgid "libOpenDRIVE"
msgstr ""

#: ../../source/development/building_from_source.rst:1193
msgid ""
"`libOpenDRIVE <https://github.com/pageldev/libOpenDRIVE>`_ in version >= "
"0.6.0 is required for the :ref:`vector.xodr` driver."
msgstr ""
"`libOpenDRIVE <https://github.com/pageldev/libOpenDRIVE>`_ のバージョン >= "
"0.6.0 が, :ref:`vector.xodr` ドライバに必要です."

#: ../../source/development/building_from_source.rst:1197
msgid ""
"Path to libOpenDRIVE CMake configuration directory "
"``<installDir>/cmake/``. The :file:`cmake/` path is usually automatically"
" created when installing libOpenDRIVE and contains the necessary "
"configuration files for inclusion into other project builds."
msgstr ""
"libOpenDRIVE CMake 構成ディレクトリへのパス ``<installDir>/cmake/``. :file:`cmmake/` "
"パスは, 通常, libOpenDRIVE をインストールすると自動的に作成され, "
"他のプロジェクトビルドに含めるための必要な構成ファイルが含まれています."

#: ../../source/development/building_from_source.rst:1201
msgid ""
"Control whether to use libOpenDRIVE. Defaults to ON when libOpenDRIVE is "
"found."
msgstr "libOpenDRIVE を使用するかどうかを制御します. libOpenDRIVE が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1205
msgid "LibQB3"
msgstr ""

#: ../../source/development/building_from_source.rst:1207
msgid ""
"The `QB3 <https://github.com/lucianpls/QB3>`_ compression, used by the "
":ref:`raster.marfa` driver."
msgstr ""
"`QB3 <https://github.com/lucianpls/QB3>`_ 圧縮は, :ref:`raster.marfa` "
"ドライバで使用されます."

#: ../../source/development/building_from_source.rst:1212
msgid "Control whether to use LibQB3. Defaults to ON when LibQB3 is found."
msgstr "LibQB3 を使用するかどうかを制御します. LibQB3 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1216
msgid "LibXml2"
msgstr ""

#: ../../source/development/building_from_source.rst:1218
msgid ""
"The `LibXml2 <http://xmlsoft.org/>`_ processing library is used to do "
"validation of XML files against a XML Schema (.xsd) in a few drivers "
"(PDF, GMLAS, GML OGR VRT) and for advanced capabilities in GMLJP2v2 "
"generation."
msgstr ""
"`LibXml2 <http://xmlsoft.org/>`_ 処理ライブラリは, いくつかのドライバ (PDF, GMLAS, GML OGR"
" VRT) で XML ファイルを XML スキーマ (.xsd) に対して検証するために使用されます. また, GMLJP2v2 "
"生成の高度な機能にも使用されます."

#: ../../source/development/building_from_source.rst:1232
msgid "Control whether to use LibXml2. Defaults to ON when LibXml2 is found."
msgstr "LibXml2 を使用するかどうかを制御します. LibXml2 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1236
msgid "LURATECH"
msgstr ""

#: ../../source/development/building_from_source.rst:1238
msgid ""
"The Luratech JPEG2000 SDK (closed source/proprietary) is required for the"
" :ref:`raster.jp2lura` driver."
msgstr ""
"Luratech JPEG2000 SDK (クローズドソース/プロプライエタリ) は, :ref:`raster.jp2lura` "
"ドライバに必要です."

#: ../../source/development/building_from_source.rst:1241
msgid ""
"LURATECH_ROOT or CMAKE_PREFIX_PATH should point to the directory of the "
"SDK."
msgstr "LURATECH_ROOT または CMAKE_PREFIX_PATH は, SDK のディレクトリを指す必要があります."

#: ../../source/development/building_from_source.rst:1245
msgid "Path to the include directory with the ``lwf_jp2.h`` header file."
msgstr "``lwf_jp2.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1249
msgid "Path to library file lib_lwf_jp2.a / lwf_jp2.lib"
msgstr "ライブラリファイル lib_lwf_jp2.a / lwf_jp2.lib へのパス"

#: ../../source/development/building_from_source.rst:1253
msgid "Control whether to use LURATECH. Defaults to ON when LURATECH is found."
msgstr "LURATECH を使用するかどうかを制御します. LURATECH が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1257
msgid "LZ4"
msgstr ""

#: ../../source/development/building_from_source.rst:1259
msgid ""
"`LZ4 <https://github.com/lz4/lz4>`_ is a compression library which offers"
" the lossless LZ4 compression algorithm. It is used by the "
":ref:`raster.zarr` driver."
msgstr ""
"`LZ4 <https://github.com/lz4/lz4>`_ は, LZ4 圧縮アルゴリズムを提供する圧縮ライブラリです. "
":ref:`raster.zarr` ドライバで使用されます."

#: ../../source/development/building_from_source.rst:1265
msgid "Path to an include directory with the ``lz4.h`` header file."
msgstr "``lz4.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1269
msgid ""
"Path to a shared or static library file.  A similar variable "
"``LZ4_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, ``LZ4_LIBRARY_DEBUG`` "
"という類似の変数を指定できます."

#: ../../source/development/building_from_source.rst:1275
msgid "Control whether to use LZ4. Defaults to ON when LZ4 is found."
msgstr "LZ4 を使用するかどうかを制御します. LZ4 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1279
msgid "MONGOCXX"
msgstr ""

#: ../../source/development/building_from_source.rst:1281
msgid ""
"The `MongoCXX <https://github.com/mongodb/mongo-cxx-driver>`_ and BsonCXX"
" libraries are needed to build the :ref:`vector.mongodbv3` driver. They "
"can be detected with pkg-config."
msgstr ""
"`MongoCXX <https://github.om/mongodb/mongo-cxx-driver>`_ および BsonCXX "
"ライブラリは, :ref:`vector.mongodbv3` ドライバをビルドするために必要です. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:1287
msgid "Path to an include directory with the ``mongocxx/client.hpp`` header file."
msgstr "``mongocxx/client.hpp`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1291
msgid ""
"Path to an include directory with the ``bsoncxx/config/version.hpp`` "
"header file."
msgstr "``bsoncxx/config/version.hpp`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1295
msgid "Path to a library file ``mongocxx``"
msgstr "ライブラリファイル ``mongocxx`` へのパス"

#: ../../source/development/building_from_source.rst:1299
msgid "Path to a library file ``bsoncxx``"
msgstr "ライブラリファイル ``bsoncxx`` へのパス"

#: ../../source/development/building_from_source.rst:1303
msgid "Control whether to use MONGOCXX. Defaults to ON when MONGOCXX is found."
msgstr "MONGOCXX を使用するかどうかを制御します. MONGOCXX が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1307
msgid "MRSID"
msgstr ""

#: ../../source/development/building_from_source.rst:1309
msgid ""
"The MRSID Raster DSDK (closed source/proprietary) is required for the "
":ref:`raster.mrsid` driver."
msgstr "MRSID Raster DSDK (クローズドソース/プロプライエタリ) は, :ref:`raster.mrsid` ドライバに必要です."

#: ../../source/development/building_from_source.rst:1312
msgid ""
"MRSID_ROOT or CMAKE_PREFIX_PATH should point to the directory of the SDK "
"ending with Raster_DSDK. Note that on Linux, its lib subdirectory should "
"be in the LD_LIBRARY_PATH so that the linking of applications succeeds "
"and libtbb.so can be found."
msgstr ""
"MRSID_ROOT または CMAKE_PREFIX_PATH は, Raster_DSDK で終わる SDK "
"のディレクトリを指す必要があります. Linux では, lib サブディレクトリが LD_LIBRARY_PATH にある必要があります. "
"これにより, アプリケーションのリンクが成功し, libtbb.so が見つかります."

#: ../../source/development/building_from_source.rst:1319
msgid "Path to the include directory with the ``lt_base.h`` header file."
msgstr "``lt_base.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1323
msgid "Path to library file libltidsdk"
msgstr "ライブラリファイル libltidsdk へのパス"

#: ../../source/development/building_from_source.rst:1327
msgid ""
"Whether to enable JPEG2000 support through the MrSID SDK. The default "
"value of this option is OFF."
msgstr "MrSID SDK を介して JPEG2000 サポートを有効にするかどうか. このオプションのデフォルト値は OFF です."

#: ../../source/development/building_from_source.rst:1332
msgid "Control whether to use MRSID. Defaults to ON when MRSID is found."
msgstr "MRSID を使用するかどうかを制御します. MRSID が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1336
msgid "MSSQL_NCLI"
msgstr ""

#: ../../source/development/building_from_source.rst:1338
msgid ""
"The Microsoft SQL Native Client Library (closed source/proprietary) is "
"required to enable bulk copy in the :ref:`vector.mssqlspatial` driver. If"
" both MSSQL_NCLI and MSSQL_ODBC are found and enabled, MSSQL_ODBC will be"
" used. The library is normally found if installed in standard location, "
"and at version 11."
msgstr ""
"Microsoft SQL Native Client Library (クローズドソース/プロプライエタリ) は, "
":ref:`vector.mssqlspatial` ドライバでバルクコピーを有効にするために必要です. MSSQL_NCLI と "
"MSSQL_ODBC の両方が見つかり有効になっている場合, MSSQL_ODBC が使用されます. 通常, 標準の場所にインストールされており,"
" バージョン 11 で見つかります."

#: ../../source/development/building_from_source.rst:1345
msgid "Major version of the Native Client, typically 11"
msgstr "Native Client のメジャーバージョン, 通常は 11"

#: ../../source/development/building_from_source.rst:1349
msgid "Path to include directory with ``sqlncli.h`` header."
msgstr "``sqlncli.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1353
#: ../../source/development/building_from_source.rst:1378
#: ../../source/development/building_from_source.rst:1397
msgid "Path to library to be linked."
msgstr "リンクするライブラリへのパス."

#: ../../source/development/building_from_source.rst:1357
msgid ""
"Control whether to use MSSQL_NCLI. Defaults to ON when MSSQL_NCLI is "
"found."
msgstr "MSSQL_NCLI を使用するかどうかを制御します. MSSQL_NCLI が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1361
msgid "MSSQL_ODBC"
msgstr ""

#: ../../source/development/building_from_source.rst:1363
msgid ""
"The Microsoft SQL Native ODBC driver Library (closed source/proprietary) "
"is required to enable bulk copy in the :ref:`vector.mssqlspatial` driver."
" If both MSSQL_NCLI and MSSQL_ODBC are found and enabled, MSSQL_ODBC will"
" be used. The library is normally found if installed in standard "
"location, and at version 17."
msgstr ""
"Microsoft SQL Native ODBC driver Library (クローズドソース/プロプライエタリ) は, "
":ref:`vector.mssqlspatial` ドライバでバルクコピーを有効にするために必要です. MSSQL_NCLI と "
"MSSQL_ODBC の両方が見つかり有効になっている場合, MSSQL_ODBC が使用されます. 通常, 標準の場所にインストールされており,"
" バージョン 17 が見つかります."

#: ../../source/development/building_from_source.rst:1370
msgid "Major version of the Native Client, typically 17"
msgstr "Native Client のメジャーバージョン, 通常は 17"

#: ../../source/development/building_from_source.rst:1374
msgid "Path to include directory with ``msodbcsql.h`` header."
msgstr "``msodbcsql.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1382
msgid ""
"Control whether to use MSSQL_ODBC. Defaults to ON when MSSQL_ODBC is "
"found."
msgstr "MSSQL_ODBC を使用するかどうかを制御します. MSSQL_ODBC が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1386
msgid "MYSQL"
msgstr ""

#: ../../source/development/building_from_source.rst:1388
msgid ""
"The MySQL or MariaDB client library is required to enable the "
":ref:`vector.mysql` driver."
msgstr "MySQL または MariaDB クライアントライブラリは, :ref:`vector.mysql` ドライバを有効にするために必要です."

#: ../../source/development/building_from_source.rst:1393
msgid "Path to include directory with ``mysql.h`` header file."
msgstr "``mysql.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1401
msgid "Control whether to use MYSQL. Defaults to ON when MYSQL is found."
msgstr "MYSQL を使用するかどうかを制御します. MYSQL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1405
msgid "NetCDF"
msgstr ""

#: ../../source/development/building_from_source.rst:1407
msgid ""
"The `netCDF <https://github.com/Unidata/netcdf-c>`_ is required to enable"
" the :ref:`raster.netcdf` driver. The ``nc-config`` program can be used "
"to detect it."
msgstr ""
"`netCDF <https://github.com/Ubidata/netcdf-c>`_ は, :ref:`raster.netcdf` "
"ドライバを有効にするために必要です. ``nc-config`` プログラムを使用して検出できます."

#: ../../source/development/building_from_source.rst:1413
msgid "Path to an include directory with the ``netcdf.h`` header file."
msgstr "``netcdf.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1421
msgid "Control whether to use netCDF. Defaults to ON when netCDF is found."
msgstr "netCDF を使用するかどうかを制御します. netCDF が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1425
msgid "ODBC"
msgstr ""

#: ../../source/development/building_from_source.rst:1427
msgid ""
"ODBC is required for various drivers: :ref:`vector.odbc`, "
":ref:`vector.pgeo`, :ref:`vector.hana` and :ref:`vector.mssqlspatial`. It"
" is normally automatically found in system directories on Unix and "
"Windows."
msgstr ""
"ODBC は, さまざまなドライバに必要です: :ref:`vector.odbc`, :ref:`vector.pgeo`, "
":ref:`vector.hana` および :ref:`vector.mssqlspatial`. 通常, Unix および Windows "
"のシステムディレクトリで自動的に見つかります."

#: ../../source/development/building_from_source.rst:1433
msgid "Path to ODBC include directory with ``sql.h`` header."
msgstr "``sql.h`` ヘッダーを含む ODBC include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1437
msgid "Path to ODBC library to be linked."
msgstr "リンクする ODBC ライブラリへのパス."

#: ../../source/development/building_from_source.rst:1441
msgid "Control whether to use ODBC. Defaults to ON when ODBC is found."
msgstr "ODBC を使用するかどうかを制御します. ODBC が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1445
msgid "ODBC-CPP"
msgstr ""

#: ../../source/development/building_from_source.rst:1447
msgid ""
"The `odbc-cpp-wrapper library <https://github.com/SAP/odbc-cpp-wrapper>`_"
" is required for the :ref:`vector.hana` driver."
msgstr ""
"`odbc-cpp-wrapper ライブラリ <https://github.com/SAP/odbc-cpp-wrapper>`_ は, "
":ref:`vector.hana` ドライバに必要です."

#: ../../source/development/building_from_source.rst:1452
msgid "Path to an include directory with the ``odbc/Environment.h`` header file."
msgstr "``odbc/Environment.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1460
msgid "Control whether to use ODBC-CPP. Defaults to ON when ODBC-CPP is found."
msgstr "ODBC-CPP を使用するかどうかを制御します. ODBC-CPP が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1464
msgid "OGDI"
msgstr ""

#: ../../source/development/building_from_source.rst:1466
msgid ""
"The `OGDI <https://github.com/libogdi/ogdi/>`_ library is required for "
"the :ref:`vector.ogdi` driver. It can be detected with pkg-config."
msgstr ""
"`OGDI <https://github.com/libogdi/ogdi/>`_ ライブラリは, :ref:`vector.ogdi` "
"ドライバに必要です. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:1471
msgid "Path to an include directory with the ``ecs.h`` header file."
msgstr "``ecs.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1479
msgid "Control whether to use OGDI. Defaults to ON when OGDI is found."
msgstr "OGDI を使用するかどうかを制御します. OGDI が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1483
msgid "OpenCAD"
msgstr ""

#: ../../source/development/building_from_source.rst:1485
msgid ""
"`libopencad <https://github.com/nextgis-borsch/lib_opencad>`_ is required"
" for the :ref:`vector.cad` driver. If not found, an internal copy can be "
"used."
msgstr ""
"`libopencad <https://github.com/nextgis-borsch/lib_opencad>`_ は, "
":ref:`vector.cad` ドライバに必要です. 見つからない場合, 内部コピーを使用できます."

#: ../../source/development/building_from_source.rst:1490
msgid "Path to an include directory with the ``opencad.h`` header file."
msgstr "``opencad.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1498
msgid ""
"Control whether to use external libopencad. Defaults to ON when external "
"libopencad is found."
msgstr "外部 libopencad を使用するかどうかを制御します. 外部 libopencad が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1502
msgid ""
"Control whether to use internal libopencad copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_OPENCAD=ON"
msgstr ""
"内部 libopencad コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. "
"ON に設定されている場合, GDAL_USE_OPENCAD=ON より優先されます."

#: ../../source/development/building_from_source.rst:1508
msgid "OpenCL"
msgstr ""

#: ../../source/development/building_from_source.rst:1510
msgid ""
"The OpenCL library may be used to accelerate warping computations, "
"typically with a GPU."
msgstr "OpenCL ライブラリは, 通常, GPU を使用してワーピング計算を高速化するために使用できます."

#: ../../source/development/building_from_source.rst:1513
msgid ""
"(GDAL 3.5 and 3.6) It is disabled by default even when detected, since "
"the current OpenCL warping implementation lags behind the generic "
"implementation. Starting with GDAL 3.7, build support is enabled by "
"default when OpenCL is detected, but it is disabled by default at "
"runtime. The warping option USE_OPENCL or the configuration option "
"GDAL_USE_OPENCL must be set to YES to enable it."
msgstr ""
"(GDAL 3.5 および 3.6) 現在の OpenCL ワーピング実装が一般的な実装よりも遅れているため, "
"検出された場合でもデフォルトで無効になっています. GDAL 3.7 以降, OpenCL が検出された場合, "
"ビルドサポートがデフォルトで有効になりますが, ランタイムでデフォルトで無効になります. ワーピングオプション USE_OPENCL "
"または構成オプション GDAL_USE_OPENCL を YES に設定する必要があります."

#: ../../source/development/building_from_source.rst:1521
msgid "Path to an include directory with the ``CL/cl.h`` header file."
msgstr "``CL/cl.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1529
msgid "Control whether to use OPENCL. Defaults to *OFF* when OPENCL is found."
msgstr "OPENCL を使用するかどうかを制御します. OPENCL が見つかった場合, デフォルトは *OFF* です."

#: ../../source/development/building_from_source.rst:1533
msgid "OpenEXR"
msgstr ""

#: ../../source/development/building_from_source.rst:1535
msgid ""
"`OpenEXR <https://github.com/AcademySoftwareFoundation/openexr>`_ is "
"required for the :ref:`raster.exr` driver"
msgstr ""
"`OpenEXR <https://github.com/AcademySoftwareFoundation/openexr>`_ は, "
":ref:`raster.exr` ドライバに必要です."

#: ../../source/development/building_from_source.rst:1537
msgid ""
"Specify ``OpenEXR_ROOT`` variable pointing to the parent directory of "
"/lib and /include subdirectories, i.e. /DEV/lib/openexr-3.0. For OpenEXR "
">= 3 additionally specify ``Imath_ROOT`` as this is a separate library "
"now, i.e. /DEV/lib/imath-3.1.3"
msgstr ""
"``OpenEXR_ROOT`` 変数を指定して, /lib および /include サブディレクトリの親ディレクトリを指定します. つまり, "
"/DEV/lib/openexr-3.0 です. OpenEXR >= 3 の場合は, これは別のライブラリなので, ``Imath_ROOT``"
" も指定してください. つまり, /DEV/lib/imath-3.1.3 です."

#: ../../source/development/building_from_source.rst:1542
#: ../../source/development/building_from_source.rst:1547
msgid "or"
msgstr "または"

#: ../../source/development/building_from_source.rst:1544
msgid ""
"Specify root directory adding to the ``CMAKE_PREFIX_PATH`` variable to "
"find OpenEXR's pkgconfig. For example "
"-DCMAKE_PREFIX_PATH=/DEV/lib/openexr-3.0;/DEV/lib/imath-3.1.3"
msgstr ""
"OpenEXR の pkgconfig を見つけるために ``CMAKE_PREFIX_PATH`` "
"変数に追加してルートディレクトリを指定します. たとえば "
"-DCMAKE_PREFIX_PATH=/DEV/lib/openexr-3.0;/DEV/lib/imath-3.1.3"

#: ../../source/development/building_from_source.rst:1549
msgid ""
"Get real specific and set ``OpenEXR_INCLUDE_DIR``, ``Imath_INCLUDE_DIR``,"
" ``OpenEXR_LIBRARY``, ``OpenEXR_UTIL_LIBRARY``, ``OpenEXR_HALF_LIBRARY``,"
" ``OpenEXR_IEX_LIBRARY`` explicitly"
msgstr ""
"具体的には, ``OpenEXR_INCLUDE_DIR`` , ``Imath_INCLUDE_DIR`` , "
"``OpenEXR_LIBRARY`` , ``OpenEXR_UTIL_LIBRARY``, ``OpenEXR_HALF_LIBRARY``,"
" ``OpenEXR_IEX_LIBRARY`` を明示的に設定します."

#: ../../source/development/building_from_source.rst:1557
msgid "Control whether to use OpenEXR. Defaults to ON when OpenEXR is found."
msgstr "OpenEXR を使用するかどうかを制御します. OpenEXR が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1561
msgid "OpenJPEG"
msgstr ""

#: ../../source/development/building_from_source.rst:1563
msgid ""
"The `OpenJPEG <https://github.com/uclouvain/openjpeg>`_ library is an "
"open-source JPEG-2000 codec written in C language. It is required for the"
" :ref:`raster.jp2openjpeg` driver, or other drivers that use JPEG-2000 "
"functionality."
msgstr ""
"`OpenJPEG <https://github.com/uclouvain/openjpeg>`_ ライブラリは, C "
"言語で書かれたオープンソースの JPEG-2000 コーデックです. :ref:`raster.jp2openjpeg` ドライバ, または "
"JPEG-2000 機能を使用する他のドライバに必要です."

#: ../../source/development/building_from_source.rst:1569
msgid "Path to an include directory with the ``openjpeg.h`` header file."
msgstr "``openjpeg.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1577
msgid "Control whether to use OpenJPEG. Defaults to ON when OpenJPEG is found."
msgstr "OpenJPEG を使用するかどうかを制御します. OpenJPEG が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1583
msgid ""
"Control the mode used for find_package(OpenJPEG). Defaults to MODULE for "
"compatibility with OpenJPEG < 2.5.1. If set to CONFIG, only Config mode "
"search is attempted. If set to empty string, default CMake logic "
"(https://cmake.org/cmake/help/latest/command/find_package.html) applies."
msgstr ""
"find_package(OpenJPEG) で使用されるモードを制御します. OpenJPEG < 2.5.1 との互換性のため, デフォルトは"
" MODULE です. CONFIG に設定すると, Config モードの検索のみが試行されます. 空の文字列に設定すると, デフォルトの "
"CMake ロジック "
"(https://cmake.org/cmake/help/latest/command/find_package.html) が適用されます."

#: ../../source/development/building_from_source.rst:1590
msgid "OpenSSL"
msgstr ""

#: ../../source/development/building_from_source.rst:1592
msgid ""
"The Crypto component of the `OpenSSL "
"<https://github.com/openssl/openssl>`_ library can be used for the RSA "
"SHA256 signing functionality used by some authentication methods of "
"Google Cloud. It might be required to use the :ref:`raster.eedai` images "
"or use the :ref:`/vsigs/ <vsigs>` virtual file system."
msgstr ""
"`OpenSSL <https://github.com/openssl/openssl>`_ ライブラリの Crypto コンポーネントは, "
"Google Cloud の一部の認証メソッドで使用される RSA SHA256 署名機能に使用できます. :ref:`raster.eedai`"
" 画像を使用するか, :ref:`/vsigs/ <vsigs>` 仮想ファイルシステムを使用するためには, 必要かもしれません."

#: ../../source/development/building_from_source.rst:1597
msgid ""
"See https://cmake.org/cmake/help/latest/module/FindOpenSSL.html for "
"details on how to configure the library. For static linking, the "
"following options may be needed: -DOPENSSL_USE_STATIC_LIBS=TRUE "
"-DOPENSSL_MSVC_STATIC_RT=TRUE"
msgstr ""
"ライブラリの設定方法の詳細については, "
"https://cmake.org/cmake/help/latest/module/FindOpenSSL.html を参照してください. "
"静的リンクの場合, 次のオプションが必要になる場合があります: -DOPENSSL_USE_STATIC_LIBS=TRUE "
"-DOPENSSL_MSVC_STATIC_RT=TRUE"

#: ../../source/development/building_from_source.rst:1603
msgid "Control whether to use OpenSSL. Defaults to ON when OpenSSL is found."
msgstr "OpenSSL を使用するかどうかを制御します. OpenSSL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1607
msgid "Oracle"
msgstr ""

#: ../../source/development/building_from_source.rst:1609
msgid ""
"The Oracle Instant Client SDK (closed source/proprietary) is required for"
" the :ref:`vector.oci` and the :ref:`raster.georaster` drivers"
msgstr ""
"Oracle Instant Client SDK (クローズドソース/プロプライエタリ) は, :ref:`vector.oci` および "
":ref:`raster.georaster` ドライバに必要です."

#: ../../source/development/building_from_source.rst:1614
msgid "Path to the root directory of the Oracle Instant Client SDK."
msgstr "Oracle Instant Client SDK のルートディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1618
msgid "Control whether to use Oracle. Defaults to ON when Oracle is found."
msgstr "Oracle を使用するかどうかを制御します. Oracle が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1622
msgid "Parquet"
msgstr ""

#: ../../source/development/building_from_source.rst:1624
msgid ""
"The Parquet component of the `Apache Arrow C++ "
"<https://github.com/apache/arrow/tree/master/cpp>` library is required "
"for the :ref:`vector.parquet` driver. Specify install prefix in the "
"``CMAKE_PREFIX_PATH`` variable."
msgstr ""
"`Apache Arrow C++ <https://github.com/apache/arrow/tree/master/cpp>` "
"ライブラリの Parquet コンポーネントは, :ref:`vector.parquet` ドライバに必要です. "
"``CMAKE_PREFIX_PATH`` 変数にインストールプレフィックスを指定します."

#: ../../source/development/building_from_source.rst:1630
msgid "Control whether to use Parquet. Defaults to ON when Parquet is found."
msgstr "Parquet を使用するかどうかを制御します. Parquet が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1634
msgid ""
"Control whether to use statically built Arrow libraries. Defaults to OFF "
"when Parquet is found."
msgstr "静的にビルドされた Arrow ライブラリを使用するかどうかを制御します. Parquet が見つかった場合, デフォルトは OFF です."

#: ../../source/development/building_from_source.rst:1638
msgid "PCRE2"
msgstr ""

#: ../../source/development/building_from_source.rst:1640
msgid ""
"`PCRE2 <https://github.com/PhilipHazel/pcre2>`_ implements Perl-"
"compatible Regular Expressions support. It is used for the REGEXP "
"operator in drivers using SQLite3."
msgstr ""
"`PCRE2 <https://github.com/PhilipHazel/pcre2>`_ は, Perl "
"互換の正規表現サポートを実装しています. SQLite3 を使用するドライバで REGEXP 演算子に使用されます."

#: ../../source/development/building_from_source.rst:1645
msgid "Path to an include directory with the ``pcre2.h`` header file."
msgstr "``pcre2.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1649
msgid "Path to a shared or static library file with \"pcre2-8\" in its name."
msgstr "名前に \"pcre2-8\" が含まれる共有または静的ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:1653
msgid "Control whether to use PCRE2. Defaults to ON when PCRE2 is found."
msgstr "PCRE2 を使用するかどうかを制御します. PCRE2 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1657
msgid "PDFIUM"
msgstr ""

#: ../../source/development/building_from_source.rst:1659
msgid ""
"The `PDFium <https://github.com/rouault/pdfium_build_gdal_3_5>`_ library "
"is one of the possible backends for the :ref:`raster.pdf` driver."
msgstr ""
"`PDFium <https://github.com/rouault/pdfium_build_gdal_3_5>`_ ライブラリは, "
":ref:`raster.pdf` ドライバで利用可能なバックエンドの1つです."

#: ../../source/development/building_from_source.rst:1664
msgid "Path to an include directory with the ``public/fpdfview.h`` header file."
msgstr "``public/fpdfview.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1672
msgid "Control whether to use PDFIUM. Defaults to ON when PDFIUM is found."
msgstr "PDFIUM を使用するかどうかを制御します. PDFIUM が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1676
msgid "PNG"
msgstr ""

#: ../../source/development/building_from_source.rst:1678
msgid ""
"`libpng <https://github.com/glennrp/libpng>`_ is required for the "
":ref:`raster.png` driver, and may be used by a few other drivers "
"(:ref:`raster.grib`, :ref:`raster.gpkg`, etc.) If not found, an internal "
"copy of libpng can be used. See "
"https://cmake.org/cmake/help/latest/module/FindPNG.html for more details "
"on how the library is detected."
msgstr ""
"`libpng <https://github.com/glennrp/libpng>`_ は, :ref:`raster.png` "
"ドライバに必要であり, 他のいくつかのドライバ ( :ref:`raster.grib` , :ref:`raster.gpkg` など) "
"で使用される場合があります. 見つからない場合, libpng の内部コピーを使用できます. ライブラリが検出される方法の詳細については, "
"https://cmake.org/cmake/help/latest/module/FindPNG.html を参照してください."

#: ../../source/development/building_from_source.rst:1686
msgid "Path to an include directory with the ``png.h`` header file."
msgstr "``png.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1690
msgid ""
"Path to a shared or static library file. A similar variable "
"``PNG_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, 類似の変数 "
"``PNG_LIBRARY_DEBUG`` を指定できます."

#: ../../source/development/building_from_source.rst:1696
msgid ""
"Control whether to use external libpng. Defaults to ON when external "
"libpng is found."
msgstr "外部 libpng を使用するかどうかを制御します. 外部 libpng が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1700
msgid ""
"Control whether to use internal libpng copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_PNG=ON"
msgstr ""
"内部 libpng コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_PNG=ON より優先されます."

#: ../../source/development/building_from_source.rst:1705
msgid "Poppler"
msgstr ""

#: ../../source/development/building_from_source.rst:1707
msgid ""
"The `Poppler <https://poppler.freedesktop.org/>`_ library is one of the "
"possible backends for the :ref:`raster.pdf` driver."
msgstr ""
"`Poppler <https://poppler.freedesktop.org/>`_ ライブラリは, :ref:`raster.pdf` "
"ドライバで利用可能なバックエンドの1つです."

#: ../../source/development/building_from_source.rst:1710
msgid ""
"Note that GDAL requires Poppler private headers, that are only installed "
"if configuring Poppler with -DENABLE_UNSTABLE_API_ABI_HEADERS."
msgstr ""
"GDAL は Poppler のプライベートヘッダーが必要ですが, Poppler を "
"-DENABLE_UNSTABLE_API_ABI_HEADERS で設定している場合のみインストールされます."

#: ../../source/development/building_from_source.rst:1715
msgid "Path to an include directory with the ``poppler-config.h`` header file."
msgstr "``poppler-config.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1723
msgid "Control whether to use Poppler. Defaults to ON when Poppler is found."
msgstr "Poppler を使用するかどうかを制御します. Poppler が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1727
msgid "PostgreSQL"
msgstr ""

#: ../../source/development/building_from_source.rst:1729
msgid ""
"The `PostgreSQL client library <https://www.postgresql.org/>`_ is "
"required for the :ref:`vector.pg` and :ref:`raster.postgisraster` "
"drivers."
msgstr ""
"`PostgreSQL クライアントライブラリ <https://www.postgresql.org/>`_ は, "
":ref:`vector.pg` および :ref:`raster.postgisraster` ドライバに必要です."

#: ../../source/development/building_from_source.rst:1734
msgid "Path to an include directory with the ``libpq-fe.h`` header file."
msgstr "``libpq-fe.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1738
msgid ""
"Path to a shared or static library file ``pq`` / ``libpq``. A similar "
"variable ``PostgreSQL_LIBRARY_DEBUG`` can also be specified to a similar "
"library for building Debug releases."
msgstr ""
"共有または静的ライブラリファイル ``pq`` / ``libpq`` へのパス. デバッグリリース用の類似のライブラリに対しても, 類似の変数 "
"``PostgreSQL_LIBRARY_DEBUG`` を指定できます."

#: ../../source/development/building_from_source.rst:1744
msgid ""
"Control whether to use PostgreSQL. Defaults to ON when PostgreSQL is "
"found."
msgstr "PostgreSQL を使用するかどうかを制御します. PostgreSQL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1748
msgid "PROJ"
msgstr ""

#: ../../source/development/building_from_source.rst:1750
msgid ""
"`PROJ <https://github.com/OSGeo/PROJ/>`_ >= 6.3 is a *required* "
"dependency for GDAL."
msgstr "`PROJ <https://github.com/OSGeo/PROJ/>`_ >= 6.3 は, GDAL の *必須* 依存関係です."

#: ../../source/development/building_from_source.rst:1754
msgid "Path to an include directory with the ``proj.h`` header file."
msgstr "``proj.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1758
msgid ""
"Path to a shared or static library file, such as ``libproj.so``, "
"``proj.lib``, or other name. A similar variable ``PROJ_LIBRARY_DEBUG`` "
"can also be specified to a similar library for building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス, たとえば ``libproj.so``, ``proj.lib`` などの名前. "
"デバッグリリース用の類似のライブラリに対しても, 類似の変数 ``PROJ_LIBRARY_DEBUG`` を指定できます."

#: ../../source/development/building_from_source.rst:1767
msgid ""
"Control the mode used for find_package(PROJ). Alters how the default "
"CMake search logic "
"(https://cmake.org/cmake/help/latest/command/find_package.html) applies. "
"Defaults to CUSTOM, where the CONFIG mode is applied for PROJ >= 8, and "
"fallbacks to default MODULE mode otherwise. Other values are passed "
"directly to find_package()"
msgstr ""
"find_package(PROJ) で使用されるモードを制御します. デフォルトの CMake 検索ロジック "
"(https://cmake.org/cmake/help/latest/command/find_package.html) "
"が適用される方法を変更します. PROJ >= 8 の場合は CONFIG モードが適用され, それ以外の場合はデフォルトの MODULE "
"モードにフォールバックします. 他の値は find_package() に直接渡されます."

#: ../../source/development/building_from_source.rst:1775
msgid "QHULL"
msgstr ""

#: ../../source/development/building_from_source.rst:1777
msgid ""
"The `QHULL <https://github.com/qhull/qhull>`_ library is used for the "
"linear interpolation of gdal_grid. If not found, an internal copy can be "
"used."
msgstr ""
"`QHULL <https://github.com/qhull/qhull>`_ ライブラリは, gdal_grid の線形補間に使用されます."
" 見つからない場合, QHULL の内部コピーを使用できます."

#: ../../source/development/building_from_source.rst:1782
msgid ""
"Name of the pkg-config package, typically ``qhull_r`` or "
"``qhullstatic_r``. Defaults to ``qhull_r``"
msgstr ""
"通常は ``qhull_r`` または ``qhullstatic_r`` のような pkg-config パッケージの名前です. デフォルトは "
"``qhull_r`` です."

#: ../../source/development/building_from_source.rst:1786
msgid ""
"Path to an include directory with the ``libqhull_r/libqhull_r.h`` header "
"file."
msgstr "``libqhull_r/libqhull_r.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1790
msgid "Path to a shared or static library file to the reentrant library."
msgstr "再入可能ライブラリへの共有または静的ライブラリファイルへのパス."

#: ../../source/development/building_from_source.rst:1794
msgid "Control whether to use QHULL. Defaults to ON when QHULL is found."
msgstr "QHULL を使用するかどうかを制御します. QHULL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1798
msgid ""
"Control whether to use internal QHULL copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_QHULL=ON"
msgstr ""
"内部 QHULL コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_QHULL=ON より優先されます."

#: ../../source/development/building_from_source.rst:1803
msgid "RASTERLITE2"
msgstr ""

#: ../../source/development/building_from_source.rst:1805
msgid ""
"The `RasterLite2 <https://www.gaia-gis.it/fossil/librasterlite2/index>`_ "
"(>= 1.1.0) library used by the :ref:`raster.rasterlite2` driver. It can "
"be detected with pkg-config."
msgstr ""
"`RasterLite2 <https://www.gaia-gis.it/fossil/librasterlite2/index>`_ (>= "
"1.1.0) ライブラリは, :ref:`raster.rasterlite2` ドライバで使用されます. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:1811
msgid ""
"Path to an include directory with the ``rasterlite2/rasterlite2.h`` "
"header file."
msgstr "``rasterlite2/rasterlite2.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1819
msgid ""
"Control whether to use RasterLite2. Defaults to ON when RasterLite2 is "
"found."
msgstr "RasterLite2 を使用するかどうかを制御します. RasterLite2 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1823
msgid "rdb"
msgstr ""

#: ../../source/development/building_from_source.rst:1825
msgid ""
"The `RDB <https://repository.riegl.com/software/libraries/rdblib>` "
"(closed source/proprietary) library is required for the :ref:`raster.rdb`"
" driver. Specify install prefix in the ``CMAKE_PREFIX_PATH`` variable."
msgstr ""
"`RDB <https://repository.riegl.com/software/libraries/rdblib>` "
"(クローズドソース/プロプライエタリ) ライブラリは, :ref:`raster.rdb` ドライバに必要です. "
"``CMAKE_PREFIX_PATH`` 変数にインストールプレフィックスを指定します."

#: ../../source/development/building_from_source.rst:1831
msgid "Control whether to use rdb. Defaults to ON when rdb is found."
msgstr "rdb を使用するかどうかを制御します. rdb が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1835
msgid "SPATIALITE"
msgstr ""

#: ../../source/development/building_from_source.rst:1837
msgid ""
"The `Spatialite <https://www.gaia-gis.it/fossil/libspatialite/index>`_ "
"library used by the :ref:`vector.sqlite` and :ref:`vector.gpkg` drivers, "
"and the :ref:`sql_sqlite_dialect`. It can be detected with pkg-config."
msgstr ""
"`Spatialite <https://www.gaia-gis.it/fossil/libspatialite/index>`_ "
"ライブラリは, :ref:`vector.sqlite` および :ref:`vector.gpkg` ドライバ, および "
":ref:`sql_sqlite_dialect` で使用されます. pkg-config で検出できます."

#: ../../source/development/building_from_source.rst:1843
msgid "Path to an include directory with the ``spatialite.h`` header file."
msgstr "``spatialite.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1851
msgid ""
"Control whether to use Spatialite. Defaults to ON when Spatialite is "
"found."
msgstr "Spatialite を使用するかどうかを制御します. Spatialite が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1855
msgid "SQLite3"
msgstr ""

#: ../../source/development/building_from_source.rst:1857
msgid ""
"The `SQLite3 <https://sqlite.org/index.html>`_ library  is required for "
"the :ref:`vector.sqlite` and :ref:`vector.gpkg` drivers (and also used by"
" other drivers), and the :ref:`sql_sqlite_dialect`."
msgstr ""
"`SQLite3 <https://sqlite.org/index.html>`_ ライブラリは, :ref:`vector.sqlite` "
"および :ref:`vector.gpkg` ドライバ (および他のドライバで使用される) および "
":ref:`sql_sqlite_dialect` に必要です."

#: ../../source/development/building_from_source.rst:1863
msgid "Path to an include directory with the ``sqlite3.h`` header file."
msgstr "``sqlite3.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1867
msgid ""
"Path to a shared or static library file, such as ``libsqlite3.so``, "
"``sqlite3.lib`` or other name."
msgstr "共有または静的ライブラリファイルへのパス, たとえば ``libsqlite3.so``, ``sqlite3.lib`` などの名前."

#: ../../source/development/building_from_source.rst:1872
msgid "Control whether to use SQLite3. Defaults to ON when SQLite3 is found."
msgstr "SQLite3 を使用するかどうかを制御します. SQLite3 が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1876
msgid "SFCGAL"
msgstr ""

#: ../../source/development/building_from_source.rst:1878
msgid ""
"`SFCGAL <https://github.com/Oslandia/SFCGAL>`_ is a geometry library "
"which supports ISO 19107:2013 and OGC Simple Features Access 1.2 for 3D "
"operations (PolyhedralSurface, TINs, ...)"
msgstr ""
"`SFCGAL <https://github.com/Osla ndia/SFCGAL>`_ は, 3D 操作 "
"(PolyhedralSurface, TINs, ...) に対して ISO 19107:2013 および OGC Simple "
"Features Access 1.2 をサポートするジオメトリライブラリです."

#: ../../source/development/building_from_source.rst:1888
msgid ""
"Path to a shared or static library file. A similar variable "
"``SFCGAL_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, 類似の変数 "
"``SFCGAL_LIBRARY_DEBUG`` を指定できます."

#: ../../source/development/building_from_source.rst:1894
msgid "Control whether to use SFCGAL. Defaults to ON when SFCGAL is found."
msgstr "SFCGAL を使用するかどうかを制御します. SFCGAL が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1898
msgid "SWIG"
msgstr ""

#: ../../source/development/building_from_source.rst:1900
msgid ""
"`SWIG <http://swig.org/>`_ is a software development tool that connects "
"programs written in C and C++ with a variety of high-level programming "
"languages. It is used for the Python, Java and CSharp bindings."
msgstr ""
"`SWIG <http://swig.org/>`_ は, C および C++ "
"で書かれたプログラムをさまざまな高水準プログラミング言語と接続するソフトウェア開発ツールです. Python, Java, CSharp "
"バインディングに使用されます."

#: ../../source/development/building_from_source.rst:1906
msgid "Path to the SWIG executable."
msgstr "SWIG 実行可能ファイルへのパス."

#: ../../source/development/building_from_source.rst:1908
msgid ""
"Note that setting it explicitly might be needed, and that putting the "
"directory of the installed binary into the PATH might not be sufficient. "
"The reason is that when building from source, a \"swig\" binary will be "
"generated, but FindSWIG will prefer a \"swig-4.0\" binary if found "
"elsewhere in the PATH."
msgstr ""
"明示的に設定する必要がある場合があり, インストールされたバイナリのディレクトリを PATH に追加しても十分でない場合があります. "
"ソースからビルドする場合, \"swig\" バイナリが生成されますが, FindSWIG は PATH の他の場所で \"swig-4.0\" "
"バイナリを優先します."

#: ../../source/development/building_from_source.rst:1916
msgid "TEIGHA"
msgstr ""

#: ../../source/development/building_from_source.rst:1918
msgid ""
"The TEIGHA / Open Design Alliance libraries (closed source/proprietary) "
"are required for the :ref:`vector.dwg` and :ref:`vector.dgnv8` drivers. "
"Note that on Linux, with a SDK consisting of shared libraries, the "
"bin/{platform_name} subdirectory of the SDK should be in the "
"LD_LIBRARY_PATH so that the linking of applications succeeds. The "
"TEIGHA_ROOT variable must be set."
msgstr ""
"TEIGHA / Open Design Alliance ライブラリ (クローズドソース/プロプライエタリ) は, "
":ref:`vector.dwg` および :ref:`vector.dgnv8` ドライバに必要です. Linux では, "
"共有ライブラリで構成された SDK の場合, アプリケーションのリンクが成功するように, SDK の bin/{platform_name} "
"サブディレクトリを LD_LIBRARY_PATH に設定する必要があります. TEIGHA_ROOT 変数を設定する必要があります."

#: ../../source/development/building_from_source.rst:1927
msgid ""
"Path to the base directory where the Kernel and Drawings package must be "
"extracted."
msgstr "カーネルおよび図面パッケージを展開する必要があるベースディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1932
msgid ""
"Path to a directory where a ``OdActivationInfo`` file is located. If the "
"file is somewhere under TEIGHA_ROOT, it will be automatically discovered."
" Otherwise this variable must be set for recent SDK versions (at least "
"with 2021 and later)."
msgstr ""
"``OdActivationInfo`` ファイルがあるディレクトリへのパス. ファイルが TEIGHA_ROOT のどこかにある場合, "
"自動的に検出されます. それ以外の場合, この変数は最新の SDK バージョン (少なくとも 2021 以降) で設定する必要があります."

#: ../../source/development/building_from_source.rst:1939
msgid "Control whether to use TEIGHA. Defaults to ON when TEIGHA is found."
msgstr "TEIGHA を使用するかどうかを制御します. TEIGHA が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1943
msgid "TIFF"
msgstr ""

#: ../../source/development/building_from_source.rst:1945
msgid ""
"`libtiff <https://gitlab.com/libtiff/libtiff/>`_ is required for the "
":ref:`raster.gtiff` drivers, and a few other drivers. If not found, an "
"internal copy of libtiff can be used."
msgstr ""
"`libtiff <https://gitlab.com/libtiff/libtiff/>`_ は, :ref:`raster.gtiff` "
"ドライバおよび他のいくつかのドライバに必要です. 見つからない場合, libtiff の内部コピーを使用できます."

#: ../../source/development/building_from_source.rst:1951
msgid "Path to an include directory with the ``tiff.h`` header file."
msgstr "``tiff.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:1955
msgid ""
"Path to a shared or static library file, such as ``libtiff.so``, "
"``tiff.lib``, or other name. A similar variable ``TIFF_LIBRARY_DEBUG`` "
"can also be specified to a similar library for building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス, たとえば ``libtiff.so``, ``tiff.lib`` などの名前. "
"デバッグリリース用の類似のライブラリに対しても, 類似の変数 ``TIFF_LIBRARY_DEBUG`` を指定できます."

#: ../../source/development/building_from_source.rst:1962
msgid ""
"Control whether to use external libtiff. Defaults to ON when external "
"libtiff is found."
msgstr "外部 libtiff を使用するかどうかを制御します. 外部 libtiff が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1966
msgid ""
"Control whether to use internal libtiff copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_TIFF=ON"
msgstr ""
"内部 libtiff コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_TIFF=ON より優先されます."

#: ../../source/development/building_from_source.rst:1971
msgid "TileDB"
msgstr ""

#: ../../source/development/building_from_source.rst:1973
msgid ""
"The `TileDB <https://github.com/TileDB-Inc/TileDB>` library is required "
"for the :ref:`raster.tiledb` driver. Specify install prefix in the "
"``CMAKE_PREFIX_PATH`` variable."
msgstr ""
"`TileDB <https://github.com/TileDB-Inc/TileDB>` ライブラリは, "
":ref:`raster.tiledb` ドライバに必要です. ``CMAKE_PREFIX_PATH`` "
"変数にインストールプレフィックスを指定します."

#: ../../source/development/building_from_source.rst:1976
msgid "TileDB >= 2.15 is required since GDAL 3.9"
msgstr "GDAL 3.9 以降では, TileDB >= 2.15 が必要です."

#: ../../source/development/building_from_source.rst:1980
msgid "Control whether to use TileDB. Defaults to ON when TileDB is found."
msgstr "TileDB を使用するかどうかを制御します. TileDB が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:1984
msgid "WebP"
msgstr ""

#: ../../source/development/building_from_source.rst:1986
msgid ""
"`WebP <https://github.com/webmproject/libwebp>`_ is a image compression "
"library. It is required for the :ref:`raster.webp` driver, and may be "
"used by the :ref:`raster.gpkg` and the internal libtiff library."
msgstr ""
"`WebP <https://github.com/webmproject/libwebp>`_ は, 画像圧縮ライブラリです. "
":ref:`raster.webp` ドライバに必要であり, :ref:`raster.gpkg` および内部 libtiff "
"ライブラリで使用される場合があります."

#: ../../source/development/building_from_source.rst:1992
msgid "Path to an include directory with the ``webp/encode.h`` header file."
msgstr "``webp/encode.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:2000
msgid "Control whether to use WebP. Defaults to ON when WebP is found."
msgstr "WebP を使用するかどうかを制御します. WebP が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:2004
msgid "XercesC"
msgstr ""

#: ../../source/development/building_from_source.rst:2006
msgid ""
"`Xerces-C <https://github.com/apache/xerces-c>`_ is a stream-oriented XML"
" parser library which is required to enable XML parsing capabilities in "
"the :ref:`vector.nas`, :ref:`vector.ili` and :ref:`vector.gmlas` drivers."
" It can also be used as an alternative to Expat for the GML driver."
msgstr ""
"`Xerces-C <https://github.com/apache/xerces-c>`_ は, XML パーサーライブラリであり, "
":ref:`vector.nas`, :ref:`vector.ili` および :ref:`vector.gmlas` ドライバで XML "
"パーサー機能を有効にするために必要です. GML ドライバの代替として Expat に使用することもできます."

#: ../../source/development/building_from_source.rst:2021
msgid "Control whether to use XercesC. Defaults to ON when XercesC is found."
msgstr "XercesC を使用するかどうかを制御します. XercesC が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:2025
msgid "ZLIB"
msgstr ""

#: ../../source/development/building_from_source.rst:2027
msgid ""
"`ZLib <https://github.com/madler/zlib>`_ is a compression library which "
"offers the lossless Deflate/Zip compression algorithm."
msgstr ""
"`ZLib <https://github.com/madler/zlib>`_ は, 損失のない Deflate/Zip "
"圧縮アルゴリズムを提供する圧縮ライブラリです."

#: ../../source/development/building_from_source.rst:2032
msgid "Path to an include directory with the ``zlib.h`` header file."
msgstr "``zlib.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:2036
msgid ""
"Path to a shared or static library file. A similar variable "
"``ZLIB_LIBRARY_DEBUG`` can also be specified to a similar library for "
"building Debug releases."
msgstr ""
"共有または静的ライブラリファイルへのパス. デバッグリリース用の類似のライブラリに対しても, 類似の変数 "
"``ZLIB_LIBRARY_DEBUG`` を指定できます."

#: ../../source/development/building_from_source.rst:2042
msgid ""
"Link to static external ZLIB directory. Only used if "
"GDAL_USE_ZLIB_INTERNAL=OFF and MSVC."
msgstr "静的外部 ZLIB ディレクトリへのリンク. GDAL_USE_ZLIB_INTERNAL=OFF および MSVC の場合のみ使用されます."

#: ../../source/development/building_from_source.rst:2047
msgid "Control whether to use ZLIB. Defaults to ON when ZLIB is found."
msgstr "ZLIB を使用するかどうかを制御します. ZLIB が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:2051
msgid ""
"Control whether to use internal zlib copy. Defaults depends on "
"GDAL_USE_INTERNAL_LIBS. When set to ON, has precedence over "
"GDAL_USE_ZLIB=ON"
msgstr ""
"内部 zlib コピーを使用するかどうかを制御します. デフォルトは GDAL_USE_INTERNAL_LIBS に依存します. ON "
"に設定されている場合, GDAL_USE_ZLIB=ON より優先されます."

#: ../../source/development/building_from_source.rst:2056
msgid "ZSTD"
msgstr ""

#: ../../source/development/building_from_source.rst:2058
msgid ""
"`ZSTD <https://github.com/facebook/zstd>`_ is a compression library which"
" offers the lossless ZStd compression algorithm (faster than Deflate/ZIP,"
" but incompatible with it). It is used by the internal libtiff library or"
" the :ref:`raster.zarr` driver."
msgstr ""
"`ZSTD <https://github.com/facebook/zstd>`_ は, 損失のない ZStd "
"圧縮アルゴリズムを提供する圧縮ライブラリです (Deflate/ZIP よりも高速ですが, 互換性はありません). 内部 libtiff "
"ライブラリまたは :ref:`raster.zarr` ドライバで使用されます."

#: ../../source/development/building_from_source.rst:2064
msgid "Path to an include directory with the ``zstd.h`` header file."
msgstr "``zstd.h`` ヘッダーファイルを含む include ディレクトリへのパス."

#: ../../source/development/building_from_source.rst:2072
msgid "Control whether to use ZSTD. Defaults to ON when ZSTD is found."
msgstr "ZSTD を使用するかどうかを制御します. ZSTD が見つかった場合, デフォルトは ON です."

#: ../../source/development/building_from_source.rst:2078
msgid "Selection of drivers"
msgstr "ドライバーの選択"

#: ../../source/development/building_from_source.rst:2080
msgid ""
"By default, all drivers that have their build requirements satisfied will"
" be built-in in the GDAL core library."
msgstr "デフォルトでは, ビルド要件を満たしているすべてのドライバが GDAL コアライブラリに組み込まれます."

#: ../../source/development/building_from_source.rst:2083
msgid "The following options are available to select a subset of drivers:"
msgstr "ドライバのサブセットを選択するために利用可能なオプションは次のとおりです:"

#: ../../source/development/building_from_source.rst:2089
#: ../../source/development/building_from_source.rst:2228
msgid ""
"Independently of options that control global behavior, drivers can be "
"individually enabled or disabled with those options."
msgstr "グローバルな動作を制御するオプションとは独立して, これらのオプションで個々のドライバを有効または無効にできます."

#: ../../source/development/building_from_source.rst:2094
msgid ""
"<driver_name> above and below is *generally*, but not systematically the "
"short driver name."
msgstr "上記および以下の <driver_name> は, 一般的には短いドライバ名ですが, 一貫しているわけではありません."

#: ../../source/development/building_from_source.rst:2096
msgid "Some drivers may also be grouped together for build purposes."
msgstr "ビルド目的でいくつかのドライバをグループ化することもあります."

#: ../../source/development/building_from_source.rst:2098
msgid ""
"A number of \"raw\" raster drivers (ACE2, BT, BYN, CPG, CTable2, DIPEx, "
"DOQ1, DOQ2, EHDR, EIR, ENVI, FAST, GenBIN, GSC, GTX, MFF2, ISCE, KRO, "
"MFF, LAN, LCP, LOSLAS, NDF, NTv2, PAUX, PNM, ROIPAC, RRASTER, SNODAS) are"
" controlled by the GDAL_ENABLE_DRIVER_RAW option."
msgstr ""
"いくつかの \"raw\" ラスタードライバ (ACE2, BT, BYN, CPG, CTable2, DIPEx, DOQ1, DOQ2, "
"EHDR, EIR, ENVI, FAST, GenBIN, GSC, GTX, MFF2, ISCE, KRO, MFF, LAN, LCP, "
"LOSLAS, NDF, NTv2, PAUX, PNM, ROIPAC, RRASTER, SNODAS) は, "
"GDAL_ENABLE_DRIVER_RAW オプションで制御されます."

#: ../../source/development/building_from_source.rst:2103
msgid ""
"Planetary raster formats (PDS, PDS4, ISIS2, ISIS3, VICAR) are controlled "
"by the GDAL_ENABLE_DRIVER_PDS option."
msgstr ""
"惑星ラスターフォーマット (PDS, PDS4, ISIS2, ISIS3, VICAR) は, GDAL_ENABLE_DRIVER_PDS "
"オプションで制御されます."

#: ../../source/development/building_from_source.rst:2106
msgid ""
"The AAIGRID, GRASSASCIIGRID and ISG raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_AAIGRID option."
msgstr ""
"AAIGRID, GRASSASCIIGRID, ISG ラスタードライバは, GDAL_ENABLE_DRIVER_AAIGRID "
"オプションで制御されます."

#: ../../source/development/building_from_source.rst:2108
msgid ""
"The ECW and JP2ECW raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_ECW option."
msgstr "ECW, JP2ECW ラスタードライバは, GDAL_ENABLE_DRIVER_ECW オプションで制御されます."

#: ../../source/development/building_from_source.rst:2110
msgid ""
"The vector EEDA and raster EEDAI drivers are controlled by the "
"GDAL_ENABLE_DRIVER_EEDA option."
msgstr "ベクター EEDA, ラスタ EEDAI ドライバは, GDAL_ENABLE_DRIVER_EEDA オプションで制御されます."

#: ../../source/development/building_from_source.rst:2112
msgid ""
"The GSAG, GSBG and GS7BG raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_GSG option."
msgstr "GSAG, GSBG, GS7BG ラスタードライバは, GDAL_ENABLE_DRIVER_GSG オプションで制御されます."

#: ../../source/development/building_from_source.rst:2114
msgid ""
"The HDF5 and BAG raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_HDF5 option."
msgstr "HDF5, BAG ラスタードライバは, GDAL_ENABLE_DRIVER_HDF5 オプションで制御されます."

#: ../../source/development/building_from_source.rst:2116
msgid ""
"The MrSID and JP2MrSID raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_MRSID option."
msgstr "MrSID, JP2MrSID ラスタードライバは, GDAL_ENABLE_DRIVER_MRSID オプションで制御されます."

#: ../../source/development/building_from_source.rst:2118
msgid ""
"The NITF, RPFTOC and ECRGTOC raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_NITF option."
msgstr "NITF, RPFTOC, ECRGTOC ラスタードライバは, GDAL_ENABLE_DRIVER_NITF オプションで制御されます."

#: ../../source/development/building_from_source.rst:2120
msgid ""
"The NWT_GRD and NWT_GRC raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_NORTHWOOD option."
msgstr "NWT_GRD, NWT_GRC ラスタードライバは, GDAL_ENABLE_DRIVER_NORTHWOOD オプションで制御されます."

#: ../../source/development/building_from_source.rst:2122
msgid ""
"The SRP and ADRG raster drivers are controlled by the "
"GDAL_ENABLE_DRIVER_ADRG option."
msgstr "SRP, ADRG ラスタードライバは, GDAL_ENABLE_DRIVER_ADRG オプションで制御されます."

#: ../../source/development/building_from_source.rst:2124
msgid ""
"The Interlis 1 and Interlis 2 vector drivers are controlled by the "
"GDAL_ENABLE_DRIVER_ILI option."
msgstr "Interlis 1, Interlis 2 ベクタードライバは, GDAL_ENABLE_DRIVER_ILI オプションで制御されます."

#: ../../source/development/building_from_source.rst:2126
msgid ""
"The WFS and OAPIF vector drivers are controlled by the "
"GDAL_ENABLE_DRIVER_WFS option."
msgstr "WFS, OAPIF ベクタードライバは, GDAL_ENABLE_DRIVER_WFS オプションで制御されます."

#: ../../source/development/building_from_source.rst:2128
msgid ""
"The AVCBIN and AVCE00 vector drivers are controlled by the "
"GDAL_ENABLE_DRIVER_AVC option."
msgstr "AVCBIN, AVCE00 ベクタードライバは, GDAL_ENABLE_DRIVER_AVC オプションで制御されます."

#: ../../source/development/building_from_source.rst:2130
msgid ""
"The DWG and DGNv8 vector drivers are controlled by the "
"GDAL_ENABLE_DRIVER_DWG option."
msgstr "DWG, DGNv8 ベクタードライバは, GDAL_ENABLE_DRIVER_DWG オプションで制御されます."

#: ../../source/development/building_from_source.rst:2132
msgid "There might be variations in naming, e.g. :"
msgstr "名前には変化があるかもしれません, 例:"

#: ../../source/development/building_from_source.rst:2134
msgid "the \"AIG\" raster driver is controlled by GDAL_ENABLE_DRIVER_AIGRID."
msgstr "\"AIG\" ラスタードライバは, GDAL_ENABLE_DRIVER_AIGRID オプションで制御されます."

#: ../../source/development/building_from_source.rst:2136
msgid "the \"ESAT\" raster driver is controlled by GDAL_ENABLE_DRIVER_ENVISAT."
msgstr "\"ESAT\" ラスタードライバは, GDAL_ENABLE_DRIVER_ENVISAT オプションで制御されます."

#: ../../source/development/building_from_source.rst:2138
msgid "the \"GeoRaster\" raster driver is controlled by GDAL_ENABLE_DRIVER_GEOR."
msgstr "\"GeoRaster\" ラスタードライバは, GDAL_ENABLE_DRIVER_GEOR オプションで制御されます."

#: ../../source/development/building_from_source.rst:2140
msgid "the \"RST\" raster driver is controlled by GDAL_ENABLE_DRIVER_IDRISI."
msgstr "\"RST\" ラスタードライバは, GDAL_ENABLE_DRIVER_IDRISI オプションで制御されます."

#: ../../source/development/building_from_source.rst:2142
msgid ""
"the \"ElasticSearch\" vector driver is controlled by "
"OGR_ENABLE_DRIVER_ELASTIC."
msgstr "\"ElasticSearch\" ベクタードライバは, OGR_ENABLE_DRIVER_ELASTIC オプションで制御されます."

#: ../../source/development/building_from_source.rst:2144
msgid "the \"PostgreSQL\" vector driver is controlled by OGR_ENABLE_DRIVER_PG."
msgstr "\"PostgreSQL\" ベクタードライバは, OGR_ENABLE_DRIVER_PG オプションで制御されます."

#: ../../source/development/building_from_source.rst:2146
msgid "the \"UK .NTF\" vector driver is controlled by OGR_ENABLE_DRIVER_NTF."
msgstr "\"UK .NTF\" ベクタードライバは, OGR_ENABLE_DRIVER_NTF オプションで制御されます."

#: ../../source/development/building_from_source.rst:2150
msgid ""
"Drivers that have both a raster and vector side (and are internally "
"implemented by a single GDALDriver instance) are controlled by either a "
"GDAL_ENABLE_DRIVER_<driver_name> option or a "
"OGR_ENABLE_DRIVER_<driver_name> one, but not both:"
msgstr ""
"ラスターとベクターの両方を持つドライバ (および単一の GDALDriver インスタンスで内部的に実装されている) は, "
"GDAL_ENABLE_DRIVER_<driver_name> オプションまたは OGR_ENABLE_DRIVER_<driver_name>"
" オプションのいずれかで制御されますが, 両方ではありません:"

#: ../../source/development/building_from_source.rst:2154
msgid "The CAD drivers are controlled by the OGR_ENABLE_DRIVER_CAD option."
msgstr "CAD ドライバは, OGR_ENABLE_DRIVER_CAD オプションで制御されます."

#: ../../source/development/building_from_source.rst:2155
msgid "The netCDF drivers are controlled by the GDAL_ENABLE_DRIVER_NETCDF option."
msgstr "netCDF ドライバは, GDAL_ENABLE_DRIVER_NETCDF オプションで制御されます."

#: ../../source/development/building_from_source.rst:2156
msgid "The PDF drivers are controlled by the GDAL_ENABLE_DRIVER_PDF option."
msgstr "PDF ドライバは, GDAL_ENABLE_DRIVER_PDF オプションで制御されます."

#: ../../source/development/building_from_source.rst:2157
msgid "The GPKG drivers are controlled by the OGR_ENABLE_DRIVER_GPKG option."
msgstr "GPKG ドライバは, OGR_ENABLE_DRIVER_GPKG オプションで制御されます."

#: ../../source/development/building_from_source.rst:2158
msgid "The NGW drivers are controlled by the OGR_ENABLE_DRIVER_NGW option."
msgstr "NGW ドライバは, OGR_ENABLE_DRIVER_NGW オプションで制御されます."

#: ../../source/development/building_from_source.rst:2159
msgid "The SQLite drivers are controlled by the OGR_ENABLE_DRIVER_SQLITE option."
msgstr "SQLite ドライバは, OGR_ENABLE_DRIVER_SQLITE オプションで制御されます."

#: ../../source/development/building_from_source.rst:2163
msgid ""
"The GDAL_ENABLE_DRIVER_<driver_name> and OGR_ENABLE_DRIVER_<driver_name> "
"options are only created when their required dependencies are found."
msgstr ""
"GDAL_ENABLE_DRIVER_<driver_name> および OGR_ENABLE_DRIVER_<driver_name> "
"オプションは, 必要な依存関係が見つかった場合にのみ作成されます."

#: ../../source/development/building_from_source.rst:2171
msgid ""
"Globally enable/disable all optional GDAL/raster, resp. all optional "
"OGR/vector drivers. More exactly, setting those variables to ON affect "
"the default value of the ``GDAL_ENABLE_DRIVER_<driver_name>`` or "
"``OGR_ENABLE_DRIVER_<driver_name>`` variables (when they are not yet "
"set)."
msgstr ""
"すべてのオプションの GDAL/ラスター, およびすべてのオプションの OGR/ベクタードライバをグローバルに有効または無効にします. "
"より正確には, これらの変数を ON に設定すると, ``GDAL_ENABLE_DRIVER_<driver_name>`` または "
"``OGR_ENABLE_DRIVER_<driver_name>`` 変数のデフォルト値に影響します (まだ設定されていない場合)."

#: ../../source/development/building_from_source.rst:2176
msgid ""
"This can be combined with individual activation of a subset of drivers by"
" using the ``GDAL_ENABLE_DRIVER_<driver_name>:BOOL=ON`` or "
"``OGR_ENABLE_DRIVER_<driver_name>:BOOL=ON`` variables. Note that changing"
" the value of GDAL_BUILD_OPTIONAL_DRIVERS/ OGR_BUILD_OPTIONAL_DRIVERS "
"after a first run of CMake does not change the activation of individual "
"drivers. It might be needed to pass ``-UGDAL_ENABLE_DRIVER_* "
"-UOGR_ENABLE_DRIVER_*`` to reset their state."
msgstr ""
"これは, ``GDAL_ENABLE_DRIVER_<driver_name>:BOOL=ON`` または "
"``OGR_ENABLE_DRIVER_<driver_name>:BOOL=ON`` 変数を使用して, "
"ドライバのサブセットの個別の有効化と組み合わせることができます. 最初の CMake の実行後に "
"GDAL_BUILD_OPTIONAL_DRIVERS/ OGR_BUILD_OPTIONAL_DRIVERS の値を変更しても, "
"個々のドライバの有効化は変更されません. その状態をリセットするには, ``-UGDAL_ENABLE_DRIVER_* "
"-UOGR_ENABLE_DRIVER_*`` を渡す必要があるかもしれません."

#: ../../source/development/building_from_source.rst:2185
msgid ""
"The following GDAL drivers cannot be disabled: VRT, DERIVED, GTiff, COG, "
"HFA, MEM. The following OGR drivers cannot be disabled: \"ESRI "
"Shapefile\", \"MapInfo File\", OGR_VRT, Memory, KML, GeoJSON, GeoJSONSeq,"
" ESRIJSON, TopoJSON."
msgstr ""
"次の GDAL ドライバは無効にできません: VRT, DERIVED, GTiff, COG, HFA, MEM. 次の OGR "
"ドライバは無効にできません: \"ESRI Shapefile\", \"MapInfo File\", OGR_VRT, Memory, "
"KML, GeoJSON, GeoJSONSeq, ESRIJSON, TopoJSON."

#: ../../source/development/building_from_source.rst:2190
msgid ""
"Disabling all OGR/vector drivers with -DOGR_BUILD_OPTIONAL_DRIVERS=OFF "
"may affect the ability to enable some GDAL/raster drivers that require "
"some vector drivers to be enabled (and reciprocally with some GDAL/raster"
" drivers depending on vector drivers). When such dependencies are not "
"met, a CMake error will be emitted with a hint for the way to resolve the"
" issue. It is also possible to anticipate such errors by looking at files"
" :source_file:`frmts/CMakeLists.txt` for dependencies of raster drivers "
"and :source_file:`ogr/ogrsf_frmts/CMakeLists.txt` for dependencies of "
"vector drivers."
msgstr ""
"-DOGR_BUILD_OPTIONAL_DRIVERS=OFF ですべての OGR/ベクタードライバを無効にすると, 一部の "
"GDAL/ラスタードライバを有効にするためには, 一部のベクタードライバを有効にする必要がある (およびその逆も同様です). "
"そのような依存関係が満たされていない場合, CMake エラーが発生し, 問題の解決方法についてのヒントが表示されます. また, "
"ラスタードライバの依存関係についてはファイル :source_file:`frmts/CMakeLists.txt` , "
"ベクタードライバの依存関係については :source_file:`ogr/ogrsf_frmts/CMakeLists.txt` "
"を参照することで, そのようなエラーを事前に予測することも可能です."

#: ../../source/development/building_from_source.rst:2201
msgid "Example of minimal build with the JP2OpenJPEG and SVG drivers enabled::"
msgstr "JP2OpenJPEG および SVG ドライバを有効にして最小限のビルドの例:"

#: ../../source/development/building_from_source.rst:2209
msgid "Build drivers as plugins"
msgstr "ドライバをプラグインとしてビルドする"

#: ../../source/development/building_from_source.rst:2211
msgid ""
"An important subset, but not all, drivers can be also built as plugin, "
"that is to say as standalone .dll/.so shared libraries, to be installed "
"in the ``gdalplugins`` subdirectory of the GDAL installation. This can be"
" useful in particular for drivers that depend on libraries that have a "
"license different (proprietary, copyleft, ...) from the core GDAL "
"library."
msgstr ""
"重要なサブセット, すべてではありませんが, ドライバをプラグインとしてビルドすることもできます. つまり, 独立した .dll/.so "
"共有ライブラリとしてビルドし, GDAL インストールの ``gdalplugins`` サブディレクトリにインストールします. これは, コア "
"GDAL ライブラリと異なるライセンス (プロプライエタリ, コピーレフト, ...) を持つライブラリに依存するドライバに特に有用です."

#: ../../source/development/building_from_source.rst:2217
msgid "The list of drivers that can be built as plugins can be obtained with::"
msgstr "プラグインとしてビルドできるドライバのリストは次のコマンドで取得できます:"

#: ../../source/development/building_from_source.rst:2221
msgid ""
"The following options are available to select the plugin/builtin status "
"of a driver:"
msgstr "ドライバのプラグイン/ビルトインステータスを選択するために利用可能なオプションは次のとおりです:"

#: ../../source/development/building_from_source.rst:2231
msgid ""
"Note that for the driver to be built, the corresponding base "
"``GDAL_ENABLE_DRIVER_{driver_name}:BOOL=ON`` or "
"``OGR_ENABLE_DRIVER_{driver_name}:BOOL=ON`` option must be set."
msgstr ""
"ドライバをビルドするためには, 対応する基本の ``GDAL_ENABLE_DRIVER_{driver_name}:BOOL=ON`` または "
"``OGR_ENABLE_DRIVER_{driver_name}:BOOL=ON`` オプションを設定する必要があります."

#: ../../source/development/building_from_source.rst:2237
msgid ""
"Globally enable/disable building all (plugin capable), GDAL and OGR, "
"drivers as plugins. More exactly, setting that variable to ON affects the"
" default value of the ``GDAL_ENABLE_DRIVER_<driver_name>_PLUGIN`` or "
"``OGR_ENABLE_DRIVER_<driver_name>_PLUGIN`` variables (when they are not "
"yet set)."
msgstr ""
"すべての (プラグイン対応の) GDAL および OGR ドライバをプラグインとしてビルドするかどうかをグローバルに有効または無効にします. "
"より正確には, この変数を ON に設定すると, ``GDAL_ENABLE_DRIVER_<driver_name>_PLUGIN`` または "
"``OGR_ENABLE_DRIVER_<driver_name>_PLUGIN`` 変数のデフォルト値に影響します "
"(まだ設定されていない場合)."

#: ../../source/development/building_from_source.rst:2242
msgid ""
"This can be combined with individual activation/deactivation of the "
"plugin status with the ``GDAL_ENABLE_DRIVER_{driver_name}_PLUGIN:BOOL`` "
"or ``OGR_ENABLE_DRIVER_{driver_name}_PLUGIN:BOOL`` variables. Note that "
"changing the value of GDAL_ENABLE_PLUGINS after a first run of CMake does"
" not change the activation of the plugin status of individual drivers. It"
" might be needed to pass ``-UGDAL_ENABLE_DRIVER_* -UOGR_ENABLE_DRIVER_*``"
" to reset their state."
msgstr ""
"プラグインステータスの個別の有効化/無効化と組み合わせるために, "
"``GDAL_ENABLE_DRIVER_{driver_name}_PLUGIN:BOOL`` または "
"``OGR_ENABLE_DRIVER_{driver_name}_PLUGIN:BOOL`` 変数を使用することができます. 最初の CMake"
" の実行後に GDAL_ENABLE_PLUGINS の値を変更しても, 個々のドライバのプラグインステータスの有効化は変更されません. "
"その状態をリセットするには, ``-UGDAL_ENABLE_DRIVER_* -UOGR_ENABLE_DRIVER_*`` "
"を渡す必要があるかもしれません."

#: ../../source/development/building_from_source.rst:2248
msgid ""
"Example of build with all potential drivers as plugins, except the "
"JP2OpenJPEG one::"
msgstr "JP2OpenJPEG ドライバを除くすべての潜在的なドライバをプラグインとしてビルドする例:"

#: ../../source/development/building_from_source.rst:2254
msgid ""
"There is a subtelty regarding ``GDAL_ENABLE_PLUGINS:BOOL=ON``. It only "
"controls the plugin status of plugin-capable drivers that have external "
"dependencies, that are not part of GDAL core dependencies (e.g. are "
"netCDF, HDF4, Oracle, PDF, etc.)."
msgstr ""
"``GDAL_ENABLE_PLUGINS:BOOL=ON`` に関する微妙な点があります. これは, 外部依存関係を持ち, GDAL "
"コア依存関係の一部ではない (netCDF, HDF4, Oracle, PDF など) "
"プラグイン対応のドライバのプラグインステータスのみを制御します."

#: ../../source/development/building_from_source.rst:2260
msgid ""
"Globally enable/disable building all (plugin capable), GDAL and OGR, "
"drivers as plugins, for drivers that have no external dependencies (e.g. "
"BMP, FlatGeobuf), or that have dependencies that are part of GDAL core "
"dependencies (e.g GPX). Building such drivers as plugins is generally not"
" necessary, hence the use of a different option from GDAL_ENABLE_PLUGINS."
msgstr ""
"外部依存関係を持たない (BMP, FlatGeobuf など) ドライバ, または GDAL コア依存関係の一部である (GPX など) "
"ドライバのプラグインとしてのビルドをグローバルに有効または無効にします. "
"このようなドライバをプラグインとしてビルドすることは一般的に必要ありませんので, GDAL_ENABLE_PLUGINS "
"とは異なるオプションを使用しています."

#: ../../source/development/building_from_source.rst:2266
msgid ""
"In some circumstances, it might be desirable to prevent loading of GDAL "
"plugins. This can be done with:"
msgstr "一部の状況では, GDAL プラグインの読み込みを防ぐことが望ましい場合があります. これは次のように行うことができます:"

#: ../../source/development/building_from_source.rst:2271
msgid "Set to OFF to disable loading of GDAL plugins. Default is ON."
msgstr "GDAL プラグインの読み込みを無効にするには OFF に設定します. デフォルトは ON です."

#: ../../source/development/building_from_source.rst:2275
msgid "Deferred loaded plugins"
msgstr "遅延読み込みプラグイン"

#: ../../source/development/building_from_source.rst:2277
msgid ""
"Starting with GDAL 3.9, a number of in-tree drivers, that can be built as"
" plugins, are loaded in a deferred way. This involves that some part of "
"their code, which does not depend on external libraries, is included in "
"core libgdal, whereas most of the driver code is in a separated "
"dynamically loaded library. For builds where libgdal and its plugins are "
"built in a single operation, this is fully transparent to the user."
msgstr ""
"GDAL 3.9 以降, プラグインとしてビルドできるいくつかの in-tree ドライバは, 遅延読み込みの方法で読み込まれます. これにより,"
" 外部ライブラリに依存しない一部のコードがコア libgdal に含まれ, "
"ドライバのほとんどのコードが別の動的に読み込まれるライブラリに含まれます. libgdal とそのプラグインが単一の操作でビルドされるビルドでは,"
" これはユーザにとって完全に透過的です."

#: ../../source/development/building_from_source.rst:2284
msgid ""
"When a plugin driver is known of core libgdal, but not available as a "
"plugin at runtime, GDAL will inform the user that the plugin is not "
"available, but could be installed. It is possible to give more hints on "
"how to install a plugin by setting the following option:"
msgstr ""
"プラグインドライバがコア libgdal で知られているが, 実行時にプラグインとして利用できない場合, GDAL "
"はプラグインが利用できないことをユーザに通知しますが, インストールすることができます. "
"プラグインのインストール方法についてのヒントをより詳しく指定することができます."

#: ../../source/development/building_from_source.rst:2293
msgid "Custom message to give a hint to the user how to install a missing plugin"
msgstr "欠落しているプラグインをインストールする方法をユーザに示すためのカスタムメッセージ"

#: ../../source/development/building_from_source.rst:2296
msgid "For example, if doing a build with::"
msgstr "例えば, 次のようにビルドする場合:"

#: ../../source/development/building_from_source.rst:2300
msgid ""
"and opening a Parquet file while the plugin is not installed will display"
" the following error::"
msgstr "プラグインがインストールされていない状態で Parquet ファイルを開くと, 次のエラーが表示されます:"

#: ../../source/development/building_from_source.rst:2307
msgid ""
"For more specific builds where libgdal would be first built, and then "
"plugin drivers built in later incremental builds, this approach would not"
" work, given that the core libgdal built initially would lack code needed"
" to declare the plugin(s)."
msgstr ""
"libgdal が最初にビルドされ, その後プラグインドライバが後のインクリメンタルビルドでビルドされるより具体的なビルドの場合, "
"このアプローチは機能しません. 最初にビルドされたコア libgdal には, プラグインを宣言するために必要なコードが欠落しているためです."

#: ../../source/development/building_from_source.rst:2312
msgid ""
"In that situation, the user building GDAL will need to explicitly declare"
" at initial libgdal build time that one or several plugin(s) will be "
"later built. Note that it is safe to distribute such a libgdal library, "
"even if the plugins are not always available at runtime."
msgstr ""
"そのような状況では, GDAL をビルドするユーザは, 最初の libgdal ビルド時に, 後で 1 "
"つまたは複数のプラグインがビルドされることを明示的に宣言する必要があります. プラグインが常に利用可能でない場合でも, そのような libgdal"
" ライブラリを配布することは安全です."

#: ../../source/development/building_from_source.rst:2317
#: ../../source/development/building_from_source.rst:2359
msgid "This can be done with the following option:"
msgstr "次のオプションで行うことができます:"

#: ../../source/development/building_from_source.rst:2323
msgid "Declares that a driver will be later built as a plugin."
msgstr "ドライバが後でプラグインとしてビルドされることを宣言します."

#: ../../source/development/building_from_source.rst:2325
msgid ""
"Setting this option to drivers not ready for it will lead to an explicit "
"CMake error."
msgstr "このオプションを準備ができていないドライバに設定すると, 明示的な CMake エラーが発生します."

#: ../../source/development/building_from_source.rst:2329
msgid ""
"For some drivers (ECW, HEIF, JP2KAK, JPEG, JPEGXL, KEA, LERC, MrSID, "
"MSSQLSpatial, netCDF, OpenJPEG, PDF, TileDB, WEBP), the metadata and/or "
"dataset identification code embedded on libgdal, will depend on optional "
"capabilities of the dependent library (e.g. libnetcdf for netCDF) In that"
" situation, it is desirable that the dependent library is available at "
"CMake configuration time for the core libgdal built, but disabled with "
"GDAL_USE_<driver_name>=OFF. It must of course be re-enabled later when "
"the plugin is built."
msgstr ""
"一部のドライバ (ECW, HEIF, JP2KAK, JPEG, JPEGXL, KEA, LERC, MrSID, MSSQLSpatial,"
" netCDF, OpenJPEG, PDF, TileDB, WEBP) では, libgdal "
"に埋め込まれたメタデータおよび/またはデータセット識別コードは, 依存ライブラリのオプション機能 (netCDF の場合は libnetcdf "
"など) に依存します. そのような状況では, 依存ライブラリが CMake 構成時に利用可能であることが望ましいですが, "
"GDAL_USE_<driver_name>=OFF で無効にしておく必要があります. もちろん, "
"プラグインがビルドされるときに再度有効にする必要があります."

#: ../../source/development/building_from_source.rst:2338
msgid "For example for netCDF::"
msgstr "netCDF の例:"

#: ../../source/development/building_from_source.rst:2347
msgid ""
"For other drivers, GDAL_REGISTER_DRIVER_<driver_name>_FOR_LATER_PLUGIN / "
"OGR_REGISTER_DRIVER_<driver_name>_FOR_LATER_PLUGIN can be declared at "
"libgdal build time without requiring the dependent libraries needed to "
"build the plugin later to be available."
msgstr ""
"他のドライバの場合, GDAL_REGISTER_DRIVER_<driver_name>_FOR_LATER_PLUGIN / "
"OGR_REGISTER_DRIVER_<driver_name>_FOR_LATER_PLUGIN を libgdal "
"ビルド時に宣言することができます. 後でプラグインをビルドするために必要な依存ライブラリが利用可能である必要はありません."

#: ../../source/development/building_from_source.rst:2353
msgid "Out-of-tree deferred loaded plugins"
msgstr "アウトオブツリー遅延読み込みプラグイン"

#: ../../source/development/building_from_source.rst:2355
msgid ""
"Out-of-tree drivers can also benefit from the deferred loading "
"capability, provided libgdal is built with CMake variable(s) pointing to "
"external code containing the code for registering a proxy driver."
msgstr ""
"アウトオブツリードライバも, プロキシドライバを登録するコードを含む外部コードを指す CMake 変数を使用して libgdal "
"がビルドされている場合, 遅延読み込み機能を利用できます."

#: ../../source/development/building_from_source.rst:2363
msgid ""
"The pointed file must declare a ``void "
"DeclareDeferred<driver_name>(void)`` method with C linkage that takes "
"care of creating a GDALPluginDriverProxy instance and calling "
":cpp:func:`GDALDriverManager::DeclareDeferredPluginDriver` on it."
msgstr ""
"指定されたファイルは, ``void DeclareDeferred<driver_name>(void)`` という C "
"リンケージを持つメソッドを宣言する必要があります. このメソッドは, GDALPluginDriverProxy インスタンスを作成し, その上で"
" :cpp:func:`GDALDriverManager::DeclareDeferredPluginDriver` を呼び出します."

#: ../../source/development/building_from_source.rst:2370
msgid "Python bindings options"
msgstr "Python バインディングオプション"

#: ../../source/development/building_from_source.rst:2374
msgid ""
"Whether Python bindings should be built. It is ON by default, but only "
"effective if a Python installation is found."
msgstr "Python バインディングをビルドするかどうか. デフォルトでは ON ですが, Python インストールが見つかった場合のみ有効です."

#: ../../source/development/building_from_source.rst:2377
msgid ""
"A nominal Python installation should comprise the Python runtime (>= 3.6)"
" and the setuptools module. numpy and its header and development library "
"are also strongly recommended."
msgstr ""
"通常の Python インストールには, Python ランタイム (>= 3.6) と setuptools モジュールが含まれるべきです. "
"numpy およびそのヘッダーおよび開発ライブラリの存在も強く推奨されます."

#: ../../source/development/building_from_source.rst:2381
msgid ""
"The Python installation is normally found if found in the path or "
"registered through other standard installation mechanisms of the Python "
"installers. It is also possible to specify it using several variables, as"
" detailed in https://cmake.org/cmake/help/git-"
"stage/module/FindPython.html"
msgstr ""
"Python インストールは通常, パス内に見つかるか, Python インストーラの他の標準的なインストールメカニズムを通じて登録されます. "
"また, https://cmake.org/cmake/help/git-stage/module/FindPython.html "
"で詳細に説明されているように, いくつかの変数を使用して指定することもできます."

#: ../../source/development/building_from_source.rst:2386
msgid "GDAL also provides the following option:"
msgstr "GDAL は以下のオプションも提供しています:"

#: ../../source/development/building_from_source.rst:2390
msgid ""
"When it is specified, Python_FIND_STRATEGY=VERSION is assumed. Note that "
"the patch number must be provided, as the EXACT strategy is used"
msgstr ""
"指定された場合, Python_FIND_STRATEGY=VERSION が想定されます. "
"パッチ番号を提供する必要があることに注意してください, EXACT 戦略が使用されます."

#: ../../source/development/building_from_source.rst:2393
msgid "Other useful options:"
msgstr "その他の便利なオプション:"

#: ../../source/development/building_from_source.rst:2397
msgid "Specify 'ONLY' to use virtualenv activated."
msgstr "アクティブ化ている仮想環境を利用するために'ONLY' を指定できます."

#: ../../source/development/building_from_source.rst:2401
msgid "Specify Python installation prefix."
msgstr "Python インストールプレフィックスを指定します."

#: ../../source/development/building_from_source.rst:2403
msgid "Examples::"
msgstr "例::"

#: ../../source/development/building_from_source.rst:2410
msgid ""
"The following options are advanced ones and only taken into account "
"during the ``install`` CMake target."
msgstr "以下のオプションは高度なものであり, ``install`` CMake ターゲットの実行中のみ考慮されます."

#: ../../source/development/building_from_source.rst:2415
msgid ""
"This option can be specified to a directory name, to override the "
"``CMAKE_INSTALL_PREFIX`` option. It is used to set the value of the "
"``--prefix`` option of ``python3 setup.py install``."
msgstr ""
"このオプションはディレクトリ名を指定して, ``CMAKE_INSTALL_PREFIX`` オプションを上書きすることができます. これは, "
"``python3 setup.py install`` の ``--prefix`` オプションの値を設定するために使用されます."

#: ../../source/development/building_from_source.rst:2421
msgid ""
"This option can be specified to set the value of the ``--install-layout``"
" option of ``python3 setup.py install``. The install layout is by default"
" set to ``deb`` when it is detected that the Python installation looks "
"for the ``site-packages`` subdirectory. Otherwise it is unspecified."
msgstr ""
"このオプションは, ``python3 setup.py install`` の ``--install-layout`` "
"オプションの値を設定するために指定できます. Python インストールが ``site-packages`` "
"サブディレクトリを探しているように見える場合, インストールレイアウトはデフォルトで ``deb`` に設定されます. "
"それ以外の場合は未指定です."

#: ../../source/development/building_from_source.rst:2428
msgid ""
"This option can be specified to set the value of the ``--install-lib`` "
"option of ``python3 setup.py install``. It is only taken into account on "
"MacOS systems, when the Python installation is a framework."
msgstr ""
"このオプションは, ``python3 setup.py install`` の ``--install-lib`` "
"オプションの値を設定するために指定できます. Python インストールがフレームワークである場合, これは MacOS "
"システムでのみ考慮されます."

#: ../../source/development/building_from_source.rst:2434
msgid ""
"The Python bindings are made of several modules (osgeo.gdal, osgeo.ogr, "
"etc.) which link each against libgdal. Consequently, a static build of "
"libgdal is not compatible with the bindings."
msgstr ""
"Python バインディングは, libgdal にリンクされるいくつかのモジュール (osgeo.gdal, osgeo.ogr など) "
"で構成されています. そのため, libgdal の静的ビルドはバインディングと互換性がありません."

#: ../../source/development/building_from_source.rst:2441
msgid "Java bindings options"
msgstr "Java バインディングオプション"

#: ../../source/development/building_from_source.rst:2445
msgid ""
"Whether Java bindings should be built. It is ON by default, but only "
"effective if Java runtime and development packages are found. The "
"relevant options that can be set are described in "
"https://cmake.org/cmake/help/latest/module/FindJava.html and "
"https://cmake.org/cmake/help/latest/module/FindJNI.html. The ``ant`` "
"binary must also be available in the PATH."
msgstr ""
"Java バインディングをビルドするかどうか. デフォルトでは ON ですが, Java "
"ランタイムおよび開発パッケージが見つかった場合のみ有効です. 設定できる関連するオプションについては, "
"https://cmake.org/cmake/help/latest/module/FindJava.html および "
"https://cmake.org/cmake/help/latest/module/FindJNI.html で説明されています. "
"``ant`` バイナリも PATH に利用可能である必要があります."

#: ../../source/development/building_from_source.rst:2454
msgid ""
"Subdirectory into which to install the :file:`gdal.jar` file. It defaults"
" to \"${CMAKE_INSTALL_DATADIR}/java\""
msgstr ""
":file:`gdal.jar` ファイルをインストールするサブディレクトリ. デフォルトは "
"\"${CMAKE_INSTALL_DATADIR}/java\" です."

#: ../../source/development/building_from_source.rst:2458
msgid ""
"Prior to GDAL 3.8, the gdalalljni library was also installed in that "
"directory. Starting with GDAL 3.8, this is controlled by the "
"``GDAL_JAVA_JNI_INSTALL_DIR`` variable."
msgstr ""
"GDAL 3.8 以前, gdalalljni ライブラリもそのディレクトリにインストールされていました. GDAL 3.8 以降, これは "
"``GDAL_JAVA_JNI_INSTALL_DIR`` 変数で制御されます."

#: ../../source/development/building_from_source.rst:2466
msgid ""
"Subdirectory into which to install the :file:`libgdalalljni.so` / "
":file:`libgdalalljni.dylib` / :file:`gdalalljni.dll` library. It defaults"
" to \"${CMAKE_INSTALL_LIBDIR}/jni\"."
msgstr ""
":file:`libgdalalljni.so` / :file:`libgdalalljni.dylib` / "
":file:`gdalalljni.dll` ライブラリをインストールするサブディレクトリ. デフォルトは "
"\"${CMAKE_INSTALL_LIBDIR}/jni\" です."

#: ../../source/development/building_from_source.rst:2471
msgid ""
"Prior to GDAL 3.8, the gdalalljni library was installed in the directory "
"controlled by the ``GDAL_JAVA_INSTALL_DIR`` variable."
msgstr ""
"GDAL 3.8 以前, gdalalljni ライブラリは ``GDAL_JAVA_INSTALL_DIR`` "
"変数で制御されるディレクトリにインストールされていました."

#: ../../source/development/building_from_source.rst:2477
msgid ""
"The Java bindings are made of several modules (org.osgeo.gdal, "
"org.osgeo.ogr, etc.) which link each against libgdal. Consequently, a "
"static build of libgdal is not compatible with the bindings."
msgstr ""
"Java バインディングは, libgdal にリンクされるいくつかのモジュール (org.osgeo.gdal, org.osgeo.ogr "
"など) で構成されています. そのため, libgdal の静的ビルドはバインディングと互換性がありません."

#: ../../source/development/building_from_source.rst:2481
msgid "Option only to be used by maintainers:"
msgstr "メンテナンス担当者のみが使用するオプション:"

#: ../../source/development/building_from_source.rst:2485
msgid "GPG key to sign build artifacts. Needed to generate bundle.jar."
msgstr "ビルドアーティファクトに署名するための GPG キー. bundle.jar を生成するために必要です."

#: ../../source/development/building_from_source.rst:2489
msgid "GPG pass phrase to sign build artifacts."
msgstr "ビルドアーティファクトに署名するための GPG パスフレーズ."

#: ../../source/development/building_from_source.rst:2492
msgid "C# bindings options"
msgstr "C# バインディングオプション"

#: ../../source/development/building_from_source.rst:2494
msgid ""
"For more details on how to build and use the C# bindings read the "
"dedicated section :ref:`csharp_compile_cmake`."
msgstr ""
"C# バインディングのビルドおよび使用方法の詳細については, 専用のセクション :ref:`csharp_compile_cmake` "
"を参照してください."

#: ../../source/development/building_from_source.rst:2498
msgid ""
"Whether C# bindings should be built. It is ON by default, but only "
"effective if C# runtime and development packages are found. Either .NET "
"SDK can be used or Mono. The relevant options that can be set are "
"described in ``cmake/modules/thirdparty/FindDotNetFrameworkSdk.cmake`` "
"and ``cmake/modules/thirdparty/FindMono.cmake``."
msgstr ""
"C# バインディングをビルドするかどうか. デフォルトでは ON ですが, C# "
"ランタイムおよび開発パッケージが見つかった場合のみ有効です..NET SDK または Mono のいずれかを使用できます. "
"設定できる関連するオプションについては, "
"``cmake/modules/thirdparty/FindDotNetFrameworkSdk.cmake`` および "
"``cmake/modules/thirdparty/FindMono.cmake`` で説明されています."

#: ../../source/development/building_from_source.rst:2506
msgid "Forces the use of Mono as opposed to .NET to compile the C# bindings."
msgstr "C# バインディングをコンパイルするために .NET ではなく Mono を使用するように強制します."

#: ../../source/development/building_from_source.rst:2510
msgid ""
"Sets the .NET (or Mono) target SDK to be used when compiling the C# "
"binding libraries. `List of acceptable contents for .NET "
"<https://docs.microsoft.com/en-us/dotnet/standard/frameworks#supported-"
"target-frameworks>`_"
msgstr ""
"C# バインディングライブラリをコンパイルする際に使用する .NET (または Mono) ターゲット SDK を設定します. `List of "
"acceptable contents for .NET <https://docs.microsoft.com/en-"
"us/dotnet/standard/frameworks#supported-target-frameworks>`_ "

#: ../../source/development/building_from_source.rst:2514
msgid ""
"Sets the .NET (or Mono) target SDK to be used when compiling the C# "
"sample applications. `List of acceptable contents for .NET "
"<https://docs.microsoft.com/en-us/dotnet/standard/frameworks#supported-"
"target-frameworks>`_"
msgstr ""
"C# サンプルアプリケーションをコンパイルする際に使用する .NET (または Mono) ターゲット SDK を設定します. `List of "
"acceptable contents for .NET <https://docs.microsoft.com/en-"
"us/dotnet/standard/frameworks#supported-target-frameworks>`_ "

#: ../../source/development/building_from_source.rst:2518
msgid ""
"Build the C# bindings without building GDAL. This should be used when "
"building the bindings on top of an existing GDAL installation - for "
"instance on top of the CONDA package."
msgstr ""
"GDAL をビルドせずに C# バインディングをビルドします. これは既存の GDAL "
"インストールの上にバインディングをビルドするときに使用する必要があります. たとえば, CONDA "
"パッケージの上にバインディングをビルドするような場合に利用します."

#: ../../source/development/building_from_source.rst:2522
msgid ""
"The C# bindings are made of several modules (OSGeo.GDAL, OSGeo.OGR, etc.)"
" which link each against libgdal. Consequently, a static build of libgdal"
" is not compatible with the bindings."
msgstr ""
"C# バインディングは, libgdal にリンクされるいくつかのモジュール (OSGeo.GDAL, OSGeo.OGR など) "
"で構成されています. そのため, libgdal の静的ビルドはバインディングと互換性がありません."

#: ../../source/development/building_from_source.rst:2527
msgid "Driver specific options"
msgstr "ドライバ固有のオプション"

#: ../../source/development/building_from_source.rst:2531
msgid ""
"The :ref:`raster.msg` driver is built only if this option is set to ON "
"(default is OFF). Its effect is to download the "
"https://gitlab.eumetsat.int/open-source/PublicDecompWT.git repository "
"(requires the ``git`` binary to be available at configuration time) into "
"the build tree and build the needed files from it into the driver."
msgstr ""
":ref:`raster.msg` ドライバは, このオプションが ON に設定されている場合のみビルドされます (デフォルトは OFF です)."
" その効果は, ビルドツリーに https://gitlab.eumetsat.int/open-"
"source/PublicDecompWT.git リポジトリをダウンロードし (構成時に ``git`` "
"バイナリが利用可能である必要があります), その中から必要なファイルをドライバにビルドすることです."

#: ../../source/development/building_from_source.rst:2538
msgid "Cross-compiling for Android"
msgstr "Android 用のクロスコンパイル"

#: ../../source/development/building_from_source.rst:2540
msgid ""
"First refer to https://cmake.org/cmake/help/latest/manual/cmake-"
"toolchains.7.html#cross-compiling-for-android and to "
":source_file:`.github/workflows/android_cmake/start.sh` for an example of"
" a build script to cross-compile from Ubuntu."
msgstr ""
"最初に https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html"
"#cross-compiling-for-android "
"と:source_file:`.github/workflows/android_cmake/start.sh` を参照して, Ubuntu "
"からクロスコンパイルするビルドスクリプトの例を確認してください."

#: ../../source/development/building_from_source.rst:2546
msgid "Typical build issues"
msgstr "典型的なビルドの問題"

#: ../../source/development/building_from_source.rst:2549
msgid "How do I get PROJ ?"
msgstr "PROJ はどこで入手できますか ?"

#: ../../source/development/building_from_source.rst:2551
msgid ""
"PROJ is the only required build-time dependency of GDAL that is not "
"vendorized in the GDAL source code tree. Consequently, the PROJ header "
"and library must be available when configuring GDAL's CMake. Consult "
"`PROJ installation <https://proj.org/install.html>`__."
msgstr ""
"PROJ は, GDAL のソースコードツリーにベンダー化されていない GDAL のビルド時依存関係です. そのため, GDAL の CMake "
"を構成するときに PROJ ヘッダーとライブラリが利用可能である必要があります.`PROJ インストール "
"<https://proj.org/install.html>`__ を参照してください."

#: ../../source/development/building_from_source.rst:2556
msgid "Conflicting PROJ libraries"
msgstr "PROJ ライブラリの競合"

#: ../../source/development/building_from_source.rst:2558
msgid ""
"If using a custom PROJ build (that is a PROJ build that does not come "
"from a distribution channel), it can sometimes happen that this custom "
"PROJ build conflicts with packaged dependencies, such as spatialite or "
"libgeotiff, that themselves link to another copy of PROJ."
msgstr ""
"カスタム PROJ ビルド (つまり, 配布チャンネルから来ていない PROJ ビルド) を使用している場合, これが他のパッケージ依存関係 "
"(たとえば spatialite や libgeotiff など) と競合することがあります. これらのパッケージ依存関係は, 別の PROJ "
"のコピーにリンクしています."

#: ../../source/development/building_from_source.rst:2563
msgid ""
"The clean way to solve this is to rebuild from sources those other "
"libraries against the custom PROJ build. For Linux based systems, given "
"that C API/ABI has been preserved in the PROJ 6, 7, 8, 9 series, if the "
"custom PROJ build is more recent than the PROJ used by those other "
"libraries, doing aliases of the older ``libproj.so.XX`` name to the newer"
" ``libproj.so.YY`` (with ``ln -s``) should work, although it is "
"definitely not recommended to use this solution in a production "
"environment."
msgstr ""
"これを解決するためのクリーンな方法は, 他のライブラリをカスタム PROJ ビルドに対してソースから再ビルドすることです. Linux "
"ベースのシステムの場合, PROJ 6, 7, 8, 9 シリーズで C API/ABI が保持されているため, カスタム PROJ "
"ビルドが他のライブラリで使用されている PROJ よりも新しい場合, 古い ``libproj.so.XX`` 名を新しい "
"``libproj.so.YY`` にエイリアスすること (``ln -s`` を使用) ができます. ただし, "
"本番環境でこの解決策を使用することは絶対に推奨されません."

#: ../../source/development/building_from_source.rst:2571
msgid ""
"In any case, if ``ldd libgdal.so | grep libproj`` reports more than one "
"line, crashes will occur at runtime (often at process termination with a "
"``malloc_consolidate(): invalid chunk size`` and/or ``Aborted (core "
"dumped)`` error message)"
msgstr ""
"いずれの場合でも, ``ldd libgdal.so | grep libproj`` が複数の行を報告する場合, 実行時にクラッシュが発生します"
" (多くの場合, プロセス終了時に ``malloc_consolidate(): invalid chunk size`` および/または "
"``Aborted (core dumped)`` エラーメッセージが表示されます)"

#: ../../source/development/building_from_source.rst:2577
msgid "Autoconf/nmake (GDAL versions < 3.5.0)"
msgstr "Autoconf/nmake (GDAL バージョン < 3.5.0)"

#: ../../source/development/building_from_source.rst:2579
#, fuzzy
msgid ""
"See http://web.archive.org/https://trac.osgeo.org/gdal/wiki/BuildHints "
"for hints for GDAL < 3.5 autoconf and nmake build systems."
msgstr ""
"GDAL < 3.5 の autoconf および nmake ビルドシステムのヒントについては, "
"https://trac.osgeo.org/gdal/wiki/BuildHints を参照してください."

#~ msgid ""
#~ "`libOpenDRIVE <https://github.com/pageldev/libOpenDRIVE>`_ "
#~ "is required for the :ref:`vector.xodr` "
#~ "driver."
#~ msgstr ""

