# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-09 02:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/drivers/raster/vrt.rst:5
msgid "VRT -- GDAL Virtual Format"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:-1
msgid "Driver short name"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:7
msgid "VRT"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:12
msgid "Introduction"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:14
msgid ""
"The VRT driver is a format driver for GDAL that allows a virtual GDAL "
"dataset to be composed from other GDAL datasets with repositioning, and "
"algorithms potentially applied as well as various kinds of metadata "
"altered or added. VRT descriptions of datasets can be saved in an XML "
"format normally given the extension .vrt."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:20
msgid "Note .vrt files starting with"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:22
msgid "<OGRVRTDataSource> open with :ref:`ogrinfo`, etc."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:23
msgid "<VRTDataset> open with :ref:`gdalinfo`, etc."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:25
msgid ""
"The VRT format can also describe :ref:`gdal_vrttut_warped` and "
":ref:`gdal_vrttut_pansharpen`"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:28
msgid ""
"For mosaic with a very large number of tiles (tens of thousands or "
"mores), the :ref:`GTI <raster.gti>` driver may be used starting with GDAL"
" 3.9."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:31
msgid ""
"An example of a simple .vrt file referring to a 512x512 dataset with one "
"band loaded from :file:`utm.tif` might look like this:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:49
msgid ""
"Many aspects of the VRT file are a direct XML encoding of the "
":ref:`raster_data_model` which should be reviewed for understanding of "
"the semantics of various elements."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:53
msgid ""
"VRT files can be produced by translating to VRT format.  The resulting "
"file can then be edited to modify mappings, add metadata or other "
"purposes.  VRT files can also be produced programmatically by various "
"means."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:57
msgid ""
"This tutorial will cover the .vrt file format (suitable for users editing"
" .vrt files), and how .vrt files may be created and manipulated "
"programmatically for developers."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:64
msgid "Creation options"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:66
msgid "|about-creation-options| The following creation options are supported:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:79
msgid ""
"Setting explicitly the block size is an advanced setting that should only"
" be used when the user has determined that it is needed. By default the "
"block size is set to:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:83
msgid ""
"128x128 for a source-based VRT raster band. Unless the VRT is made of a "
"single source and this single source is not subsetted, in which case the "
"block size of the unique source will be set as the VRT raster band block "
"size)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:87
msgid "512x128 for a warped VRT."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:90
msgid ".vrt Format"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:92
msgid ""
"A `XML schema of the GDAL VRT format "
"<https://raw.githubusercontent.com/OSGeo/gdal/master/frmts/vrt/data/gdalvrt.xsd>`_"
" is available."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:95
msgid ""
"Note, .vrt files starting with - <OGRVRTDataSource> open with ogrinfo, "
"etc. - <VRTDataset> open with gdalinfo, etc."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:99
msgid ""
"Virtual files stored on disk are kept in an XML format with the following"
" elements."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:102
msgid ""
"**VRTDataset**: This is the root element for the whole GDAL dataset. It "
"must have the attributes rasterXSize and rasterYSize describing the width"
" and height of the dataset in pixels. It may have a subClass attributes "
"with values VRTWarpedDataset (:ref:`gdal_vrttut_warped`) or "
"VRTPansharpenedDataset (:ref:`gdal_vrttut_pansharpen`). It may have SRS, "
"GeoTransform, GCPList, Metadata, MaskBand and VRTRasterBand subelements."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:109
msgid "VRTDataset"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:111
msgid "The allowed subelements for VRTDataset are :"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:113
msgid ""
"**SRS**: This element contains the spatial reference system (coordinate "
"system) in OGC WKT format.  Note that this must be appropriately escaped "
"for XML, so items like quotes will have the ampersand escape sequences "
"substituted. As well as WKT, valid input to the "
":cpp:func:`OGRSpatialReference::SetFromUserInput` method (such as well "
"known GEOGCS names, and PROJ.4 format) is also allowed in the SRS "
"element."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:119
msgid ""
"The **dataAxisToSRSAxisMapping** attribute is allowed since GDAL 3.0 to "
"describe the relationship between the axis indicated in the CRS "
"definition and the axis of the GeoTransform or GCP metadata. The value of"
" the attribute is a comma separated list of integers. The number of "
"elements of this list must be the number of axis of the CRS. Values start"
" at 1. If m denotes the array values of this attribute, then m[0] is the "
"data axis number for the first axis of the CRS. If the attribute is "
"missing, then the OAMS_TRADITIONAL_GIS_ORDER data axis to CRS axis "
"mapping strategy is implied."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:121
msgid ""
"**GeoTransform**: This element contains a six value affine "
"geotransformation for the dataset, mapping between pixel/line coordinates"
" and georeferenced coordinates. Typically (geotransform[0], "
"geotransform[3]) will be the (easting, northing) of the upper-left corner"
" of the raster, geotransform[1] the horizontal resolution in geospatial "
"coordinates/pixel, and geotransform[5] the vertical resolution in "
"geospatial coordinates/pixel, as a negative value if the image is north-"
"up oriented. See :ref:`raster_data_model_geotransform` for more details "
"about that mapping."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:127
msgid ""
"**GCPList**: This element contains a list of Ground Control Points for "
"the dataset, mapping between pixel/line coordinates and georeferenced "
"coordinates. The Projection attribute should contain the SRS of the "
"georeferenced coordinates in the same format as the SRS element. The "
"dataAxisToSRSAxisMapping attribute is the same as in the SRS element."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:136
msgid ""
"**Metadata**: This element contains a list of metadata name/value pairs "
"associated with the VRTDataset as a whole, or a VRTRasterBand. It has "
"<MDI> (metadata item) subelements which have a \"key\" attribute and the "
"value as the data of the element. The Metadata element can be repeated "
"multiple times, in which case it must be accompanied with a \"domain\" "
"attribute to indicate the name of the metadata domain."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:144
msgid ""
"**MaskBand**: This element represents a mask band that is shared between "
"all bands on the dataset (see GMF_PER_DATASET in RFC 15). It must contain"
" a single VRTRasterBand child element, that is the description of the "
"mask band itself."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:159
msgid ""
"**OverviewList**: (GDAL >= 3.2.0, not valid for VRTPansharpenedDataset) "
"This elements contains a list of overview factors, separated by space, to"
" create \"virtual overviews\". For example ``2 4``. It can be used so "
"that bands of the VRT datasets declare overviews. This only makes sense "
"to use if the sources added in those bands have themselves overviews "
"compatible with the declared factor. It is generally not necessary to use"
" this mechanism, since downsampling pixel requests on a VRT dataset/band "
"are able to use overviews of the sources, even when the VRT bands do not "
"declare them. One situation where explicit overviews are needed at the "
"VRT level is the warping of a VRT to a lower resolution. This element can"
" also be used with an existing VRT dataset by running "
":cpp:func:`GDALDataset::BuildOverviews` or :program:`gdaladdo` with the "
":config:`VRT_VIRTUAL_OVERVIEWS` configuration option set to ``YES``:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:177
msgid ""
"Virtual overviews have the least priority compared to the **Overview** "
"element at the **VRTRasterBand** level, or to materialized .vrt.ovr "
"files."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:181
msgid "**VRTRasterBand**: This represents one band of a dataset."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:184
msgid "VRTRasterBand"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:186
msgid "The attributes for VRTRasterBand are:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:188
msgid ""
"**dataType** (optional): type of the pixel data associated with this band"
" (use names Byte, UInt16, Int16, UInt32, Int32, Float32, Float64, CInt16,"
" CInt32, CFloat32 or CFloat64). If not specified, defaults to 1"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:192
msgid "**band** (optional): band number this element represents (1 based)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:194
msgid ""
"**blockXSize** (optional, GDAL >= 3.3): block width. If not specified, "
"defaults to the minimum of the raster width and 128."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:197
msgid ""
"**blockYSize** (optional, GDAL >= 3.3): block height. If not specified, "
"defaults to the minimum of the raster height and 128."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:200
msgid ""
"This element may have Metadata, ColorInterp, NoDataValue, "
"HideNoDataValue, ColorTable, GDALRasterAttributeTable, Description and "
"MaskBand subelements as well as the various kinds of source elements such"
" as SimpleSource, ComplexSource, AveragedSource, NoDataFromMaskSource, "
"KernelFilteredSource and ArraySource.  A raster band may have many "
"\"sources\" indicating where the actual raster data should be fetched "
"from, and how it should be mapped into the raster bands pixel space."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:202
msgid "The allowed subelements for VRTRasterBand are :"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:204
msgid ""
"**ColorInterp**: The data of this element should be the name of a color "
"interpretation type.  One of Gray, Palette, Red, Green, Blue, Alpha, Hue,"
" Saturation, Lightness, Cyan, Magenta, Yellow, Black, or Unknown."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:210
msgid ""
"**NoDataValue**: If the input datasets to be composed have a nodata value"
" for this raster band, set this element's value to that nodata value for "
"it to be reflected in the VRT. This must not be confused with the NODATA "
"element of a VRTComplexSource element."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:216
msgid ""
"**HideNoDataValue**: If this value is 1, the nodata value will not be "
"reported.  Essentially, the caller will not be aware of a nodata pixel "
"when it reads one.  Any datasets copied/translated from this will not "
"have a nodata value.  This is useful when you want to specify a fixed "
"background value for the dataset.  The background will be the value "
"specified by the NoDataValue element. Default value is 0 when this "
"element is absent."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:222
msgid ""
"**ColorTable**: This element is parent to a set of Entry elements "
"defining the entries in a color table.  Currently only RGBA color tables "
"are supported with c1 being red, c2 being green, c3 being blue and c4 "
"being alpha.  The entries are ordered and will be assumed to start from "
"color table entry 0."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:231
msgid ""
"**GDALRasterAttributeTable**: (GDAL >=2.3) This element is parent to a "
"set of FieldDefn elements defining the columns of a raster attribute "
"table, followed by a set of Row elements defining the values of the "
"columns of each row."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:270
msgid ""
"**Description**: This element contains the optional description of a "
"raster band as its text value."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:276
msgid ""
"**UnitType**: This optional element contains the vertical units for "
"elevation band data.  One of \"m\" for meters or \"ft\" for feet. Default"
" assumption is meters."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:282
msgid ""
"**Offset**: This optional element contains the offset that should be "
"applied when computing \"real\" pixel values from scaled pixel values on "
"a raster band.   The default is 0.0."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:288
msgid ""
"**Scale**: This optional element contains the scale that should be "
"applied when computing \"real\" pixel values from scaled pixel values on "
"a raster band.   The default is 1.0."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:294
msgid ""
"**Overview**: This optional element describes one overview level for the "
"band.  It should have a child SourceFilename and SourceBand element.  The"
" SourceFilename may have a relativeToVRT boolean attribute.  Multiple "
"elements may be used to describe multiple overviews."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:303
msgid ""
"**CategoryNames**: This optional element contains a list of Category "
"subelements with the names of the categories for classified raster band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:315
msgid ""
"**SimpleSource**: The SimpleSource_ indicates that raster data should be "
"read from a separate dataset, indicating the dataset, and band to be read"
" from, and how the data should map into this band's raster space."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:317
msgid ""
"**AveragedSource**: The AveragedSource is derived from the SimpleSource "
"and shares the same properties except that it uses an averaging "
"resampling instead of a nearest neighbour algorithm as in SimpleSource, "
"when the size of the destination rectangle is not the same as the size of"
" the source rectangle. Note: a more general mechanism to specify "
"resampling algorithms can be used. See above paragraph about the "
"'resampling' attribute."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:319
msgid ""
"**NoDataFromMaskSource**: (GDAL >= 3.9) The NoDataFromMaskSource is "
"derived from the SimpleSource and shares the same properties except that "
"it replaces the value of the source with the value of the NODATA child "
"element when the value of the mask band of the source is less or equal to"
" the MaskValueThreshold child element. This is typically used to "
"transform a R,G,B,A image into a R,G,B one with a NoData value."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:321
msgid ""
"**ComplexSource**: The ComplexSource_ is derived from the SimpleSource "
"(so it shares the SourceFilename, SourceBand, SrcRect and DstRect "
"elements), but it provides support to rescale and offset the range of the"
" source values. Certain regions of the source can be masked by specifying"
" the NODATA value, or starting with GDAL 3.3, with the "
"<UseMaskBand>true</UseMaskBand> element."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:323
msgid ""
"**KernelFilteredSource**: The KernelFilteredSource_ is a pixel source "
"derived from the Simple Source (so it shares the SourceFilename, "
"SourceBand, SrcRect and DstRect elements, but it also passes the data "
"through a simple filtering kernel specified with the Kernel element."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:325
msgid ""
"**ArraySource**: The ArraySource_ indicates that raster data should be "
"read from a 2D array using the multidimensional API."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:327
msgid ""
"**MaskBand**: This element represents a mask band that is specific to the"
" VRTRasterBand it contains. It must contain a single VRTRasterBand child "
"element, that is the description of the mask band itself."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:330
msgid "Sources"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:333
msgid "SimpleSource"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:335
msgid ""
"The SimpleSource may have the SourceFilename, SourceBand, SrcRect, and "
"DstRect subelements.  The SrcRect element will indicate what rectangle on"
" the indicated source file should be read, and the DstRect element "
"indicates how that rectangle of source data should be mapped into the "
"VRTRasterBands space."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:340
msgid ""
"SrcRect and DstRect are expressed in pixel/line coordinate space. Their "
"relationship with the geospatial coordinate space is given by the "
"geotransform matrix of the source for SrcRect, and of the VRT itself "
"(**GeoTransform** element) for DstRect. See "
":ref:`raster_data_model_geotransform` for more details about that "
"mapping."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:346
msgid ""
"The relativeToVRT attribute on the SourceFilename indicates whether the "
"filename should be interpreted as relative to the .vrt file (value is 1) "
"or not relative to the .vrt file (value is 0).  The default is 0."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:350
msgid ""
"Some characteristics of the source band can be specified in the optional "
"``SourceProperties`` element to enable the VRT driver to defer the "
"opening of the source dataset until it really needs to read data from it."
" This is particularly useful when building VRTs with a big number of "
"source datasets. The needed parameters are the raster dimensions, the "
"size of the blocks and the data type. If the SourceProperties tag is not "
"present, the source dataset will be opened at the same time as the VRT "
"itself."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:359
msgid ""
"Starting with GDAL 3.4, the ``SourceProperties`` element is no longer "
"necessary for deferred opening of the source datasets."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:362
msgid ""
"The content of the SourceBand subelement can refer to a mask band. For "
"example mask,1 means the mask band of the first band of the source."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:375
msgid ""
"A OpenOptions subelement can be added to specify the open options to "
"apply when opening the source dataset. It has <OOI> (open option item) "
"subelements which have a \"key\" attribute and the value as the data of "
"the element."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:392
msgid ""
"A resampling attribute can be specified on a SimpleSource or "
"ComplexSource element to specified the resampling algorithm used when the"
" size of the destination rectangle is not the same as the size of the "
"source rectangle. The values allowed for that attribute are : "
"nearest,bilinear,cubic, cubicspline,lanczos,average,mode."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:409
msgid ""
"Starting with GDAL 3.11, it is also possible to use a in-line VRTDataset "
"as the source by using the VRTDataset element instead of SourceFilename."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:434
msgid "ComplexSource"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:436
msgid ""
"Alternatively to linear scaling, non-linear scaling using a power "
"function can be used by specifying the Exponent, SrcMin, SrcMax, DstMin "
"and DstMax elements. If SrcMin and SrcMax are not specified, they are "
"computed from the source minimum and maximum value (which might require "
"analyzing the whole source dataset). Exponent must be positive. (Those 5 "
"values can be set with the -exponent and -scale options of "
"gdal_translate.)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:444
msgid ""
"The ComplexSource supports adding a custom lookup table to transform the "
"source values to the destination. The LUT can be specified using the "
"following form:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:452
msgid ""
"The intermediary values are calculated using a linear interpolation "
"between the bounding destination values of the corresponding range. "
"Source values should be listed in a monotonically non-decreasing order. "
"If there is a Not-A-Number (NaN) source value, it should be the first "
"one. Clamping is performed for input pixel values outside of the range "
"specified by the LUT. That is, if an input pixel value is lower than the "
"minimum source value, then the destination value corresponding to that "
"minimum source value is used as the output pixel value. And similarly for"
" an input pixel value that is greater than the maximum source value."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:461
msgid ""
"The ComplexSource supports fetching a color component from a source "
"raster band that has a color table. The ColorTableComponent value is the "
"index of the color component to extract : 1 for the red band, 2 for the "
"green band, 3 for the blue band or 4 for the alpha band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:466
msgid ""
"When transforming the source values the operations are executed in the "
"following order:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:469
msgid ""
"Masking, if the NODATA element is set or, starting with GDAL 3.3, if the "
"UseMaskBand is set to true and the source band has a mask band. Note that"
" this is binary masking only, so no alpha blending is done if the mask "
"band is actually an alpha band with non-0 or non-255 values."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:473
msgid "Color table expansion"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:474
msgid "For linear scaling, applying the scale ratio, then scale offset"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:475
msgid ""
"For non-linear scaling, apply (DstMax-DstMin) * pow( (SrcValue-SrcMin) / "
"(SrcMax-SrcMin), Exponent) + DstMin"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:476
msgid "Table lookup"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:492
msgid "Non-linear scaling:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:510
msgid "KernelFilteredSource"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:512
msgid ""
"The Kernel element should have two child elements, Size and Coefs and "
"optionally the boolean attribute normalized (defaults to false=0).  The "
"size must always be an odd number, and the Coefs must have Size * Size "
"entries separated by spaces.  For now kernel is not applied to sub-"
"sampled or over-sampled data."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:529
msgid ""
"Starting with GDAL 2.3, a separable kernel may also be used.  In this "
"case the number of Coefs entries should correspond to the Size.  The "
"Coefs specify a one-dimensional kernel which is applied along each axis "
"in succession, resulting in far quicker execution. Many common image-"
"processing filters are separable. For example, a Gaussian blur:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:547
msgid "NoDataFromMaskSource"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:551
msgid ""
"The NoDataFromMaskSource is derived from the SimpleSource and shares the "
"same properties except that it replaces the value of the source with the "
"value of the NODATA child element when the value of the mask band of the "
"source is less or equal to the MaskValueThreshold child element. This is "
"typically used to transform a R,G,B,A image into a R,G,B one with a "
"NoData value. An optional RemappedValue element can be set to specify the"
" value onto which valid pixels whose value is the one of NODATA should be"
" remapped to. When RemappedValue is not explicitly specified, for Byte "
"bands, if NODATA=255, it is implicitly set to 254, otherwise it is set to"
" NODATA+1."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:567
msgid "ArraySource"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:571
msgid ""
"The ArraySource_ indicates that raster data should be read from a 2D "
"array using the multidimensional API. If the original array is not a 3D "
"array, a DerivedArray with a View step must be typically used to create a"
" 2D slice."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:575
msgid "ArraySource can have the following child elements:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:577
msgid ""
"``SingleSourceArray``, ``DerivedArray`` or ``Array``: required as first "
"child element"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:578
msgid "``SrcRect`` (same syntax and semantics as in SimpleSource): optional"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:579
msgid "``DstRect`` (same syntax and semantics as in SimpleSource): optional"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:582
msgid "SingleSourceArray"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:584
msgid ""
"SingleSourceArray references a multidimensional raster through a "
"SourceFilename element and an array through its full path within it with "
"SourceArray. When SingleSourceArray is used as a direct child of "
"ArraySource, it must be a 2-dimensional array."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:589
msgid "Example:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:600
msgid ""
"Be careful that quite often arrays in the multidimensional API use a "
"\"bottom-up\" approach, and it might thus be needed to reverse the Y "
"axis, with a View expression with a DerivedArray (cf below example)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:605
msgid "DerivedArray"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:607
msgid ""
"A DerivedArray starts with an array coming from a SingleSourceArray (but "
"it could also be a DerivedArray or a Array), which must be the first "
"child element, and applies different processing steps wrapped in zero or "
"more Step elements."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:612
msgid "View step: applies the :cpp:func:`GDALMDArray::GetView` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:614
msgid ""
"The ``View`` element must have an ``expr`` attribute, which is the "
"argument of :cpp:func:`GDALMDArray::GetView` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:617
msgid ""
"The following example slices the 3D dimension at index 0 and flips the "
"vertical axis (assuming 1st dimension is a non-spatial one, 2nd dimension"
" is the Y dimension and 3rd dimension is the X dimension)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:635
msgid "``Transpose`` step: applies the :cpp:func:`GDALMDArray::Transpose` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:637
msgid ""
"The ``Transpose`` element must have a ``newOrder`` attribute, which is "
"the argument of :cpp:func:`GDALMDArray::Transpose` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:640
msgid "The following example transposes the 2 axis of a 2D array"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:656
msgid "Resample step: applies the :cpp:func:`GDALMDArray::GetResampled` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:658
msgid ""
"The ``Resample`` element may have the following child elements, which "
"correspond to the arguments of the :cpp:func:`GDALMDArray::GetResampled` "
"method:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:661
msgid ""
"``Dimension``: with a ``name`` and ``size`` attribute. This element may "
"be repeated."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:662
msgid ""
"``ResampleAlg``: whose value is ``NearestNeighbour`` (default), "
"``Cubic``, ``CubicSpline``, ``Bilinear``, ``Lanczos``, ``Average``, "
"``RMS`` or ``Mode``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:663
msgid ""
"``SRS``: target SRS (string recognized by "
":cpp:func:`OGRSpatialReference::SetFromUserInput`)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:664
#: ../../source/drivers/raster/vrt.rst:694
#: ../../source/drivers/raster/vrt.rst:748
msgid ""
"``Option`` with a ``name`` attribute and the value as the content of the "
"element. This element may be repeated."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:686
msgid "Grid step: applies the :cpp:func:`GDALMDArray::GetGridded` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:688
msgid ""
"The ``Grid`` element may have the following child elements, which "
"correspond to the arguments of the :cpp:func:`GDALMDArray::GetGridded` "
"method:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:691
msgid "``GridOptions`` (required): name and options of the gridding algorithm"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:692
msgid ""
"``XArray`` (optional): its child value should be a SingleSourceArray, "
"DerivedArray or Array pointing to the array to use for the X dimension. "
"This is needed if the source array does not have a ``coordinates`` "
"attribute."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:693
msgid ""
"``YArray`` (optional): its child value should be a SingleSourceArray, "
"DerivedArray or Array pointing to the array to use for the Y dimension. "
"This is needed if the source array does not have a ``coordinates`` "
"attribute."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:725
msgid ""
"``GetUnscaled`` step: applies the :cpp:func:`GDALMDArray::GetUnscaled` "
"method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:727
msgid "It does not have any child elements."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:743
msgid "``GetMask`` step: applies the :cpp:func:`GDALMDArray::GetMask` method"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:745
msgid ""
"The ``GetMask`` element may have the following child elements, which "
"correspond to the arguments of the :cpp:func:`GDALMDArray::GetMask` "
"method:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:767
msgid "Array"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:769
msgid ""
":ref:`Array <vrt_multidimensional>` can be used to mosaic several "
"multidimensional arrays."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:773
msgid "Overviews"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:775
msgid ""
"GDAL can make efficient use of overviews available in the sources that "
"compose the bands when dealing with RasterIO() requests that involve "
"downsampling. But in the general case, the VRT bands themselves will not "
"expose overviews."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:779
msgid "Except if (from top priority to lesser priority) :"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:781
msgid ""
"The **Overview** element is present in the VRTRasterBand element. See "
"above."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:782
msgid "or external .vrt.ovr overviews are built"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:783
msgid ""
"(starting with GDAL 3.2) explicit virtual overviews, if a "
"**OverviewList** element is declared in the VRTDataset element (see "
"above). Those virtual overviews will be hidden by external .vrt.ovr "
"overviews that might be built later."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:786
msgid ""
"(starting with GDAL 2.1) implicit virtual overviews, if the VRTRasterBand"
" are made of a single SimpleSource or ComplexSource that has overviews. "
"Those virtual overviews will be hidden by external .vrt.ovr overviews "
"that might be built later."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:791
msgid ".vrt Descriptions for Raw Files"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:793
msgid ""
"So far we have described how to derive new virtual datasets from existing"
" files supported by GDAL.  However, it is also common to need to utilize "
"raw binary raster files for which the regular layout of the data is known"
" but for which no format specific driver exists.  This can be "
"accomplished by writing a .vrt file describing the raw file."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:799
msgid ""
"For example, the following .vrt describes a raw raster file containing "
"floating point complex pixels in a file called *l2p3hhsso.img*.  The "
"image data starts from the first byte (ImageOffset=0).  The byte offset "
"between pixels is 8 (PixelOffset=8), the size of a CFloat32.  The byte "
"offset from the start of one line to the start of the next is 9376 bytes "
"(LineOffset=9376) which is the width (1172) times the size of a pixel "
"(8)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:818
msgid ""
"Some things to note are that the VRTRasterBand has a subClass specifier "
"of \"VRTRawRasterBand\".  Also, the VRTRawRasterBand contains a number of"
" previously unseen elements but no \"source\" information.  "
"VRTRawRasterBands may never have sources (i.e. SimpleSource), but should "
"contain the following elements in addition to all the normal \"metadata\""
" elements previously described which are still supported."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:825
msgid ""
"**SourceFilename**: The name of the raw file containing the data for this"
" band.  The relativeToVRT attribute can be used to indicate if the "
"SourceFilename is relative to the .vrt file (1) or not (0)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:827
msgid ""
"**ImageOffset**: The offset in bytes to the beginning of the first pixel "
"of data of this image band.   Defaults to zero."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:829
msgid ""
"**PixelOffset**: The offset in bytes from the beginning of one pixel and "
"the next on the same line.  In packed single band data this will be the "
"size of the **dataType** in bytes."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:831
msgid ""
"**LineOffset**: The offset in bytes from the beginning of one scanline of"
" data and the next scanline of data.  In packed single band data this "
"will be PixelOffset * rasterXSize."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:833
msgid ""
"**ByteOrder**: Defines the byte order of the data on disk. Either LSB "
"(Least Significant Byte first) such as the natural byte order on Intel "
"x86 systems or MSB (Most Significant Byte first) such as the natural byte"
" order on Motorola or Sparc systems.  Defaults to being the local machine"
" order."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:835
msgid "A few other notes:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:837
msgid ""
"The image data on disk is assumed to be of the same data type as the band"
" **dataType** of the VRTRawRasterBand."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:839
msgid ""
"All the non-source attributes of the VRTRasterBand are supported, "
"including color tables, metadata, nodata values, and color "
"interpretation."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:841
msgid ""
"The VRTRawRasterBand supports in place update of the raster, whereas the "
"source based VRTRasterBand is always read-only."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:843
msgid ""
"The OpenEV tool includes a File menu option to input parameters "
"describing a raw raster file in a GUI and create the corresponding .vrt "
"file."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:845
msgid ""
"Multiple bands in the one .vrt file can come from the same raw file. Just"
" ensure that the ImageOffset, PixelOffset, and LineOffset definition for "
"each band is appropriate for the pixels of that particular band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:847
msgid "Another example, in this case a 400x300 RGB pixel interleaved image."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:876
msgid "Creation of VRT Datasets"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:878
msgid ""
"The VRT driver supports several methods of creating VRT datasets. The "
":file:`vrtdataset.h` include file should be installed with the core GDAL "
"include files, allowing direct access to the VRT classes.  However, even "
"without that most capabilities remain available through standard GDAL "
"interfaces."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:884
msgid ""
"To create a VRT dataset that is a clone of an existing dataset use the "
":cpp:func:`GDALDriver::CreateCopy` method.  For example to clone "
":file:`utm.tif` into a :file:`wrk.vrt` file in C++ the following could be"
" used:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:900
msgid ""
"Note the use of :cpp:func:`GDALOpenShared` when opening the source "
"dataset. It is advised to use :cpp:func:`GDALOpenShared` in this "
"situation so that you are able to release the explicit reference to it "
"before closing the VRT dataset itself. In other words, in the previous "
"example, you could also invert the 2 last lines, whereas if you open the "
"source dataset with :cpp:func:`GDALOpen`, you'd need to close the VRT "
"dataset before closing the source dataset."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:907
msgid ""
"To obtain the resulting VRT XML of :file:`wrk.vrt` without having to read"
" the text from an actual file, you can modify the above code to open the "
"new dataset with an empty filename and use the \"xml:VRT\" metadata "
"domain."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:919
msgid ""
"To create a virtual copy of a dataset with some attributes added or "
"changed such as metadata or coordinate system that are often hard to "
"change on other formats, you might do the following.  In this case, the "
"virtual dataset is created \"in memory\" only by virtual of creating it "
"with an empty filename, and then used as a modified source to pass to a "
":cpp:func:`GDALDriver::CreateCopy` written out in TIFF format."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:942
msgid ""
"In the above example the nodata value is set as -999. You can set the "
"HideNoDataValue element in the VRT dataset's band using "
":cpp:func:`GDALRasterBand::SetMetadataItem` on that band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:950
msgid ""
"In this example a virtual dataset is created with the "
":cpp:func:`GDALDriver::Create` method, and adding bands and sources "
"programmatically, but still via the \"generic\" API. A special attribute "
"of VRT datasets is that sources can be added to the VRTRasterBand (but "
"not to VRTRawRasterBand) by passing the XML describing the source into "
":cpp:func:`GDALRasterBand::SetMetadataItem` on the special domain target "
"\"new_vrt_sources\".  The domain target \"vrt_sources\" may also be used,"
" in which case any existing sources will be discarded before adding the "
"new ones.  In this example we construct a simple averaging filter source "
"instead of using the simple source."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:976
msgid ""
"A more general form of this that will produce a 3x3 average filtered "
"clone of any input datasource might look like the following.  In this "
"case we deliberately set the filtered datasource as in the "
"\"vrt_sources\" domain to override the SimpleSource created by the "
"`cpp:func:`GDALDriver::CreateCopy` method.  The fact that we used "
"`cpp:func:GDALDriver::CreateCopy` ensures that all the other metadata, "
"georeferencing and so forth is preserved from the source dataset ... the "
"only thing we are changing is the data source for each band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1013
msgid ""
"The :cpp:class:`VRTDataset` class is one of the few dataset "
"implementations that supports the :cpp:func:`GDALDataset::AddBand` "
"method. The options passed to the :cpp:func:`GDALDataset::AddBand` method"
" can be used to control the type of the band created (VRTRasterBand, "
"VRTRawRasterBand, VRTDerivedRasterBand), and in the case of the "
"VRTRawRasterBand to set its various parameters. For standard "
"VRTRasterBand, sources should be specified with the above "
":cpp:func:`GDALRasterBand::SetMetadataItem` examples."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1041
msgid "Using Derived Bands (with pixel functions in C/C++)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1043
msgid ""
"A specialized type of band is a 'derived' band which derives its pixel "
"information from its source bands.  With this type of band you must also "
"specify a pixel function, which has the responsibility of generating the "
"output raster.  Pixel functions are created by an application and then "
"registered with GDAL using a unique key."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1049
msgid ""
"Using derived bands you can create VRT datasets that manipulate bands on "
"the fly without having to create new band files on disk.  For example, "
"you might want to generate a band using four source bands from a nine "
"band input dataset (x0, x3, x4, and x8) and some constant y:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1058
msgid ""
"You could write the pixel function to compute this value and then "
"register it with GDAL with the name \"MyFirstFunction\".  Then, the "
"following VRT XML could be used to display this derived band:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1099
msgid ""
"PixelFunctionArguments can only be used with C++ pixel functions in GDAL "
"versions 3.4 and greater."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1102
msgid ""
"In addition to the subclass specification (VRTDerivedRasterBand) and the "
"PixelFunctionType value, there is another new parameter that can come in "
"handy: SourceTransferType.  Typically the source rasters are obtained "
"using the data type of the derived band.  There might be times, however, "
"when you want the pixel function to have access to higher resolution "
"source data than the data type being generated. For example, you might "
"have a derived band of type \"Float\", which takes a single source of "
"type \"CFloat32\" or \"CFloat64\", and returns the imaginary portion.  To"
" accomplish this, set the SourceTransferType to \"CFloat64\". Otherwise "
"the source would be converted to \"Float\" prior to calling the pixel "
"function, and the imaginary portion would be lost."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1124
msgid "Default Pixel Functions"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1126
msgid ""
"GDAL provides a set of default pixel functions that can be used without "
"writing new code:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1133
msgid "PixelFunctionType"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1134
msgid "Number of input sources"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1135
msgid "PixelFunctionArguments"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1136
msgid "Description"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1137
msgid "**cmul**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1138
#: ../../source/drivers/raster/vrt.rst:1142
#: ../../source/drivers/raster/vrt.rst:1162
#: ../../source/drivers/raster/vrt.rst:1166
#: ../../source/drivers/raster/vrt.rst:1170
#: ../../source/drivers/raster/vrt.rst:1222
msgid "2"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1140
msgid "multiply the first band for the complex conjugate of the second"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1141
msgid "**complex**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1144
msgid "make a complex band merging two bands used as real and imag values"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1145
msgid "**conj**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1146
#: ../../source/drivers/raster/vrt.rst:1150
#: ../../source/drivers/raster/vrt.rst:1154
#: ../../source/drivers/raster/vrt.rst:1158
#: ../../source/drivers/raster/vrt.rst:1174
#: ../../source/drivers/raster/vrt.rst:1178
#: ../../source/drivers/raster/vrt.rst:1182
#: ../../source/drivers/raster/vrt.rst:1194
#: ../../source/drivers/raster/vrt.rst:1198
#: ../../source/drivers/raster/vrt.rst:1210
#: ../../source/drivers/raster/vrt.rst:1218
#: ../../source/drivers/raster/vrt.rst:1226
#: ../../source/drivers/raster/vrt.rst:1230
#: ../../source/drivers/raster/vrt.rst:1234
msgid "1"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1148
msgid ""
"computes the complex conjugate of a single raster band (just a copy if "
"the input is non-complex)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1149
msgid "**dB**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1151
msgid "``fact`` (optional)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1152
msgid ""
"perform conversion to dB of the abs of a single raster band (real or "
"complex): ``20. * log10( abs( x ) )``. The optional ``fact`` parameter "
"can be set to ``10`` to get the alternative formula: ``10. * log10( abs( "
"x ) )``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1153
msgid "**dB2amp**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1156
msgid ""
"perform scale conversion from logarithmic to linear (amplitude) (i.e. "
"``10 ^ ( x / 20 )`` ) of a single raster band (real only). Deprecated in "
"GDAL v3.5. Please use the ``exp`` pixel function with ``base = 10.`` and "
"``fact = 0.05`` i.e. ``1./20``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1157
msgid "**dB2pow**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1160
msgid ""
"perform scale conversion from logarithmic to linear (power) (i.e. ``10 ^ "
"( x / 10 )`` ) of a single raster band (real only). Deprecated in GDAL "
"v3.5. Please use the ``exp`` pixel function with ``base = 10.`` and "
"``fact = 0.1`` i.e. ``1./10``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1161
msgid "**diff**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1164
msgid "computes the difference between 2 raster bands (``b1 - b2``)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1165
msgid "**div**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1168
msgid "divide one raster band by another (``b1 / b2``)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1169
msgid "**norm_diff**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1172
msgid ""
"computes the normalized difference between two raster bands: ``(b1 - "
"b2)/(b1 + b2)``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1173
msgid "**exp**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1175
msgid "``base`` (optional), ``fact`` (optional)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1176
msgid ""
"computes the exponential of each element in the input band ``x`` (of real"
" values): ``e ^ x``. The function also accepts two optional parameters: "
"``base`` and ``fact`` that allow to compute the generalized formula: "
"``base ^ ( fact * x )``. Note: this function is the recommended one to "
"perform conversion form logarithmic scale (dB): `` 10. ^ (x / 20.)``, in "
"this case ``base = 10.`` and ``fact = 0.05`` i.e. ``1. / 20``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1177
msgid "**imag**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1180
msgid "extract imaginary part from a single raster band (0 for non-complex)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1181
msgid "**intensity**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1184
msgid ""
"computes the intensity ``Re( x * conj(x) )`` of a single raster band "
"(real or complex)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1185
msgid "**interpolate_exp**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1186
#: ../../source/drivers/raster/vrt.rst:1190
#: ../../source/drivers/raster/vrt.rst:1202
#: ../../source/drivers/raster/vrt.rst:1206
#: ../../source/drivers/raster/vrt.rst:1214
#: ../../source/drivers/raster/vrt.rst:1238
msgid ">= 2"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1187
#: ../../source/drivers/raster/vrt.rst:1191
msgid "``t0``, ``dt``, ``t``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1188
msgid ""
"interpolate a value at time (or position) ``t`` given input sources "
"beginning at position ``t0`` with spacing ``dt`` using exponential "
"interpolation"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1189
msgid "**interpolate_linear**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1192
msgid ""
"interpolate a value at time (or position) ``t`` given input sources "
"beginning at ``t0`` with spacing ``dt`` using linear interpolation"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1193
msgid "**inv**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1195
#: ../../source/drivers/raster/vrt.rst:1215
#: ../../source/drivers/raster/vrt.rst:1239
msgid "``k`` (optional)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1196
msgid ""
"inverse (``1./x``). If the optional ``k`` parameter is set then the "
"result is multiplied by ``k`` (``k / x``)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1197
msgid "**log10**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1200
msgid ""
"compute the logarithm (base 10) of the abs of a single raster band (real "
"or complex): ``log10( abs( x ) )``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1201
msgid "**max**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1203
#: ../../source/drivers/raster/vrt.rst:1207
msgid "``propagateNoData`` (optional)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1204
msgid ""
"(GDAL >= 3.8) maximum of 2 or more raster bands, ignoring by default "
"pixels at nodata. If the optional ``propagateNoData`` parameter is set to"
" ``true``, then if a nodata pixel is found in one of the bands, if will "
"be propagated to the output value."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1205
msgid "**min**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1208
msgid ""
"(GDAL >= 3.8) minimum of 2 or more raster bands, ignoring by default "
"pixels at nodata. If the optional ``propagateNoData`` parameter is set to"
" ``true``, then if a nodata pixel is found in one of the bands, if will "
"be propagated to the output value."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1209
msgid "**mod**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1212
msgid "extract module from a single raster band (real or complex)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1213
msgid "**mul**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1216
msgid ""
"multiply 2 or more raster bands. If the optional ``k`` parameter is "
"provided then the result is multiplied by the scalar ``k``."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1217
msgid "**phase**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1220
msgid "extract phase from a single raster band [-PI,PI] (0 or PI for non-complex)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1221
msgid "**polar**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1223
msgid "``amplitude_type`` (optional)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1224
msgid ""
"make a complex band using input bands for amplitude and phase values ``b1"
" * exp( j * b2 )``. The optional (string) parameter ``amplitude_type`` "
"can be ``AMPLITUDE`` (default) ``INTENSITY`` or ``dB``. Note: if "
"``amplitude_type`` is set to ``INTENSITY`` then negative values are "
"clipped to zero."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1225
msgid "**pow**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1227
msgid "``power``"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1228
msgid ""
"raise a single raster band to a constant power, specified with argument "
"``power`` (real only)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1229
msgid "**real**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1232
msgid ""
"extract real part from a single raster band (just a copy if the input is "
"non-complex)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1233
msgid "**sqrt**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1236
msgid "perform the square root of a single raster band (real only)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1237
msgid "**sum**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1240
msgid ""
"sum 2 or more raster bands. If the optional ``k`` parameter is provided "
"then it is added to each element of the result"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1241
msgid "**replace_nodata**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1242
#: ../../source/drivers/raster/vrt.rst:1246
msgid "= 1"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1243
msgid "``to`` (optional)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1244
msgid ""
"convert incoming ``NoData`` values to a new value, IEEE 754 `nan` by "
"default"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1245
msgid "**scale**"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1248
msgid ""
"perform scaling according to the ``offset`` and ``scale`` values of the "
"raster band"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1251
msgid "Writing Pixel Functions"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1253
msgid ""
"To register this function with GDAL (prior to accessing any VRT datasets "
"with derived bands that use this function), an application calls "
":cpp:func:`GDALAddDerivedBandPixelFuncWithArgs` with a key and a "
":cpp:type:`GDALDerivedPixelFuncWithArgs`:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1269
msgid ""
"A good time to do this is at the beginning of an application when the "
"GDAL drivers are registered. ``pszMetadata`` is optional and can be "
"``nullptr``. It can be used to declare the function signature to the user"
" and to request additional parameters aside from the ones from the "
"Dataset."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1274
msgid ""
"A :cpp:type:`GDALDerivedPixelFuncWithArgs` is defined with a signature "
"similar to :cpp:func:`GDALRasterBand::IRasterIO`:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst
msgid "Parameters"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1279
msgid ""
"A pointer to packed rasters; one per source.  The datatype of all will be"
" the same, specified in the ``eSrcType`` parameter."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1282
msgid "The number of source rasters."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1284
msgid ""
"The buffer into which the data should be read, or from which it should be"
" written.  This buffer must contain at least ``nBufXSize * nBufYSize`` "
"words of type eBufType.  It is organized in left to right, top to bottom "
"pixel order.  Spacing is controlled by the ``nPixelSpace`` and "
"``nLineSpace`` parameters."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1290
msgid ""
"The width of the buffer image into which the desired region is to be "
"read, or from which it is to be written."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1293
msgid ""
"The height of the buffer image into which the desired region is to be "
"read, or from which it is to be written."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1296
msgid "The type of the pixel values in the ``papoSources`` raster array."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1299
msgid ""
"The type of the pixel values that the pixel function must generate in the"
" ``pData`` data buffer."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1302
msgid ""
"The byte offset from the start of one pixel value in ``pData`` to the "
"start of the next pixel value within a scanline.  If defaulted (0) the "
"size of the datatype eBufType is used."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1306
msgid ""
"The byte offset from the start of one scanline in pData to the start of "
"the next."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1309
msgid "An optional string list of named function arguments (e.g. ``y=4``)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1312
msgid ""
"It is also possible to register a :cpp:type:`GDALDerivedPixelFunc` (which"
" omits the final :cpp:type:`CSLConstList` argument) using "
":cpp:func:`GDALAddDerivedBandPixelFunc`."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1314
msgid "The following is an implementation of the pixel function:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1376
msgid "Using Derived Bands (with pixel functions in Python)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1378
msgid ""
"Starting with GDAL 2.2, in addition to pixel functions written in C/C++ "
"as documented in the :ref:`vrt_derived_bands` section, it is possible to "
"use pixel functions written in Python. Both `CPython "
"<https://www.python.org/>`_ and `NumPy <http://www.numpy.org/>`_ are "
"requirements at run-time."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1383
msgid ""
"The subelements for VRTRasterBand (whose subclass specification must be "
"set to VRTDerivedRasterBand) are :"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1386
msgid ""
"**PixelFunctionType** (required): Must be set to a function name that "
"will be defined as a inline Python module in PixelFunctionCode element or"
" as the form \"module_name.function_name\" to refer to a function in an "
"external Python module"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1388
msgid "**PixelFunctionLanguage** (required): Must be set to Python."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1390
msgid ""
"**PixelFunctionCode** (required if PixelFunctionType is of the form "
"\"function_name\", ignored otherwise). The in-lined code of a Python "
"module, that must be at least have a function whose name is given by "
"PixelFunctionType."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1392
msgid ""
"**BufferRadius** (optional, defaults to 0): Amount of extra pixels, with "
"respect to the original RasterIO() request to satisfy, that are fetched "
"at the left, right, bottom and top of the input and output buffers passed"
" to the pixel function. Note that the values of the output buffer in this"
" buffer zone will be ignored."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1394
msgid ""
"**SkipNonContributingSources** (optional, added in GDAL 3.7, defaults to "
"false) = true/false: Whether sources that do not intersect the "
"VRTRasterBand RasterIO() requested region should be omitted. By default, "
"data for all sources, including ones that do not intersect it, are passed"
" to the pixel function. By setting this parameter to false, only sources "
"that intersect the requested region will be passed."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1396
msgid ""
"The signature of the Python pixel function must have the following "
"arguments:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1398
msgid ""
"**in_ar**: list of input NumPy arrays. One NumPy array for each source. "
"If SkipNonContributingSources=true, only contributing sources will be "
"passed."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1399
msgid ""
"**out_ar**: output NumPy array to fill. The array is initialized at the "
"right dimensions and with the VRTRasterBand.dataType."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1400
msgid ""
"**xoff**: pixel offset to the top left corner of the accessed region of "
"the band. Generally not needed except if the processing depends on the "
"pixel position in the raster."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1401
msgid ""
"**yoff** line offset to the top left corner of the accessed region of the"
" band. Generally not needed."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1402
msgid ""
"**xsize**: width of the region of the accessed region of the band. Can be"
" used together with out_ar.shape[1] to determine the horizontal "
"resampling ratio of the request."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1403
msgid ""
"**ysize**: height of the region of the accessed region of the band. Can "
"be used together with out_ar.shape[0] to determine the vertical "
"resampling ratio of the request."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1404
msgid "**raster_xsize**: total width of the raster band. Generally not needed."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1405
msgid "**raster_ysize**: total height of the raster band. Generally not needed."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1406
msgid ""
"**buf_radius**: radius of the buffer (in pixels) added to the left, "
"right, top and bottom of in_ar / out_ar. This is the value of the "
"optional BufferRadius element that can be set so that the original pixel "
"request is extended by a given amount of pixels."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1407
msgid "**gt**: geotransform. Array of 6 double values."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1408
msgid ""
"**kwargs**: dictionary with user arguments defined in "
"PixelFunctionArguments"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1410
msgid ""
"The provided ``out_ar`` array must be modified in-place. Any value "
"currently returned by the pixel function is ignored."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1415
msgid ""
"If wanting to fill ``out_ar`` from another array, use the ``out_ar[:] = "
"...`` syntax."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1419
msgid "Examples"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1422
msgid "VRT that multiplies the values of the source file by a factor of 1.5"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1448
msgid "VRT that adds 2 (or more) rasters"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1476
msgid "VRT that computes hillshading using an external library"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1497
msgid "with hillshading.py:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1556
msgid "Python module path"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1558
msgid ""
"When importing modules from inline Python code or when relying on out-of-"
"line code (PixelFunctionType of the form \"module_name.function_name\"), "
"you need to make sure the modules are accessible through the python path."
" Note that contrary to the Python interactive interpreter, the current "
"path is not automatically added when used from GDAL. So you may need to "
"define the **PYTHONPATH** environment variable if you get "
"ModuleNotFoundError exceptions."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1568
msgid "Security implications"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1570
msgid ""
"The ability to run Python code potentially opens the door to many "
"potential vulnerabilities if the user of GDAL may process untrusted "
"datasets. To avoid such issues, by default, execution of Python pixel "
"function will be disabled. The execution policy can be controlled with "
"the following configuration options:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1582
msgid ""
"YES: all VRT scripts are considered as trusted and their Python pixel "
"functions will be run when pixel operations are involved."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1583
msgid ""
"NO: all VRT scripts are considered untrusted, and none Python "
"pixelfunction will be run."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1584
msgid ""
"TRUSTED_MODULES (default setting): all VRT scripts with inline Python "
"code in their PixelFunctionCode elements will be considered untrusted and"
" will not be run. VRT scripts that use a PixelFunctionType of the form "
"\"module_name.function_name\" will be considered as trusted, only if "
"\"module_name\" is allowed in the "
":config:`GDAL_VRT_PYTHON_TRUSTED_MODULES` configuration option."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1593
msgid "Linking mechanism to a Python interpreter"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1595
msgid ""
"Currently only CPython 2 and 3 is supported. The GDAL shared object is "
"not explicitly linked at build time to any of the CPython library. When "
"GDAL will need to run Python code, it will first determine if the Python "
"interpreter is loaded in the current process (which is the case if the "
"program is a Python interpreter itself, or if another program, e.g. QGIS,"
" has already loaded the CPython library). Otherwise it will look if the "
":config:`PYTHONSO` configuration option is defined. This option can be "
"set to point to the name of the Python library to use, either as a "
"shortname like \"libpython3.10.so\" if it is accessible through the Linux"
" dynamic loader (so typically in one of the paths in /etc/ld.so.conf or "
"LD_LIBRARY_PATH) or as a full path name like \"/usr/lib/x86_64-linux-"
"gnu/libpython3.10.so\". The same holds on Windows will shortnames like "
"\"python310.dll\" if accessible through the PATH or full path names like "
"\"c:\\\\python310\\\\python310.dll\". If the :config:`PYTHONSO` "
"configuration option is not defined, it will look for a \"python\" binary"
" in the directories of the PATH and will try to determine the related "
"shared object (it will retry with \"python3\" if no \"python\" has been "
"found). If the above was not successful, then a predefined list of shared"
" objects names will be tried. At the time of writing, the order of "
"versions searched is 3.8, 3.9, 3.10, 3.11, 3.12, 3.7, 3.6, 3.5, 3.4, 3.3,"
" 3.2. Enabling debug information (:config:`CPL_DEBUG=ON`) will show which"
" Python version is used."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1616
msgid "Just-in-time compilation"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1618
msgid ""
"The use of a just-in-time compiler may significantly speed up execution "
"times. `Numba <http://numba.pydata.org/>`_ has been successfully tested. "
"For better performance, it is recommended to use a offline pixel function"
" so that the just-in-time compiler may cache its compilation."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1623
msgid "Given the following :file:`mandelbrot.py` file :"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1675
msgid "The following VRT file can be used (to be opened with QGIS for example)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1712
msgid "Warped VRT"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1714
msgid ""
"A warped VRT is a VRTDataset with subClass=\"VRTWarpedDataset\". It has a"
" GDALWarpOptions element which describe the warping options."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1758
msgid "Pansharpened VRT"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1762
msgid ""
"A VRT can describe a dataset resulting from a `pansharpening operation "
"<https://en.wikipedia.org/wiki/Pansharpened_image>`_ The pansharpening "
"VRT combines a panchromatic band with several spectral bands of lower "
"resolution to generate output spectral bands of the same resolution as "
"the panchromatic band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1768
msgid ""
"VRT pansharpening assumes that the panchromatic and spectral bands have "
"the same projection (or no projection). If that is not the case, "
"reprojection must be done in a prior step. Bands might have different "
"geotransform matrices, in which case, by default, the resulting dataset "
"will have as extent the union of all extents."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1773
msgid ""
"Currently the only supported pansharpening algorithm is a \"weighted\" "
"Brovey algorithm. The general principle of this algorithm is that, after "
"resampling the spectral bands to the resolution of the panchromatic band,"
" a pseudo panchromatic intensity is computed from a weighted average of "
"the spectral bands. Then the output value of the spectral band is its "
"input value multiplied by the ratio of the real panchromatic intensity "
"over the pseudo panchromatic intensity."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1780
msgid "Corresponding pseudo code:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1789
msgid ""
"A valid pansharpened VRT must declare subClass=\"VRTPansharpenedDataset\""
" as an attribute of the VRTDataset top element. The VRTDataset element "
"must have a child **PansharpeningOptions** element. This "
"PansharpeningOptions element must have a **PanchroBand** child element "
"and one of several **SpectralBand** elements. PanchroBand and "
"SpectralBand elements must have at least a **SourceFilename** child "
"element to specify the name of the dataset. They may also have a "
"**SourceBand** child element to specify the number of the band in the "
"dataset (starting with 1). If not specify, the first band will be "
"assumed. **OpenOptions** can also be specified"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1799
msgid ""
"The SpectralBand element must generally have a **dstBand** attribute to "
"specify the number of the output band (starting with 1) to which the "
"input spectral band must be mapped. If the attribute is not specified, "
"the spectral band will be taken into account in the computation of the "
"pansharpening, but not exposed as an output band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1804
msgid ""
"Panchromatic and spectral bands should generally come from different "
"datasets, since bands of a GDAL dataset are assumed to have all the same "
"dimensions. Spectral bands themselves can come from one or several "
"datasets. The only constraint is that they have all the same dimensions "
"and geotransform."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1809
msgid ""
"An example of a minimalist working VRT is the following. It will "
"generates a dataset with 3 output bands corresponding to the 3 input "
"spectral bands of multispectral.tif, pansharpened with panchromatic.tif."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1848
msgid ""
"In the above example, 3 output pansharpend bands will be created from the"
" 3 declared input spectral bands. The weights will be 1/3. Cubic "
"resampling will be used. The projection and geotransform from the "
"panchromatic band will be reused for the VRT dataset."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1853
msgid ""
"It is possible to create more explicit and declarative pansharpened VRT, "
"allowing for example to only output part of the input spectral bands "
"(e.g. only RGB when the input multispectral dataset is RGBNir). It is "
"also possible to add \"classic\" VRTRasterBands, in addition to the "
"pansharpened bands."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1858
msgid ""
"In addition to the above mentioned required PanchroBand and SpectralBand "
"elements, the PansharpeningOptions element may have the following "
"children elements :"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1861
msgid ""
"**Algorithm**: to specify the pansharpening algorithm. Currently, only "
"WeightedBrovey is supported."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1862
msgid ""
"**AlgorithmOptions**: to specify the options of the pansharpening "
"algorithm. With WeightedBrovey algorithm, the only supported option is a "
"**Weights** child element whose content must be a comma separated list of"
" real values assigning the weight of each of the declared input spectral "
"bands. There must be as many values as declared input spectral bands."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1863
msgid ""
"**Resampling**: the resampling kernel used to resample the spectral bands"
" to the resolution of the panchromatic band. Can be one of Cubic "
"(default), Average, Near, CubicSpline, Bilinear, Lanczos."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1864
msgid ""
"**NumThreads**: Number of worker threads. Integer number or ALL_CPUS. If "
"this option is not set, the :config:`GDAL_NUM_THREADS` configuration "
"option will be queried (its value can also be set to an integer or "
"ALL_CPUS)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1865
msgid ""
"**BitDepth**: Can be used to specify the bit depth of the panchromatic "
"and spectral bands (e.g. 12). If not specified, the NBITS metadata item "
"from the panchromatic band will be used if it exists."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1866
msgid ""
"**NoData**: Nodata value to take into account for panchromatic and "
"spectral bands. It will be also used as the output nodata value. If not "
"specified and all input bands have the same nodata value, it will be "
"implicitly used (unless the special None value is put in NoData to "
"prevent that)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1867
msgid ""
"**SpatialExtentAdjustment**: Can be one of **Union** (default), "
"**Intersection**, **None** or **NoneWithoutWarning**. Controls the "
"behavior when panchromatic and spectral bands have not the same "
"geospatial extent. By default, Union will take the union of all spatial "
"extents. Intersection the intersection of all spatial extents. None will "
"not proceed to any adjustment at all, but will emit a warning. "
"NoneWithoutWarning is the same as None, but in a silent way."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1869
msgid ""
"The below examples creates a VRT dataset with 4 bands. The first band is "
"the panchromatic band. The 3 following bands are than red, green, blue "
"pansharpened bands computed from a multispectral raster with red, green, "
"blue and near-infrared bands. The near-infrared bands is taken into "
"account for the computation of the pseudo panchromatic intensity, but not"
" bound to an output band."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1935
msgid "Multidimensional VRT"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1939
msgid "See the dedicated :ref:`vrt_multidimensional` page."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1948
msgid "Processed dataset VRT"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1952
msgid ""
"A VRT processed dataset is a specific variant of the :ref:`raster.vrt` "
"format, to apply chained processing steps that may apply to several bands"
" at the same time."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1955
msgid "See the dedicated :ref:`vrt_processed_dataset` page."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1964
msgid "vrt:// connection string"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1968
msgid ""
"In some contexts, it might be useful to benefit from features of VRT "
"without having to create a file or to provide the rather verbose VRT XML "
"content as the connection string. For that purpose, the following URI "
"syntax is supported for the dataset name since GDAL 3.1"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:1986
msgid "For example:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2009
msgid ""
"The supported options currently are ``bands``, ``a_nodata``, ``a_srs``, "
"``a_ullr``, ``ovr``, ``expand``, ``a_scale``, ``a_offset``, ``ot``, "
"``gcp``, ``if``, ``scale``, ``exponent``, ``outsize``, ``projwin``, "
"``projwin_srs``, ``tr``, ``r``, ``srcwin``, ``a_gt``, ``oo``, "
"``unscale``, ``a_coord_epoch``, ``nogcp``, ``epo``, ``eco``, ``sd_name``,"
" and ``sd``."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2013
msgid "Other options may be added in the future."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2015
msgid ""
"The effect of the ``bands`` option is to change the band composition. The"
" values specified are the source band numbers (between 1 and N), possibly"
" out-of-order or with repetitions. The ``mask`` value can be used to "
"specify the global mask band. This can also be seen as an equivalent of "
"running `gdal_translate -of VRT -b num1 ... -b numN`."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2020
msgid ""
"The effect of the ``a_nodata`` option (added in GDAL 3.9) is to assign "
"(override) the nodata value of the source in the same way as "
"(:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2023
msgid ""
"The effect of the ``a_srs`` option (added in GDAL 3.7) is to assign "
"(override) the coordinate reference system of the source in the same way "
"as (:ref:`gdal_translate`), it may be missing, or incorrect. The value "
"provided for ``a_srs`` may be a string or a file containing a srs "
"definition."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2028
msgid ""
"The effect of the ``a_ullr`` option (added in GDAL 3.7) is to assign "
"(override) the georeferenced bounds of the source in the same way as "
"(:ref:`gdal_translate`). The value consists of four numeric values "
"separated by commas, in the order 'xmin,ymax,xmax,ymin' (upper left x,y, "
"lower right x,y)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2032
msgid ""
"The effect of the ``ovr`` option (added in GDAL 3.7) is to specify which "
"overview level of source file must be used, with the first overview level"
" being 0 (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2035
msgid ""
"The effect of the ``expand`` option (added in GDAL 3.7) is to expose a "
"dataset with 1 band with a color table as a dataset with 3 (RGB) or 4 "
"(RGBA) bands, as with (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2038
msgid ""
"The effect of the ``a_scale`` option (added in GDAL 3.7) is to set band "
"scaling value (no modification of pixel values is done), as with "
"(:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2041
msgid ""
"The effect of the ``a_offset`` option (added in GDAL 3.7) is to set band "
"offset value (no modification of pixel values is done), as with "
"(:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2044
msgid ""
"The effect of the ``ot`` option (added in GDAL 3.7) is to force the "
"output image bands to have a specific data type supported by the driver "
"as with (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2047
msgid ""
"The effect of the ``gcp`` option (added in GDAL 3.7) is to add the "
"indicated ground control point to the output dataset. Values are a set of"
" numbers as per (:ref:`gdal_translate`) "
"``pixel,line,easting,northing[,elevation]``. Multiple entries may be "
"included. This can also be seen as an equivalent of running "
"`gdal_translate -of VRT -gcp pixel1 line1 easting1 northing1 [elevation1]"
" -gcp pixel2 line2 easting2 northing2 [elevation2] ... -gcp pixelN lineN "
"eastingN northingN [elevationN]`."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2052
msgid ""
"The effect of the ``if`` option (added in GDAL 3.7) is to specify the "
"format/driver name/s to be attempted to open the input file "
"(:ref:`gdal_translate`). Values may be repeated separated by comma This "
"can also be seen as an equivalent of running `gdal_translate -of VRT -if "
"DRV1 -if DRV2 ... -if DRVN`."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2056
msgid ""
"The effect of the ``scale`` option (added in GDAL 3.7) is to rescale the "
"input pixel values from the range **src_min** to **src_max** to the range"
" **dst_min** to **dst_max**  ``src_min,src_max[,dst_min,dst_max]`` either"
" 2 or 4 comma separated values. The same rules apply for the source and "
"destination ranges, and ``scale_bn`` syntax may be used as it is with "
"(:ref:`gdal_translate`).  The option ``scale=true`` (default if "
"unspecified is ``scale=false``) may also be used without value arguments "
"(added in GDAL 3.8), where it results in the output range 0,255 from "
"whatever the source range is. Do consider the need for also using ``ot`` "
"option in order to accommodate the intended output range."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2060
msgid ""
"The effect of the ``exponent`` option (added in GDAL 3.7) is to apply "
"non-linear scaling with a power function, a single value to be used with "
"the ``scale`` option. The same ``exponent_bn`` syntax may be used in "
"combination with ``scale_bn`` to target specific band/s as per "
"(:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2064
msgid ""
"The effect of the ``outsize`` option (added in GDAL 3.7) is to set the "
"size of the output, in numbers `pixel,line` or in fraction `pixel%,line%`"
" as per (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2066
msgid ""
"The effect of the ``projwin`` option (added in GDAL 3.8) is to select a "
"subwindow from the source image in georeferenced coordinates in the same "
"way as (:ref:`gdal_translate`). The value consists of four numeric values"
" separated by commas, in the order 'xmin,ymax,xmax,ymin', these are in "
"the native georeferenced coordinates of the source unless ``projwin_srs``"
" is also provided."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2071
msgid ""
"The effect of the ``projwin_srs`` option (added in GDAL 3.8) is to "
"specify the SRS in which to interpret the coordinates given with "
"``projwin`` in the same way as (:ref:`gdal_translate`). This option only "
"applies if ``projwin`` is also supplied."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2073
msgid ""
"The effect of the ``tr`` option (added in GDAL 3.8) is to set the target "
"resolution, two positive values in georeferenced coordinates, applied in "
"the same way as (:ref:`gdal_translate`). The value consists of two "
"numeric values separated by commas in the order 'xres,yres'."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2075
msgid ""
"The effect of the ``r`` option (added in GDAL 3.8) is to set the "
"resampling algorithm used, with 'nearest' as the default. This is applied"
" in the same way as (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2077
msgid ""
"The effect of the ``srcwin`` option (added in GDAL 3.8) is to select a "
"subwindow from the source image based on pixel/line location as with "
"(:ref:`gdal_translate`). The value consists of four integer values "
"separated by commas, in the order 'xoff,yoff,xsize,ysize'."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2080
msgid ""
"The effect of the ``a_gt`` option (added in GDAL 3.8) is to "
"override/assign the geotransform of the output as with "
"(:ref:`gdal_translate`). The value consists of six numeric values "
"separated by commas, in the order 'gt(0),gt(1),gt(2),gt(3),gt(4),gt(5)'."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2083
msgid ""
"The effect of the ``oo`` option (added in GDAL 3.8) is to set driver-"
"specific dataset open options, multiple values are allowed. The value "
"consists of string key value pairs with multiple pairs separated by "
"commas e.g. ``oo=<key>=<val>`` or . "
"``oo=<key1>=<val1>,<key2>=<val2>,...``. This is applied in the same way "
"as (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2086
msgid ""
"The effect of the ``unscale`` option (added in GDAL 3.8) is to apply the "
"scale/offset metadata for the bands to convert scaled values to unscaled "
"values. To apply this use syntax ``unscale=true``, or ``unscale=false`` "
"(which is the default if not specified). Do consider the need for also "
"using ``ot`` option in order to accommodate the intended output range, "
"see more details for the same argument as with (:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2088
msgid ""
"The effect of the ``a_coord_epoch`` option (added in GDAL 3.8) is to "
"assign a coordinate epoch, linked with the output SRS as with "
"(:ref:`gdal_translate`)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2091
msgid ""
"The effect of the ``nogcp`` option (added in GDAL 3.8) is to not copy the"
" GCPs in the source dataset to the output dataset "
"(:ref:`gdal_translate`). To apply this use syntax ``nogcp=true``, or "
"``nogcp=false`` (which is the default if not specified)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2094
msgid ""
"The effect of the ``epo`` option (added in GDAL 3.8) is that ``srcwin`` "
"or ``projwin`` values that fall partially outside the source raster "
"extent will be considered as an error as per (:ref:`gdal_translate`). To "
"apply this use syntax ``epo=true``, or ``epo=false`` (which is the "
"default if not specified)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2096
msgid ""
"The effect of the ``eco`` option (added in GDAL 3.8) is that ``srcwin`` "
"or ``projwin`` values that fall completely outside the source raster "
"extent will be considered as an error as per (:ref:`gdal_translate`). To "
"apply this use syntax ``eco=true``, or ``eco=false`` (which is the "
"default if not specified)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2098
msgid ""
"The effect of the ``sd_name`` option (added in GDAL 3.9) is to choose an "
"individual subdataset by name for sources that have multiple subdatasets."
" This means that rather than a fully-qualified description such as "
"\"NETCDF:myfile.nc:somearray\" we may use "
"\"vrt://myfile.nc?sd_name=somearray\". This option is mutually exclusive "
"with ``sd``."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2103
msgid ""
"The effect of the ``sd`` option (added in GDAL 3.9) is to choose an "
"individual subdataset by number for sources that have multiple "
"subdatasets. This means that rather than a fully-qualified description "
"such as \"NETCDF:myfile.nc:somearray\" we may use "
"\"vrt://myfile.nc?sd=<n>\" where \"<n>\" is between 1 and the number of "
"subdatasets. Note that there is no guarantee of the order of the "
"subdatasets within a source between GDAL versions (or in some cases "
"between file series in datasets). This mode is for convenience only, "
"please use ``sd_name`` to choose a subdataset by name explicitly. This "
"option is mutually exclusive with ``sd_name``."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2112
msgid ""
"The options may be chained together separated by '&'. (Beware the need "
"for quoting to protect the ampersand)."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2122
msgid "Multi-threading optimizations"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2124
msgid ""
"Starting with GDAL 3.6, the ComputeStatistics() implementation can "
"benefit from multi-threading if the sources are not overlapping and "
"belong to different datasets. This can be enabled by setting the "
":config:`GDAL_NUM_THREADS` configuration option to an integer or "
"``ALL_CPUS``."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2129
msgid ""
"Starting with GDAL 3.10, the :oo:`NUM_THREADS` open option can be set to "
"control specifically the multi-threading of VRT datasets. It defaults to "
"``ALL_CPUS``, and when set, overrides :config:`GDAL_NUM_THREADS` or "
":config:`VRT_NUM_THREADS`. It applies to ComputeStatistics() and band-"
"level and dataset-level RasterIO(). For band-level RasterIO(), multi-"
"threading is only available if more than 1 million pixels are requested "
"and if the VRT is made of only non-overlapping SimpleSource or "
"ComplexSource belonging to different datasets. For dataset-level "
"RasterIO(), multi-threading is only available if more than 1 million "
"pixels are requested and if the VRT is made of only non-overlapping "
"SimpleSource belonging to different datasets."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2148
msgid ""
"This can also be specified globally with the :config:`VRT_NUM_THREADS` "
"configuration option."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2158
msgid ""
"Note that the number of threads actually used is also limited by the "
":config:`GDAL_MAX_DATASET_POOL_SIZE` configuration option."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2162
msgid "Multi-threading issues"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2166
msgid ""
"The below section applies to GDAL <= 2.2. Starting with GDAL 2.3, the use"
" of VRT datasets is subject to the standard GDAL dataset multi-threaded "
"rules (that is a VRT dataset handle may only be used by a same thread at "
"a time, but you may open several dataset handles on the same VRT file and"
" use them in different threads)"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2172
msgid ""
"When using VRT datasets in a multi-threading environment, you should be "
"careful to open the VRT dataset by the thread that will use it "
"afterwards. The reason for that is that the VRT dataset uses "
":cpp:func:`GDALOpenShared` when opening the underlying datasets. So, if "
"you open twice the same VRT dataset by the same thread, both VRT datasets"
" will share the same handles to the underlying datasets."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2179
msgid ""
"The shared attribute, on the SourceFilename indicates whether the dataset"
" should be shared (value is 1) or not (value is 0). The default is 1. If "
"several VRT datasets referring to the same underlying sources are used in"
" a multithreaded context, shared should be set to 0. Alternatively, the "
":config:`VRT_SHARED_SOURCE` configuration option can be set to ``NO`` to "
"force non-shared mode:"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2195
msgid "Performance considerations"
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2197
msgid ""
"A VRT can reference many (hundreds, thousands, or more) datasets. Due to "
"operating system limitations, and for performance at opening time, it is "
"not reasonable/possible to open them all at the same time. GDAL has a "
"\"pool\" of datasets opened by VRT files whose maximum limit is 100 by "
"default. When it needs to access a dataset referenced by a VRT, it checks"
" if it is already in the pool of open datasets. If not, when the pool has"
" reached its limit, it closes the least recently used dataset to be able "
"to open the new one. This maximum limit of the pool can be increased by "
"setting the :config:`GDAL_MAX_DATASET_POOL_SIZE` configuration option to "
"a bigger value. Note that a typical user process on Linux is limited to "
"1024 simultaneously opened files, and you should let some margin for "
"shared libraries, etc... gdal_translate and gdalwarp, by default, "
"increase the pool size to 450."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2210
msgid ""
"Starting with GDAL 3.7, the :config:`GDAL_MAX_DATASET_POOL_RAM_USAGE` "
"configuration option to a number of bytes, to limit the RAM usage of "
"opened datasets in the pool."
msgstr ""

#: ../../source/drivers/raster/vrt.rst:2215
msgid "Driver capabilities"
msgstr ""

#~ msgid ""
#~ "**BufferRadius** (optional, defaults to 0):"
#~ " Amount of extra pixels, with respect"
#~ " to the original RasterIO() request "
#~ "to satisfy, that are fetched at "
#~ "the left, right, bottom and top of"
#~ " the input and output buffers passed"
#~ " to the pixel function. Note that "
#~ "the values of the output buffer in"
#~ " this buffer zone willbe ignored."
#~ msgstr ""

